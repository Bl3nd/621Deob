/* jea - Decompiled by JODE
 * Visit http://jode.sourceforge.net/
 */

final class jea
{
    private boolean a = false;
    int b;
    boolean c;
    private lfa d;
    private int[] e;
    private int f;
    private nga g;
    int[] h;
    int i;
    boolean j;
    boolean k;
    int l;
    private int[] m;
    private boolean n = false;
    boolean o;
    private boolean p;
    int q;
    int r;
    
    final void a(boolean bool) {
	p = bool;
    }
    
    final void a(int i, int i_0_, int i_1_, int i_2_, int i_3_, int i_4_,
		 int i_5_, int i_6_, int i_7_, int i_8_, int i_9_, int i_10_) {
	if (p) {
	    g.e(1, i, vq.m[i_8_], i_0_, i_2_, i_3_);
	    g.e(1, i_0_, vq.m[i_8_], i_1_, i_3_, i_4_);
	    g.e(1, i_1_, vq.m[i_8_], i, i_4_, i_2_);
	} else {
	    int i_11_ = i_3_ - i_2_;
	    int i_12_ = i_0_ - i;
	    int i_13_ = i_4_ - i_2_;
	    int i_14_ = i_1_ - i;
	    int i_15_ = i_9_ - i_8_;
	    int i_16_ = i_10_ - i_8_;
	    int i_17_ = i_6_ - i_5_;
	    int i_18_ = i_7_ - i_5_;
	    int i_19_;
	    if (i_1_ != i_0_)
		i_19_ = (i_4_ - i_3_ << 16) / (i_1_ - i_0_);
	    else
		i_19_ = 0;
	    int i_20_;
	    if (i_0_ != i)
		i_20_ = (i_11_ << 16) / i_12_;
	    else
		i_20_ = 0;
	    int i_21_;
	    if (i_1_ != i)
		i_21_ = (i_13_ << 16) / i_14_;
	    else
		i_21_ = 0;
	    int i_22_ = i_11_ * i_14_ - i_13_ * i_12_;
	    if (i_22_ != 0) {
		int i_23_ = (i_15_ * i_14_ - i_16_ * i_12_ << 8) / i_22_;
		int i_24_ = (i_16_ * i_11_ - i_15_ * i_13_ << 8) / i_22_;
		int i_25_ = (i_17_ * i_14_ - i_18_ * i_12_ << 8) / i_22_;
		int i_26_ = (i_18_ * i_11_ - i_17_ * i_13_ << 8) / i_22_;
		if (i <= i_0_ && i <= i_1_) {
		    if (i < ((jea) this).r) {
			if (i_0_ > ((jea) this).r)
			    i_0_ = ((jea) this).r;
			if (i_1_ > ((jea) this).r)
			    i_1_ = ((jea) this).r;
			i_8_ = (i_8_ << 8) - i_23_ * i_2_ + i_23_;
			i_5_ = (i_5_ << 8) - i_25_ * i_2_ + i_25_;
			if (i_0_ < i_1_) {
			    i_4_ = i_2_ <<= 16;
			    if (i < 0) {
				i_4_ -= i_21_ * i;
				i_2_ -= i_20_ * i;
				i_8_ -= i_24_ * i;
				i_5_ -= i_26_ * i;
				i = 0;
			    }
			    i_3_ <<= 16;
			    if (i_0_ < 0) {
				i_3_ -= i_19_ * i_0_;
				i_0_ = 0;
			    }
			    if (i != i_0_ && i_21_ < i_20_
				|| i == i_0_ && i_21_ > i_19_) {
				i_1_ -= i_0_;
				i_0_ -= i;
				i = ((jea) this).h[i];
				while (--i_0_ >= 0) {
				    a(e, m, i, 0, 0, i_4_ >> 16, i_2_ >> 16,
				      i_8_, i_23_, i_5_, i_25_);
				    i_4_ += i_21_;
				    i_2_ += i_20_;
				    i_8_ += i_24_;
				    i_5_ += i_26_;
				    i += f;
				}
				while (--i_1_ >= 0) {
				    a(e, m, i, 0, 0, i_4_ >> 16, i_3_ >> 16,
				      i_8_, i_23_, i_5_, i_25_);
				    i_4_ += i_21_;
				    i_3_ += i_19_;
				    i_8_ += i_24_;
				    i_5_ += i_26_;
				    i += f;
				}
			    } else {
				i_1_ -= i_0_;
				i_0_ -= i;
				i = ((jea) this).h[i];
				while (--i_0_ >= 0) {
				    a(e, m, i, 0, 0, i_2_ >> 16, i_4_ >> 16,
				      i_8_, i_23_, i_5_, i_25_);
				    i_4_ += i_21_;
				    i_2_ += i_20_;
				    i_8_ += i_24_;
				    i_5_ += i_26_;
				    i += f;
				}
				while (--i_1_ >= 0) {
				    a(e, m, i, 0, 0, i_3_ >> 16, i_4_ >> 16,
				      i_8_, i_23_, i_5_, i_25_);
				    i_4_ += i_21_;
				    i_3_ += i_19_;
				    i_8_ += i_24_;
				    i_5_ += i_26_;
				    i += f;
				}
			    }
			} else {
			    i_3_ = i_2_ <<= 16;
			    if (i < 0) {
				i_3_ -= i_21_ * i;
				i_2_ -= i_20_ * i;
				i_8_ -= i_24_ * i;
				i_5_ -= i_26_ * i;
				i = 0;
			    }
			    i_4_ <<= 16;
			    if (i_1_ < 0) {
				i_4_ -= i_19_ * i_1_;
				i_1_ = 0;
			    }
			    if (i != i_1_ && i_21_ < i_20_
				|| i == i_1_ && i_19_ > i_20_) {
				i_0_ -= i_1_;
				i_1_ -= i;
				i = ((jea) this).h[i];
				while (--i_1_ >= 0) {
				    a(e, m, i, 0, 0, i_3_ >> 16, i_2_ >> 16,
				      i_8_, i_23_, i_5_, i_25_);
				    i_3_ += i_21_;
				    i_2_ += i_20_;
				    i_8_ += i_24_;
				    i_5_ += i_26_;
				    i += f;
				}
				while (--i_0_ >= 0) {
				    a(e, m, i, 0, 0, i_4_ >> 16, i_2_ >> 16,
				      i_8_, i_23_, i_5_, i_25_);
				    i_4_ += i_19_;
				    i_2_ += i_20_;
				    i_8_ += i_24_;
				    i_5_ += i_26_;
				    i += f;
				}
			    } else {
				i_0_ -= i_1_;
				i_1_ -= i;
				i = ((jea) this).h[i];
				while (--i_1_ >= 0) {
				    a(e, m, i, 0, 0, i_2_ >> 16, i_3_ >> 16,
				      i_8_, i_23_, i_5_, i_25_);
				    i_3_ += i_21_;
				    i_2_ += i_20_;
				    i_8_ += i_24_;
				    i_5_ += i_26_;
				    i += f;
				}
				while (--i_0_ >= 0) {
				    a(e, m, i, 0, 0, i_2_ >> 16, i_4_ >> 16,
				      i_8_, i_23_, i_5_, i_25_);
				    i_4_ += i_19_;
				    i_2_ += i_20_;
				    i_8_ += i_24_;
				    i_5_ += i_26_;
				    i += f;
				}
			    }
			}
		    }
		} else if (i_0_ <= i_1_) {
		    if (i_0_ < ((jea) this).r) {
			if (i_1_ > ((jea) this).r)
			    i_1_ = ((jea) this).r;
			if (i > ((jea) this).r)
			    i = ((jea) this).r;
			i_9_ = (i_9_ << 8) - i_23_ * i_3_ + i_23_;
			i_6_ = (i_6_ << 8) - i_25_ * i_3_ + i_25_;
			if (i_1_ < i) {
			    i_2_ = i_3_ <<= 16;
			    if (i_0_ < 0) {
				i_2_ -= i_20_ * i_0_;
				i_3_ -= i_19_ * i_0_;
				i_9_ -= i_24_ * i_0_;
				i_6_ -= i_26_ * i_0_;
				i_0_ = 0;
			    }
			    i_4_ <<= 16;
			    if (i_1_ < 0) {
				i_4_ -= i_21_ * i_1_;
				i_1_ = 0;
			    }
			    if (i_0_ != i_1_ && i_20_ < i_19_
				|| i_0_ == i_1_ && i_20_ > i_21_) {
				i -= i_1_;
				i_1_ -= i_0_;
				i_0_ = ((jea) this).h[i_0_];
				while (--i_1_ >= 0) {
				    a(e, m, i_0_, 0, 0, i_2_ >> 16, i_3_ >> 16,
				      i_9_, i_23_, i_6_, i_25_);
				    i_2_ += i_20_;
				    i_3_ += i_19_;
				    i_9_ += i_24_;
				    i_6_ += i_26_;
				    i_0_ += f;
				}
				while (--i >= 0) {
				    a(e, m, i_0_, 0, 0, i_2_ >> 16, i_4_ >> 16,
				      i_9_, i_23_, i_6_, i_25_);
				    i_2_ += i_20_;
				    i_4_ += i_21_;
				    i_9_ += i_24_;
				    i_6_ += i_26_;
				    i_0_ += f;
				}
			    } else {
				i -= i_1_;
				i_1_ -= i_0_;
				i_0_ = ((jea) this).h[i_0_];
				while (--i_1_ >= 0) {
				    a(e, m, i_0_, 0, 0, i_3_ >> 16, i_2_ >> 16,
				      i_9_, i_23_, i_6_, i_25_);
				    i_2_ += i_20_;
				    i_3_ += i_19_;
				    i_9_ += i_24_;
				    i_6_ += i_26_;
				    i_0_ += f;
				}
				while (--i >= 0) {
				    a(e, m, i_0_, 0, 0, i_4_ >> 16, i_2_ >> 16,
				      i_9_, i_23_, i_6_, i_25_);
				    i_2_ += i_20_;
				    i_4_ += i_21_;
				    i_9_ += i_24_;
				    i_6_ += i_26_;
				    i_0_ += f;
				}
			    }
			} else {
			    i_4_ = i_3_ <<= 16;
			    if (i_0_ < 0) {
				i_4_ -= i_20_ * i_0_;
				i_3_ -= i_19_ * i_0_;
				i_9_ -= i_24_ * i_0_;
				i_6_ -= i_26_ * i_0_;
				i_0_ = 0;
			    }
			    i_2_ <<= 16;
			    if (i < 0) {
				i_2_ -= i_21_ * i;
				i = 0;
			    }
			    if (i_20_ < i_19_) {
				i_1_ -= i;
				i -= i_0_;
				i_0_ = ((jea) this).h[i_0_];
				while (--i >= 0) {
				    a(e, m, i_0_, 0, 0, i_4_ >> 16, i_3_ >> 16,
				      i_9_, i_23_, i_6_, i_25_);
				    i_4_ += i_20_;
				    i_3_ += i_19_;
				    i_9_ += i_24_;
				    i_6_ += i_26_;
				    i_0_ += f;
				}
				while (--i_1_ >= 0) {
				    a(e, m, i_0_, 0, 0, i_2_ >> 16, i_3_ >> 16,
				      i_9_, i_23_, i_6_, i_25_);
				    i_2_ += i_21_;
				    i_3_ += i_19_;
				    i_9_ += i_24_;
				    i_6_ += i_26_;
				    i_0_ += f;
				}
			    } else {
				i_1_ -= i;
				i -= i_0_;
				i_0_ = ((jea) this).h[i_0_];
				while (--i >= 0) {
				    a(e, m, i_0_, 0, 0, i_3_ >> 16, i_4_ >> 16,
				      i_9_, i_23_, i_6_, i_25_);
				    i_4_ += i_20_;
				    i_3_ += i_19_;
				    i_9_ += i_24_;
				    i_6_ += i_26_;
				    i_0_ += f;
				}
				while (--i_1_ >= 0) {
				    a(e, m, i_0_, 0, 0, i_3_ >> 16, i_2_ >> 16,
				      i_9_, i_23_, i_6_, i_25_);
				    i_2_ += i_21_;
				    i_3_ += i_19_;
				    i_9_ += i_24_;
				    i_6_ += i_26_;
				    i_0_ += f;
				}
			    }
			}
		    }
		} else if (i_1_ < ((jea) this).r) {
		    if (i > ((jea) this).r)
			i = ((jea) this).r;
		    if (i_0_ > ((jea) this).r)
			i_0_ = ((jea) this).r;
		    i_10_ = (i_10_ << 8) - i_23_ * i_4_ + i_23_;
		    i_7_ = (i_7_ << 8) - i_25_ * i_4_ + i_25_;
		    if (i < i_0_) {
			i_3_ = i_4_ <<= 16;
			if (i_1_ < 0) {
			    i_3_ -= i_19_ * i_1_;
			    i_4_ -= i_21_ * i_1_;
			    i_10_ -= i_24_ * i_1_;
			    i_7_ -= i_26_ * i_1_;
			    i_1_ = 0;
			}
			i_2_ <<= 16;
			if (i < 0) {
			    i_2_ -= i_20_ * i;
			    i = 0;
			}
			if (i_19_ < i_21_) {
			    i_0_ -= i;
			    i -= i_1_;
			    i_1_ = ((jea) this).h[i_1_];
			    while (--i >= 0) {
				a(e, m, i_1_, 0, 0, i_3_ >> 16, i_4_ >> 16,
				  i_10_, i_23_, i_7_, i_25_);
				i_3_ += i_19_;
				i_4_ += i_21_;
				i_10_ += i_24_;
				i_7_ += i_26_;
				i_1_ += f;
			    }
			    while (--i_0_ >= 0) {
				a(e, m, i_1_, 0, 0, i_3_ >> 16, i_2_ >> 16,
				  i_10_, i_23_, i_7_, i_25_);
				i_3_ += i_19_;
				i_2_ += i_20_;
				i_10_ += i_24_;
				i_7_ += i_26_;
				i_1_ += f;
			    }
			} else {
			    i_0_ -= i;
			    i -= i_1_;
			    i_1_ = ((jea) this).h[i_1_];
			    while (--i >= 0) {
				a(e, m, i_1_, 0, 0, i_4_ >> 16, i_3_ >> 16,
				  i_10_, i_23_, i_7_, i_25_);
				i_3_ += i_19_;
				i_4_ += i_21_;
				i_10_ += i_24_;
				i_7_ += i_26_;
				i_1_ += f;
			    }
			    while (--i_0_ >= 0) {
				a(e, m, i_1_, 0, 0, i_2_ >> 16, i_3_ >> 16,
				  i_10_, i_23_, i_7_, i_25_);
				i_3_ += i_19_;
				i_2_ += i_20_;
				i_10_ += i_24_;
				i_7_ += i_26_;
				i_1_ += f;
			    }
			}
		    } else {
			i_2_ = i_4_ <<= 16;
			if (i_1_ < 0) {
			    i_2_ -= i_19_ * i_1_;
			    i_4_ -= i_21_ * i_1_;
			    i_10_ -= i_24_ * i_1_;
			    i_7_ -= i_26_ * i_1_;
			    i_1_ = 0;
			}
			i_3_ <<= 16;
			if (i_0_ < 0) {
			    i_3_ -= i_20_ * i_0_;
			    i_0_ = 0;
			}
			if (i_19_ < i_21_) {
			    i -= i_0_;
			    i_0_ -= i_1_;
			    i_1_ = ((jea) this).h[i_1_];
			    while (--i_0_ >= 0) {
				a(e, m, i_1_, 0, 0, i_2_ >> 16, i_4_ >> 16,
				  i_10_, i_23_, i_7_, i_25_);
				i_2_ += i_19_;
				i_4_ += i_21_;
				i_10_ += i_24_;
				i_7_ += i_26_;
				i_1_ += f;
			    }
			    while (--i >= 0) {
				a(e, m, i_1_, 0, 0, i_3_ >> 16, i_4_ >> 16,
				  i_10_, i_23_, i_7_, i_25_);
				i_3_ += i_20_;
				i_4_ += i_21_;
				i_10_ += i_24_;
				i_7_ += i_26_;
				i_1_ += f;
			    }
			} else {
			    i -= i_0_;
			    i_0_ -= i_1_;
			    i_1_ = ((jea) this).h[i_1_];
			    while (--i_0_ >= 0) {
				a(e, m, i_1_, 0, 0, i_4_ >> 16, i_2_ >> 16,
				  i_10_, i_23_, i_7_, i_25_);
				i_2_ += i_19_;
				i_4_ += i_21_;
				i_10_ += i_24_;
				i_7_ += i_26_;
				i_1_ += f;
			    }
			    while (--i >= 0) {
				a(e, m, i_1_, 0, 0, i_4_ >> 16, i_3_ >> 16,
				  i_10_, i_23_, i_7_, i_25_);
				i_3_ += i_20_;
				i_4_ += i_21_;
				i_10_ += i_24_;
				i_7_ += i_26_;
				i_1_ += f;
			    }
			}
		    }
		}
	    }
	}
    }
    
    private final void a(int[] is, int[] is_27_, int i, int i_28_, int i_29_,
			 int i_30_, int i_31_, int i_32_, int i_33_) {
	if (((jea) this).o) {
	    if (i_31_ > ((jea) this).b)
		i_31_ = ((jea) this).b;
	    if (i_30_ < 0)
		i_30_ = 0;
	}
	if (i_30_ < i_31_) {
	    i += i_30_ - 1;
	    i_29_ = i_31_ - i_30_ >> 2;
	    i_32_ += i_33_ * i_30_;
	    if (((lfa) d).i) {
		if (((jea) this).q == 0) {
		    while (--i_29_ >= 0) {
			if (i_32_ < is_27_[++i]) {
			    is[i] = i_28_;
			    is_27_[i] = i_32_;
			}
			i_32_ += i_33_;
			if (i_32_ < is_27_[++i]) {
			    is[i] = i_28_;
			    is_27_[i] = i_32_;
			}
			i_32_ += i_33_;
			if (i_32_ < is_27_[++i]) {
			    is[i] = i_28_;
			    is_27_[i] = i_32_;
			}
			i_32_ += i_33_;
			if (i_32_ < is_27_[++i]) {
			    is[i] = i_28_;
			    is_27_[i] = i_32_;
			}
			i_32_ += i_33_;
		    }
		    i_29_ = i_31_ - i_30_ & 0x3;
		    while (--i_29_ >= 0) {
			if (i_32_ < is_27_[++i]) {
			    is[i] = i_28_;
			    is_27_[i] = i_32_;
			}
			i_32_ += i_33_;
		    }
		} else if (((jea) this).q == 254) {
		    if (i_30_ != 0 && i_31_ <= ((jea) this).b - 1) {
			while (--i_29_ >= 0) {
			    if (i_32_ < is_27_[++i])
				is[i - 1] = is[i];
			    i_32_ += i_33_;
			    if (i_32_ < is_27_[++i])
				is[i - 1] = is[i];
			    i_32_ += i_33_;
			    if (i_32_ < is_27_[++i])
				is[i - 1] = is[i];
			    i_32_ += i_33_;
			    if (i_32_ < is_27_[++i])
				is[i - 1] = is[i];
			    i_32_ += i_33_;
			}
			i_29_ = i_31_ - i_30_ & 0x3;
			while (--i_29_ >= 0) {
			    if (i_32_ < is_27_[++i])
				is[i - 1] = is[i];
			    i_32_ += i_33_;
			}
		    }
		} else {
		    int i_34_ = ((jea) this).q;
		    int i_35_ = 256 - ((jea) this).q;
		    i_28_ = (((i_28_ & 0xff00ff) * i_35_ >> 8 & 0xff00ff)
			     + ((i_28_ & 0xff00) * i_35_ >> 8 & 0xff00));
		    while (--i_29_ >= 0) {
			if (i_32_ < is_27_[++i]) {
			    int i_36_ = is[i];
			    is[i]
				= (i_28_
				   + ((i_36_ & 0xff00ff) * i_34_ >> 8
				      & 0xff00ff)
				   + ((i_36_ & 0xff00) * i_34_ >> 8 & 0xff00));
			    is_27_[i] = i_32_;
			}
			i_32_ += i_33_;
			if (i_32_ < is_27_[++i]) {
			    int i_37_ = is[i];
			    is[i]
				= (i_28_
				   + ((i_37_ & 0xff00ff) * i_34_ >> 8
				      & 0xff00ff)
				   + ((i_37_ & 0xff00) * i_34_ >> 8 & 0xff00));
			    is_27_[i] = i_32_;
			}
			i_32_ += i_33_;
			if (i_32_ < is_27_[++i]) {
			    int i_38_ = is[i];
			    is[i]
				= (i_28_
				   + ((i_38_ & 0xff00ff) * i_34_ >> 8
				      & 0xff00ff)
				   + ((i_38_ & 0xff00) * i_34_ >> 8 & 0xff00));
			    is_27_[i] = i_32_;
			}
			i_32_ += i_33_;
			if (i_32_ < is_27_[++i]) {
			    int i_39_ = is[i];
			    is[i]
				= (i_28_
				   + ((i_39_ & 0xff00ff) * i_34_ >> 8
				      & 0xff00ff)
				   + ((i_39_ & 0xff00) * i_34_ >> 8 & 0xff00));
			    is_27_[i] = i_32_;
			}
			i_32_ += i_33_;
		    }
		    i_29_ = i_31_ - i_30_ & 0x3;
		    while (--i_29_ >= 0) {
			if (i_32_ < is_27_[++i]) {
			    int i_40_ = is[i];
			    is[i]
				= (i_28_
				   + ((i_40_ & 0xff00ff) * i_34_ >> 8
				      & 0xff00ff)
				   + ((i_40_ & 0xff00) * i_34_ >> 8 & 0xff00));
			    is_27_[i] = i_32_;
			}
			i_32_ += i_33_;
		    }
		}
	    } else if (((jea) this).q == 0) {
		while (--i_29_ >= 0) {
		    if (i_32_ < is_27_[++i])
			is[i] = i_28_;
		    i_32_ += i_33_;
		    if (i_32_ < is_27_[++i])
			is[i] = i_28_;
		    i_32_ += i_33_;
		    if (i_32_ < is_27_[++i])
			is[i] = i_28_;
		    i_32_ += i_33_;
		    if (i_32_ < is_27_[++i])
			is[i] = i_28_;
		    i_32_ += i_33_;
		}
		i_29_ = i_31_ - i_30_ & 0x3;
		while (--i_29_ >= 0) {
		    if (i_32_ < is_27_[++i])
			is[i] = i_28_;
		    i_32_ += i_33_;
		}
	    } else if (((jea) this).q == 254) {
		if (i_30_ != 0 && i_31_ <= ((jea) this).b - 1) {
		    while (--i_29_ >= 0) {
			if (i_32_ < is_27_[++i])
			    is[i - 1] = is[i];
			i_32_ += i_33_;
			if (i_32_ < is_27_[++i])
			    is[i - 1] = is[i];
			i_32_ += i_33_;
			if (i_32_ < is_27_[++i])
			    is[i - 1] = is[i];
			i_32_ += i_33_;
			if (i_32_ < is_27_[++i])
			    is[i - 1] = is[i];
			i_32_ += i_33_;
		    }
		    i_29_ = i_31_ - i_30_ & 0x3;
		    while (--i_29_ >= 0) {
			if (i_32_ < is_27_[++i])
			    is[i - 1] = is[i];
			i_32_ += i_33_;
		    }
		}
	    } else {
		int i_41_ = ((jea) this).q;
		int i_42_ = 256 - ((jea) this).q;
		i_28_ = (((i_28_ & 0xff00ff) * i_42_ >> 8 & 0xff00ff)
			 + ((i_28_ & 0xff00) * i_42_ >> 8 & 0xff00));
		while (--i_29_ >= 0) {
		    if (i_32_ < is_27_[++i]) {
			int i_43_ = is[i];
			is[i] = (i_28_
				 + ((i_43_ & 0xff00ff) * i_41_ >> 8 & 0xff00ff)
				 + ((i_43_ & 0xff00) * i_41_ >> 8 & 0xff00));
		    }
		    i_32_ += i_33_;
		    if (i_32_ < is_27_[++i]) {
			int i_44_ = is[i];
			is[i] = (i_28_
				 + ((i_44_ & 0xff00ff) * i_41_ >> 8 & 0xff00ff)
				 + ((i_44_ & 0xff00) * i_41_ >> 8 & 0xff00));
		    }
		    i_32_ += i_33_;
		    if (i_32_ < is_27_[++i]) {
			int i_45_ = is[i];
			is[i] = (i_28_
				 + ((i_45_ & 0xff00ff) * i_41_ >> 8 & 0xff00ff)
				 + ((i_45_ & 0xff00) * i_41_ >> 8 & 0xff00));
		    }
		    i_32_ += i_33_;
		    if (i_32_ < is_27_[++i]) {
			int i_46_ = is[i];
			is[i] = (i_28_
				 + ((i_46_ & 0xff00ff) * i_41_ >> 8 & 0xff00ff)
				 + ((i_46_ & 0xff00) * i_41_ >> 8 & 0xff00));
		    }
		    i_32_ += i_33_;
		}
		i_29_ = i_31_ - i_30_ & 0x3;
		while (--i_29_ >= 0) {
		    if (i_32_ < is_27_[++i]) {
			int i_47_ = is[i];
			is[i] = (i_28_
				 + ((i_47_ & 0xff00ff) * i_41_ >> 8 & 0xff00ff)
				 + ((i_47_ & 0xff00) * i_41_ >> 8 & 0xff00));
		    }
		    i_32_ += i_33_;
		}
	    }
	}
    }
    
    private final void a(int[] is, int[] is_48_, int i, int i_49_, int i_50_,
			 int i_51_, int i_52_, int i_53_, int i_54_, int i_55_,
			 int i_56_, int i_57_, int i_58_, int i_59_, float f,
			 float f_60_, float f_61_, float f_62_, float f_63_,
			 float f_64_) {
	if (((jea) this).o) {
	    if (i_52_ > ((jea) this).b)
		i_52_ = ((jea) this).b;
	    if (i_51_ < 0)
		i_51_ = 0;
	}
	if (i_51_ < i_52_) {
	    i_50_ += i_51_;
	    i_55_ += i_56_ * i_51_;
	    i_58_ += i_59_ * i_51_;
	    i_53_ += i_54_ * i_51_;
	    int i_65_ = i_52_ - i_51_;
	    i_56_ <<= 3;
	    int i_66_ = i_55_ >> 16;
	    int i_67_ = 255 - i_66_;
	    int i_68_ = (((i_57_ & 0xff00ff) * i_66_ & ~0xff00ff
			  | (i_57_ & 0xff00) * i_66_ & 0xff0000)
			 >>> 8);
	    int i_69_ = ((jea) this).q;
	    int i_70_ = 256 - ((jea) this).q;
	    do {
		if (a) {
		    int i_71_ = i_51_ - ((jea) this).i;
		    f += f_62_ / 8.0F * (float) i_71_;
		    f_60_ += f_63_ / 8.0F * (float) i_71_;
		    f_61_ += f_64_ / 8.0F * (float) i_71_;
		    int i_72_;
		    int i_73_;
		    if (f_61_ != 0.0F) {
			i_72_ = (int) (f * 4096.0F / f_61_);
			i_73_ = (int) (f_60_ * 4096.0F / f_61_);
		    } else {
			i_72_ = 0;
			i_73_ = 0;
		    }
		    f += f_62_;
		    f_60_ += f_63_;
		    f_61_ += f_64_;
		    int i_74_;
		    int i_75_;
		    if (f_61_ != 0.0F) {
			i_74_ = (int) (f * 4096.0F / f_61_);
			i_75_ = (int) (f_60_ * 4096.0F / f_61_);
		    } else {
			i_74_ = 0;
			i_75_ = 0;
		    }
		    i = (i_72_ << 20) + i_73_;
		    int i_76_
			= (i_74_ - i_72_ >> 3 << 20) + (i_75_ - i_73_ >> 3);
		    i_65_ >>= 3;
		    i_59_ <<= 3;
		    int i_77_ = i_58_ >> 8;
		    if (n) {
			if (i_65_ > 0) {
			    do {
				if (i_53_ < m[i_50_]) {
				    int i_78_ = is[i_50_];
				    i_49_ = is_48_[(i & 0xfc0) + (i >>> 26)];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_78_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_78_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i += i_76_;
				i_50_++;
				i_53_ += i_54_;
				if (i_53_ < m[i_50_]) {
				    int i_79_ = is[i_50_];
				    i_49_ = is_48_[(i & 0xfc0) + (i >>> 26)];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_79_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_79_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i += i_76_;
				i_50_++;
				i_53_ += i_54_;
				if (i_53_ < m[i_50_]) {
				    int i_80_ = is[i_50_];
				    i_49_ = is_48_[(i & 0xfc0) + (i >>> 26)];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_80_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_80_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i += i_76_;
				i_50_++;
				i_53_ += i_54_;
				if (i_53_ < m[i_50_]) {
				    int i_81_ = is[i_50_];
				    i_49_ = is_48_[(i & 0xfc0) + (i >>> 26)];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_81_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_81_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i += i_76_;
				i_50_++;
				i_53_ += i_54_;
				if (i_53_ < m[i_50_]) {
				    int i_82_ = is[i_50_];
				    i_49_ = is_48_[(i & 0xfc0) + (i >>> 26)];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_82_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_82_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i += i_76_;
				i_50_++;
				i_53_ += i_54_;
				if (i_53_ < m[i_50_]) {
				    int i_83_ = is[i_50_];
				    i_49_ = is_48_[(i & 0xfc0) + (i >>> 26)];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_83_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_83_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i += i_76_;
				i_50_++;
				i_53_ += i_54_;
				if (i_53_ < m[i_50_]) {
				    int i_84_ = is[i_50_];
				    i_49_ = is_48_[(i & 0xfc0) + (i >>> 26)];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_84_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_84_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i += i_76_;
				i_50_++;
				i_53_ += i_54_;
				if (i_53_ < m[i_50_]) {
				    int i_85_ = is[i_50_];
				    i_49_ = is_48_[(i & 0xfc0) + (i >>> 26)];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_85_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_85_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i += i_76_;
				i_50_++;
				i_53_ += i_54_;
				i_72_ = i_74_;
				i_73_ = i_75_;
				f += f_62_;
				f_60_ += f_63_;
				f_61_ += f_64_;
				if (f_61_ != 0.0F) {
				    i_74_ = (int) (f * 4096.0F / f_61_);
				    i_75_ = (int) (f_60_ * 4096.0F / f_61_);
				} else {
				    i_74_ = 0;
				    i_75_ = 0;
				}
				i = (i_72_ << 20) + i_73_;
				i_76_ = ((i_74_ - i_72_ >> 3 << 20)
					 + (i_75_ - i_73_ >> 3));
				i_58_ += i_59_;
				i_77_ = i_58_ >> 8;
				i_55_ += i_56_;
				i_66_ = i_55_ >> 16;
				i_67_ = 255 - i_66_;
				i_68_
				    = (((i_57_ & 0xff00ff) * i_66_ & ~0xff00ff
					| (i_57_ & 0xff00) * i_66_ & 0xff0000)
				       >>> 8);
			    } while (--i_65_ > 0);
			}
			i_65_ = i_52_ - i_51_ & 0x7;
			if (i_65_ > 0) {
			    do {
				if (i_53_ < m[i_50_]) {
				    int i_86_ = is[i_50_];
				    i_49_ = is_48_[(i & 0xfc0) + (i >>> 26)];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_86_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_86_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i += i_76_;
				i_50_++;
				i_53_ += i_54_;
			    } while (--i_65_ > 0);
			}
		    } else {
			if (i_65_ > 0) {
			    do {
				if (i_53_ < m[i_50_]
				    && ((i_49_
					 = is_48_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_87_ = is[i_50_];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_87_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_87_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i_50_++;
				i += i_76_;
				i_53_ += i_54_;
				if (i_53_ < m[i_50_]
				    && ((i_49_
					 = is_48_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_88_ = is[i_50_];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_88_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_88_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i_50_++;
				i += i_76_;
				i_53_ += i_54_;
				if (i_53_ < m[i_50_]
				    && ((i_49_
					 = is_48_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_89_ = is[i_50_];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_89_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_89_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i_50_++;
				i += i_76_;
				i_53_ += i_54_;
				if (i_53_ < m[i_50_]
				    && ((i_49_
					 = is_48_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_90_ = is[i_50_];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_90_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_90_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i_50_++;
				i += i_76_;
				i_53_ += i_54_;
				if (i_53_ < m[i_50_]
				    && ((i_49_
					 = is_48_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_91_ = is[i_50_];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_91_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_91_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i_50_++;
				i += i_76_;
				i_53_ += i_54_;
				if (i_53_ < m[i_50_]
				    && ((i_49_
					 = is_48_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_92_ = is[i_50_];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_92_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_92_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i_50_++;
				i += i_76_;
				i_53_ += i_54_;
				if (i_53_ < m[i_50_]
				    && ((i_49_
					 = is_48_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_93_ = is[i_50_];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_93_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_93_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i_50_++;
				i += i_76_;
				i_53_ += i_54_;
				if (i_53_ < m[i_50_]
				    && ((i_49_
					 = is_48_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_94_ = is[i_50_];
				    i_49_ = (((i_49_ & 0xff00ff) * i_77_
					      & ~0xff00ff)
					     + ((i_49_ & 0xff00) * i_77_
						& 0xff0000)) >> 8;
				    i_49_ = ((((i_94_ & 0xff00ff) * i_69_
					       + (i_49_ & 0xff00ff) * i_70_)
					      & ~0xff00ff)
					     + (((i_94_ & 0xff00) * i_69_
						 + (i_49_ & 0xff00) * i_70_)
						& 0xff0000)) >> 8;
				    is[i_50_] = ((((i_49_ & 0xff00ff) * i_67_
						   & ~0xff00ff)
						  | ((i_49_ & 0xff00) * i_67_
						     & 0xff0000))
						 >>> 8) + i_68_;
				}
				i_50_++;
				i += i_76_;
				i_53_ += i_54_;
				i_72_ = i_74_;
				i_73_ = i_75_;
				f += f_62_;
				f_60_ += f_63_;
				f_61_ += f_64_;
				if (f_61_ != 0.0F) {
				    i_74_ = (int) (f * 4096.0F / f_61_);
				    i_75_ = (int) (f_60_ * 4096.0F / f_61_);
				} else {
				    i_74_ = 0;
				    i_75_ = 0;
				}
				i = (i_72_ << 20) + i_73_;
				i_76_ = ((i_74_ - i_72_ >> 3 << 20)
					 + (i_75_ - i_73_ >> 3));
				i_58_ += i_59_;
				i_77_ = i_58_ >> 8;
				i_55_ += i_56_;
				i_66_ = i_55_ >> 16;
				i_67_ = 255 - i_66_;
				i_68_
				    = (((i_57_ & 0xff00ff) * i_66_ & ~0xff00ff
					| (i_57_ & 0xff00) * i_66_ & 0xff0000)
				       >>> 8);
			    } while (--i_65_ > 0);
			}
			i_65_ = i_52_ - i_51_ & 0x7;
			if (i_65_ <= 0)
			    break;
			do {
			    if (i_53_ < m[i_50_]
				&& ((i_49_ = is_48_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_95_ = is[i_50_];
				i_49_
				    = (((i_49_ & 0xff00ff) * i_77_ & ~0xff00ff)
				       + ((i_49_ & 0xff00) * i_77_
					  & 0xff0000)) >> 8;
				i_49_ = ((((i_95_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_95_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i_50_++;
			    i += i_76_;
			    i_53_ += i_54_;
			} while (--i_65_ > 0);
		    }
		    break;
		}
		int i_96_ = i_51_ - ((jea) this).i;
		f += f_62_ / 8.0F * (float) i_96_;
		f_60_ += f_63_ / 8.0F * (float) i_96_;
		f_61_ += f_64_ / 8.0F * (float) i_96_;
		int i_97_;
		int i_98_;
		if (f_61_ != 0.0F) {
		    i_97_ = (int) (f * 16384.0F / f_61_);
		    i_98_ = (int) (f_60_ * 16384.0F / f_61_);
		} else {
		    i_97_ = 0;
		    i_98_ = 0;
		}
		f += f_62_;
		f_60_ += f_63_;
		f_61_ += f_64_;
		int i_99_;
		int i_100_;
		if (f_61_ != 0.0F) {
		    i_99_ = (int) (f * 16384.0F / f_61_);
		    i_100_ = (int) (f_60_ * 16384.0F / f_61_);
		} else {
		    i_99_ = 0;
		    i_100_ = 0;
		}
		i = (i_97_ << 18) + i_98_;
		int i_101_
		    = (i_99_ - i_97_ >> 3 << 18) + (i_100_ - i_98_ >> 3);
		i_65_ >>= 3;
		i_59_ <<= 3;
		int i_102_ = i_58_ >> 8;
		if (n) {
		    if (i_65_ > 0) {
			do {
			    if (i_53_ < m[i_50_]) {
				i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)];
				int i_103_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_103_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_103_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i += i_101_;
			    i_50_++;
			    i_53_ += i_54_;
			    if (i_53_ < m[i_50_]) {
				i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)];
				int i_104_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_104_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_104_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i += i_101_;
			    i_50_++;
			    i_53_ += i_54_;
			    if (i_53_ < m[i_50_]) {
				i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)];
				int i_105_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_105_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_105_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i += i_101_;
			    i_50_++;
			    i_53_ += i_54_;
			    if (i_53_ < m[i_50_]) {
				i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)];
				int i_106_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_106_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_106_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i += i_101_;
			    i_50_++;
			    i_53_ += i_54_;
			    if (i_53_ < m[i_50_]) {
				i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)];
				int i_107_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_107_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_107_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i += i_101_;
			    i_50_++;
			    i_53_ += i_54_;
			    if (i_53_ < m[i_50_]) {
				i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)];
				int i_108_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_108_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_108_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i += i_101_;
			    i_50_++;
			    i_53_ += i_54_;
			    if (i_53_ < m[i_50_]) {
				i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)];
				int i_109_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_109_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_109_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i += i_101_;
			    i_50_++;
			    i_53_ += i_54_;
			    if (i_53_ < m[i_50_]) {
				i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)];
				int i_110_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_110_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_110_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i += i_101_;
			    i_50_++;
			    i_53_ += i_54_;
			    i_97_ = i_99_;
			    i_98_ = i_100_;
			    f += f_62_;
			    f_60_ += f_63_;
			    f_61_ += f_64_;
			    if (f_61_ != 0.0F) {
				i_99_ = (int) (f * 16384.0F / f_61_);
				i_100_ = (int) (f_60_ * 16384.0F / f_61_);
			    } else {
				i_99_ = 0;
				i_100_ = 0;
			    }
			    i = (i_97_ << 18) + i_98_;
			    i_101_
				= (i_99_ - i_97_ >> 3 << 18) + (i_100_ - i_98_
								>> 3);
			    i_58_ += i_59_;
			    i_102_ = i_58_ >> 8;
			    i_55_ += i_56_;
			    i_66_ = i_55_ >> 16;
			    i_67_ = 255 - i_66_;
			    i_68_ = (((i_57_ & 0xff00ff) * i_66_ & ~0xff00ff
				      | (i_57_ & 0xff00) * i_66_ & 0xff0000)
				     >>> 8);
			} while (--i_65_ > 0);
		    }
		    i_65_ = i_52_ - i_51_ & 0x7;
		    if (i_65_ > 0) {
			do {
			    if (i_53_ < m[i_50_]) {
				i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)];
				int i_111_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_111_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_111_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i += i_101_;
			    i_50_++;
			    i_53_ += i_54_;
			} while (--i_65_ > 0);
			break;
		    }
		} else {
		    if (i_65_ > 0) {
			do {
			    if (i_53_ < m[i_50_]
				&& ((i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_112_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_112_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_112_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i_50_++;
			    i += i_101_;
			    i_53_ += i_54_;
			    if (i_53_ < m[i_50_]
				&& ((i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_113_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_113_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_113_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i_50_++;
			    i += i_101_;
			    i_53_ += i_54_;
			    if (i_53_ < m[i_50_]
				&& ((i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_114_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_114_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_114_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i_50_++;
			    i += i_101_;
			    i_53_ += i_54_;
			    if (i_53_ < m[i_50_]
				&& ((i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_115_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_115_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_115_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i_50_++;
			    i += i_101_;
			    i_53_ += i_54_;
			    if (i_53_ < m[i_50_]
				&& ((i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_116_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_116_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_116_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i_50_++;
			    i += i_101_;
			    i_53_ += i_54_;
			    if (i_53_ < m[i_50_]
				&& ((i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_117_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_117_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_117_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i_50_++;
			    i += i_101_;
			    i_53_ += i_54_;
			    if (i_53_ < m[i_50_]
				&& ((i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_118_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_118_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_118_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i_50_++;
			    i += i_101_;
			    i_53_ += i_54_;
			    if (i_53_ < m[i_50_]
				&& ((i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_119_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_119_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_119_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i_50_++;
			    i += i_101_;
			    i_53_ += i_54_;
			    i_97_ = i_99_;
			    i_98_ = i_100_;
			    f += f_62_;
			    f_60_ += f_63_;
			    f_61_ += f_64_;
			    if (f_61_ != 0.0F) {
				i_99_ = (int) (f * 16384.0F / f_61_);
				i_100_ = (int) (f_60_ * 16384.0F / f_61_);
			    } else {
				i_99_ = 0;
				i_100_ = 0;
			    }
			    i = (i_97_ << 18) + i_98_;
			    i_101_
				= (i_99_ - i_97_ >> 3 << 18) + (i_100_ - i_98_
								>> 3);
			    i_58_ += i_59_;
			    i_102_ = i_58_ >> 8;
			    i_55_ += i_56_;
			    i_66_ = i_55_ >> 16;
			    i_67_ = 255 - i_66_;
			    i_68_ = (((i_57_ & 0xff00ff) * i_66_ & ~0xff00ff
				      | (i_57_ & 0xff00) * i_66_ & 0xff0000)
				     >>> 8);
			} while (--i_65_ > 0);
		    }
		    i_65_ = i_52_ - i_51_ & 0x7;
		    if (i_65_ > 0) {
			do {
			    if (i_53_ < m[i_50_]
				&& ((i_49_ = is_48_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_120_ = is[i_50_];
				i_49_ = (((i_49_ & 0xff00ff) * i_102_
					  & ~0xff00ff)
					 + ((i_49_ & 0xff00) * i_102_
					    & 0xff0000)) >> 8;
				i_49_ = ((((i_120_ & 0xff00ff) * i_69_
					   + (i_49_ & 0xff00ff) * i_70_)
					  & ~0xff00ff)
					 + (((i_120_ & 0xff00) * i_69_
					     + (i_49_ & 0xff00) * i_70_)
					    & 0xff0000)) >> 8;
				is[i_50_]
				    = (((i_49_ & 0xff00ff) * i_67_ & ~0xff00ff
					| (i_49_ & 0xff00) * i_67_ & 0xff0000)
				       >>> 8) + i_68_;
			    }
			    i_50_++;
			    i += i_101_;
			    i_53_ += i_54_;
			} while (--i_65_ > 0);
		    }
		}
	    } while (false);
	}
    }
    
    private final void a(int[] is, int[] is_121_, int[] is_122_, int i,
			 int i_123_, int i_124_, int i_125_, int i_126_,
			 int i_127_, int i_128_, int i_129_, int i_130_,
			 float f, float f_131_, float f_132_, float f_133_,
			 float f_134_, float f_135_) {
	int i_136_ = i_126_ - i_125_;
	int i_137_ = ((jea) this).q;
	int i_138_ = 256 - ((jea) this).q;
	do {
	    if (a) {
		int i_139_ = i_125_ - ((jea) this).i;
		f += f_133_ / 8.0F * (float) i_139_;
		f_131_ += f_134_ / 8.0F * (float) i_139_;
		f_132_ += f_135_ / 8.0F * (float) i_139_;
		int i_140_;
		int i_141_;
		if (f_132_ != 0.0F) {
		    i_140_ = (int) (f * 4096.0F / f_132_);
		    i_141_ = (int) (f_131_ * 4096.0F / f_132_);
		} else {
		    i_140_ = 0;
		    i_141_ = 0;
		}
		f += f_133_;
		f_131_ += f_134_;
		f_132_ += f_135_;
		int i_142_;
		int i_143_;
		if (f_132_ != 0.0F) {
		    i_142_ = (int) (f * 4096.0F / f_132_);
		    i_143_ = (int) (f_131_ * 4096.0F / f_132_);
		} else {
		    i_142_ = 0;
		    i_143_ = 0;
		}
		i = (i_140_ << 20) + i_141_;
		int i_144_
		    = (i_142_ - i_140_ >> 3 << 20) + (i_143_ - i_141_ >> 3);
		i_136_ >>= 3;
		i_130_ <<= 3;
		int i_145_ = i_129_ >> 8;
		if (n) {
		    if (i_136_ > 0) {
			do {
			    if (i_127_ < is_121_[i_124_]) {
				int i_146_ = is[i_124_];
				i_123_ = is_122_[(i & 0xfc0) + (i >>> 26)];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_146_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_146_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i += i_144_;
			    i_124_++;
			    if (i_127_ < is_121_[i_124_]) {
				int i_147_ = is[i_124_];
				i_123_ = is_122_[(i & 0xfc0) + (i >>> 26)];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_147_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_147_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i += i_144_;
			    i_124_++;
			    if (i_127_ < is_121_[i_124_]) {
				int i_148_ = is[i_124_];
				i_123_ = is_122_[(i & 0xfc0) + (i >>> 26)];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_148_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_148_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i += i_144_;
			    i_124_++;
			    if (i_127_ < is_121_[i_124_]) {
				int i_149_ = is[i_124_];
				i_123_ = is_122_[(i & 0xfc0) + (i >>> 26)];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_149_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_149_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i += i_144_;
			    i_124_++;
			    if (i_127_ < is_121_[i_124_]) {
				int i_150_ = is[i_124_];
				i_123_ = is_122_[(i & 0xfc0) + (i >>> 26)];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_150_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_150_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i += i_144_;
			    i_124_++;
			    if (i_127_ < is_121_[i_124_]) {
				int i_151_ = is[i_124_];
				i_123_ = is_122_[(i & 0xfc0) + (i >>> 26)];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_151_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_151_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i += i_144_;
			    i_124_++;
			    if (i_127_ < is_121_[i_124_]) {
				int i_152_ = is[i_124_];
				i_123_ = is_122_[(i & 0xfc0) + (i >>> 26)];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_152_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_152_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i += i_144_;
			    i_124_++;
			    if (i_127_ < is_121_[i_124_]) {
				int i_153_ = is[i_124_];
				i_123_ = is_122_[(i & 0xfc0) + (i >>> 26)];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_153_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_153_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i += i_144_;
			    i_124_++;
			    i_140_ = i_142_;
			    i_141_ = i_143_;
			    f += f_133_;
			    f_131_ += f_134_;
			    f_132_ += f_135_;
			    if (f_132_ != 0.0F) {
				i_142_ = (int) (f * 4096.0F / f_132_);
				i_143_ = (int) (f_131_ * 4096.0F / f_132_);
			    } else {
				i_142_ = 0;
				i_143_ = 0;
			    }
			    i = (i_140_ << 20) + i_141_;
			    i_144_ = ((i_142_ - i_140_ >> 3 << 20)
				      + (i_143_ - i_141_ >> 3));
			    i_129_ += i_130_;
			    i_145_ = i_129_ >> 8;
			} while (--i_136_ > 0);
		    }
		    i_136_ = i_126_ - i_125_ & 0x7;
		    if (i_136_ > 0) {
			do {
			    if (i_127_ < is_121_[i_124_]) {
				int i_154_ = is[i_124_];
				i_123_ = is_122_[(i & 0xfc0) + (i >>> 26)];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_154_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_154_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i += i_144_;
			    i_124_++;
			} while (--i_136_ > 0);
		    }
		} else {
		    if (i_136_ > 0) {
			do {
			    if (i_127_ < is_121_[i_124_]
				&& ((i_123_
				     = is_122_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_155_ = is[i_124_];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_155_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_155_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i_124_++;
			    i += i_144_;
			    if (i_127_ < is_121_[i_124_]
				&& ((i_123_
				     = is_122_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_156_ = is[i_124_];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_156_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_156_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i_124_++;
			    i += i_144_;
			    if (i_127_ < is_121_[i_124_]
				&& ((i_123_
				     = is_122_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_157_ = is[i_124_];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_157_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_157_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i_124_++;
			    i += i_144_;
			    if (i_127_ < is_121_[i_124_]
				&& ((i_123_
				     = is_122_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_158_ = is[i_124_];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_158_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_158_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i_124_++;
			    i += i_144_;
			    if (i_127_ < is_121_[i_124_]
				&& ((i_123_
				     = is_122_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_159_ = is[i_124_];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_159_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_159_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i_124_++;
			    i += i_144_;
			    if (i_127_ < is_121_[i_124_]
				&& ((i_123_
				     = is_122_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_160_ = is[i_124_];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_160_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_160_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i_124_++;
			    i += i_144_;
			    if (i_127_ < is_121_[i_124_]
				&& ((i_123_
				     = is_122_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_161_ = is[i_124_];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_161_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_161_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i_124_++;
			    i += i_144_;
			    if (i_127_ < is_121_[i_124_]
				&& ((i_123_
				     = is_122_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_162_ = is[i_124_];
				i_123_ = (((i_123_ & 0xff00ff) * i_145_
					   & ~0xff00ff)
					  + ((i_123_ & 0xff00) * i_145_
					     & 0xff0000)) >> 8;
				is[i_124_] = ((((i_162_ & 0xff00ff) * i_137_
						+ (i_123_ & 0xff00ff) * i_138_)
					       & ~0xff00ff)
					      + (((i_162_ & 0xff00) * i_137_
						  + (i_123_ & 0xff00) * i_138_)
						 & 0xff0000)) >> 8;
			    }
			    i_127_ += i_128_;
			    i_124_++;
			    i += i_144_;
			    i_140_ = i_142_;
			    i_141_ = i_143_;
			    f += f_133_;
			    f_131_ += f_134_;
			    f_132_ += f_135_;
			    if (f_132_ != 0.0F) {
				i_142_ = (int) (f * 4096.0F / f_132_);
				i_143_ = (int) (f_131_ * 4096.0F / f_132_);
			    } else {
				i_142_ = 0;
				i_143_ = 0;
			    }
			    i = (i_140_ << 20) + i_141_;
			    i_144_ = ((i_142_ - i_140_ >> 3 << 20)
				      + (i_143_ - i_141_ >> 3));
			    i_129_ += i_130_;
			    i_145_ = i_129_ >> 8;
			} while (--i_136_ > 0);
		    }
		    i_136_ = i_126_ - i_125_ & 0x7;
		    if (i_136_ <= 0)
			break;
		    do {
			if (i_127_ < is_121_[i_124_]
			    && ((i_123_ = is_122_[(i & 0xfc0) + (i >>> 26)])
				!= 0)) {
			    int i_163_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_145_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_145_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_163_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_163_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_144_;
		    } while (--i_136_ > 0);
		}
		break;
	    }
	    int i_164_ = i_125_ - ((jea) this).i;
	    f += f_133_ / 8.0F * (float) i_164_;
	    f_131_ += f_134_ / 8.0F * (float) i_164_;
	    f_132_ += f_135_ / 8.0F * (float) i_164_;
	    int i_165_;
	    int i_166_;
	    if (f_132_ != 0.0F) {
		i_165_ = (int) (f * 16384.0F / f_132_);
		i_166_ = (int) (f_131_ * 16384.0F / f_132_);
	    } else {
		i_165_ = 0;
		i_166_ = 0;
	    }
	    f += f_133_;
	    f_131_ += f_134_;
	    f_132_ += f_135_;
	    int i_167_;
	    int i_168_;
	    if (f_132_ != 0.0F) {
		i_167_ = (int) (f * 16384.0F / f_132_);
		i_168_ = (int) (f_131_ * 16384.0F / f_132_);
	    } else {
		i_167_ = 0;
		i_168_ = 0;
	    }
	    i = (i_165_ << 18) + i_166_;
	    int i_169_ = (i_167_ - i_165_ >> 3 << 18) + (i_168_ - i_166_ >> 3);
	    i_136_ >>= 3;
	    i_130_ <<= 3;
	    int i_170_ = i_129_ >> 8;
	    if (n) {
		if (i_136_ > 0) {
		    do {
			if (i_127_ < is_121_[i_124_]) {
			    i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)];
			    int i_171_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_171_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_171_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			if (i_127_ < is_121_[i_124_]) {
			    i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)];
			    int i_172_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_172_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_172_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			if (i_127_ < is_121_[i_124_]) {
			    i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)];
			    int i_173_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_173_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_173_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			if (i_127_ < is_121_[i_124_]) {
			    i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)];
			    int i_174_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_174_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_174_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			if (i_127_ < is_121_[i_124_]) {
			    i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)];
			    int i_175_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_175_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_175_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			if (i_127_ < is_121_[i_124_]) {
			    i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)];
			    int i_176_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_176_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_176_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			if (i_127_ < is_121_[i_124_]) {
			    i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)];
			    int i_177_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_177_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_177_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			if (i_127_ < is_121_[i_124_]) {
			    i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)];
			    int i_178_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_178_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_178_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			i_165_ = i_167_;
			i_166_ = i_168_;
			f += f_133_;
			f_131_ += f_134_;
			f_132_ += f_135_;
			if (f_132_ != 0.0F) {
			    i_167_ = (int) (f * 16384.0F / f_132_);
			    i_168_ = (int) (f_131_ * 16384.0F / f_132_);
			} else {
			    i_167_ = 0;
			    i_168_ = 0;
			}
			i = (i_165_ << 18) + i_166_;
			i_169_
			    = (i_167_ - i_165_ >> 3 << 18) + (i_168_ - i_166_
							      >> 3);
			i_129_ += i_130_;
			i_170_ = i_129_ >> 8;
		    } while (--i_136_ > 0);
		}
		i_136_ = i_126_ - i_125_ & 0x7;
		if (i_136_ > 0) {
		    do {
			if (i_127_ < is_121_[i_124_]) {
			    i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)];
			    int i_179_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_179_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_179_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
		    } while (--i_136_ > 0);
		    break;
		}
	    } else {
		if (i_136_ > 0) {
		    do {
			if (i_127_ < is_121_[i_124_]
			    && ((i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_180_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_180_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_180_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			if (i_127_ < is_121_[i_124_]
			    && ((i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_181_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_181_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_181_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			if (i_127_ < is_121_[i_124_]
			    && ((i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_182_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_182_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_182_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			if (i_127_ < is_121_[i_124_]
			    && ((i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_183_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_183_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_183_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			if (i_127_ < is_121_[i_124_]
			    && ((i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_184_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_184_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_184_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			if (i_127_ < is_121_[i_124_]
			    && ((i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_185_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_185_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_185_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			if (i_127_ < is_121_[i_124_]
			    && ((i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_186_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_186_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_186_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			if (i_127_ < is_121_[i_124_]
			    && ((i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_187_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_187_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_187_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
			i_165_ = i_167_;
			i_166_ = i_168_;
			f += f_133_;
			f_131_ += f_134_;
			f_132_ += f_135_;
			if (f_132_ != 0.0F) {
			    i_167_ = (int) (f * 16384.0F / f_132_);
			    i_168_ = (int) (f_131_ * 16384.0F / f_132_);
			} else {
			    i_167_ = 0;
			    i_168_ = 0;
			}
			i = (i_165_ << 18) + i_166_;
			i_169_
			    = (i_167_ - i_165_ >> 3 << 18) + (i_168_ - i_166_
							      >> 3);
			i_129_ += i_130_;
			i_170_ = i_129_ >> 8;
		    } while (--i_136_ > 0);
		}
		i_136_ = i_126_ - i_125_ & 0x7;
		if (i_136_ > 0) {
		    do {
			if (i_127_ < is_121_[i_124_]
			    && ((i_123_ = is_122_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_188_ = is[i_124_];
			    i_123_
				= ((((i_123_ & 0xff00ff) * i_170_ & ~0xff00ff)
				    + ((i_123_ & 0xff00) * i_170_ & 0xff0000))
				   >> 8);
			    is[i_124_] = ((((i_188_ & 0xff00ff) * i_137_
					    + (i_123_ & 0xff00ff) * i_138_)
					   & ~0xff00ff)
					  + (((i_188_ & 0xff00) * i_137_
					      + (i_123_ & 0xff00) * i_138_)
					     & 0xff0000)) >> 8;
			}
			i_127_ += i_128_;
			i_124_++;
			i += i_169_;
		    } while (--i_136_ > 0);
		}
	    }
	} while (false);
    }
    
    final void a(int i, int i_189_, int i_190_, int i_191_, int i_192_,
		 int i_193_, int i_194_, int i_195_, int i_196_, int i_197_,
		 int i_198_, int i_199_, int i_200_, int i_201_, int i_202_,
		 int i_203_, int i_204_, int i_205_, int i_206_, int i_207_,
		 int i_208_, int i_209_, int i_210_, int i_211_, int i_212_,
		 int i_213_) {
	int[] is = g.l(i_213_);
	if (is == null) {
	    int i_214_ = g.j(i_213_);
	    b(i, i_189_, i_190_, i_191_, i_192_, i_193_, i_194_, i_195_,
	      i_196_, pr.a((byte) 87, i_197_ | i_198_ << 24, i_214_),
	      pr.a((byte) -106, i_197_ | i_199_ << 24, i_214_),
	      pr.a((byte) -124, i_197_ | i_200_ << 24, i_214_));
	} else {
	    a = g.m(i_213_);
	    n = g.i(i_213_);
	    int i_215_ = i_192_ - i_191_;
	    int i_216_ = i_189_ - i;
	    int i_217_ = i_193_ - i_191_;
	    int i_218_ = i_190_ - i;
	    int i_219_ = i_195_ - i_194_;
	    int i_220_ = i_196_ - i_194_;
	    int i_221_ = 0;
	    if (i_189_ != i)
		i_221_ = (i_192_ - i_191_ << 16) / (i_189_ - i);
	    int i_222_ = 0;
	    if (i_190_ != i_189_)
		i_222_ = (i_193_ - i_192_ << 16) / (i_190_ - i_189_);
	    int i_223_ = 0;
	    if (i_190_ != i)
		i_223_ = (i_191_ - i_193_ << 16) / (i - i_190_);
	    int i_224_ = i_215_ * i_218_ - i_217_ * i_216_;
	    if (i_224_ != 0) {
		int i_225_ = i_199_ - i_198_;
		int i_226_ = i_200_ - i_198_;
		int i_227_
		    = (i_225_ * i_218_ - i_226_ * i_216_ << 16) / i_224_;
		int i_228_
		    = (i_226_ * i_215_ - i_225_ * i_217_ << 16) / i_224_;
		i_225_ = i_202_ - i_201_;
		i_226_ = i_203_ - i_201_;
		int i_229_ = (i_225_ * i_218_ - i_226_ * i_216_ << 9) / i_224_;
		int i_230_ = (i_226_ * i_215_ - i_225_ * i_217_ << 9) / i_224_;
		int i_231_ = (i_219_ * i_218_ - i_220_ * i_216_ << 8) / i_224_;
		int i_232_ = (i_220_ * i_215_ - i_219_ * i_217_ << 8) / i_224_;
		float f = 8.0F / (float) ((nga) g).L;
		float f_233_ = (float) ((nga) g).O;
		i_205_ = i_204_ - i_205_;
		i_208_ = i_207_ - i_208_;
		i_211_ = i_210_ - i_211_;
		i_206_ -= i_204_;
		i_209_ -= i_207_;
		i_212_ -= i_210_;
		float f_234_ = (float) (i_206_ * i_207_ - i_209_ * i_204_);
		float f_235_ = (float) (i_209_ * i_210_ - i_212_ * i_207_) * f;
		float f_236_
		    = (float) (i_212_ * i_204_ - i_206_ * i_210_) / f_233_;
		float f_237_ = (float) (i_205_ * i_207_ - i_208_ * i_204_);
		float f_238_ = (float) (i_208_ * i_210_ - i_211_ * i_207_) * f;
		float f_239_
		    = (float) (i_211_ * i_204_ - i_205_ * i_210_) / f_233_;
		float f_240_ = (float) (i_208_ * i_206_ - i_205_ * i_209_);
		float f_241_ = (float) (i_211_ * i_209_ - i_208_ * i_212_) * f;
		float f_242_
		    = (float) (i_205_ * i_212_ - i_211_ * i_206_) / f_233_;
		if (i <= i_189_ && i <= i_190_) {
		    if (i < ((jea) this).r) {
			if (i_189_ > ((jea) this).r)
			    i_189_ = ((jea) this).r;
			if (i_190_ > ((jea) this).r)
			    i_190_ = ((jea) this).r;
			i_198_ = (i_198_ << 16) - i_227_ * i_191_ + i_227_;
			i_201_ = (i_201_ << 9) - i_229_ * i_191_ + i_229_;
			i_194_ = (i_194_ << 8) - i_231_ * i_191_ + i_231_;
			if (i_189_ < i_190_) {
			    i_193_ = i_191_ <<= 16;
			    if (i < 0) {
				i_193_ -= i_223_ * i;
				i_191_ -= i_221_ * i;
				i_198_ -= i_228_ * i;
				i_201_ -= i_230_ * i;
				i_194_ -= i_232_ * i;
				i = 0;
			    }
			    i_192_ <<= 16;
			    if (i_189_ < 0) {
				i_192_ -= i_222_ * i_189_;
				i_189_ = 0;
			    }
			    int i_243_ = i - ((jea) this).l;
			    f_234_ += f_236_ * (float) i_243_;
			    f_237_ += f_239_ * (float) i_243_;
			    f_240_ += f_242_ * (float) i_243_;
			    if (i != i_189_ && i_223_ < i_221_
				|| i == i_189_ && i_223_ > i_222_) {
				i_190_ -= i_189_;
				i_189_ -= i;
				i = ((jea) this).h[i];
				while (--i_189_ >= 0) {
				    d(e, is, 0, 0, i, i_193_ >> 16,
				      i_191_ >> 16, i_194_, i_231_, i_198_,
				      i_227_, i_197_, i_201_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_193_ += i_223_;
				    i_191_ += i_221_;
				    i_198_ += i_228_;
				    i_201_ += i_230_;
				    i_194_ += i_232_;
				    i += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
				while (--i_190_ >= 0) {
				    d(e, is, 0, 0, i, i_193_ >> 16,
				      i_192_ >> 16, i_194_, i_231_, i_198_,
				      i_227_, i_197_, i_201_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_193_ += i_223_;
				    i_192_ += i_222_;
				    i_198_ += i_228_;
				    i_201_ += i_230_;
				    i_194_ += i_232_;
				    i += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
			    } else {
				i_190_ -= i_189_;
				i_189_ -= i;
				i = ((jea) this).h[i];
				while (--i_189_ >= 0) {
				    d(e, is, 0, 0, i, i_191_ >> 16,
				      i_193_ >> 16, i_194_, i_231_, i_198_,
				      i_227_, i_197_, i_201_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_193_ += i_223_;
				    i_191_ += i_221_;
				    i_198_ += i_228_;
				    i_201_ += i_230_;
				    i_194_ += i_232_;
				    i += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
				while (--i_190_ >= 0) {
				    d(e, is, 0, 0, i, i_192_ >> 16,
				      i_193_ >> 16, i_194_, i_231_, i_198_,
				      i_227_, i_197_, i_201_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_193_ += i_223_;
				    i_192_ += i_222_;
				    i_198_ += i_228_;
				    i_201_ += i_230_;
				    i_194_ += i_232_;
				    i += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
			    }
			} else {
			    i_192_ = i_191_ <<= 16;
			    if (i < 0) {
				i_192_ -= i_223_ * i;
				i_191_ -= i_221_ * i;
				i_198_ -= i_228_ * i;
				i_201_ -= i_230_ * i;
				i_194_ -= i_232_ * i;
				i = 0;
			    }
			    i_193_ <<= 16;
			    if (i_190_ < 0) {
				i_193_ -= i_222_ * i_190_;
				i_190_ = 0;
			    }
			    int i_244_ = i - ((jea) this).l;
			    f_234_ += f_236_ * (float) i_244_;
			    f_237_ += f_239_ * (float) i_244_;
			    f_240_ += f_242_ * (float) i_244_;
			    if (i != i_190_ && i_223_ < i_221_
				|| i == i_190_ && i_222_ > i_221_) {
				i_189_ -= i_190_;
				i_190_ -= i;
				i = ((jea) this).h[i];
				while (--i_190_ >= 0) {
				    d(e, is, 0, 0, i, i_192_ >> 16,
				      i_191_ >> 16, i_194_, i_231_, i_198_,
				      i_227_, i_197_, i_201_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_192_ += i_223_;
				    i_191_ += i_221_;
				    i_198_ += i_228_;
				    i_201_ += i_230_;
				    i_194_ += i_232_;
				    i += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
				while (--i_189_ >= 0) {
				    d(e, is, 0, 0, i, i_193_ >> 16,
				      i_191_ >> 16, i_194_, i_231_, i_198_,
				      i_227_, i_197_, i_201_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_193_ += i_222_;
				    i_191_ += i_221_;
				    i_198_ += i_228_;
				    i_201_ += i_230_;
				    i_194_ += i_232_;
				    i += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
			    } else {
				i_189_ -= i_190_;
				i_190_ -= i;
				i = ((jea) this).h[i];
				while (--i_190_ >= 0) {
				    d(e, is, 0, 0, i, i_191_ >> 16,
				      i_192_ >> 16, i_194_, i_231_, i_198_,
				      i_227_, i_197_, i_201_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_192_ += i_223_;
				    i_191_ += i_221_;
				    i_198_ += i_228_;
				    i_201_ += i_230_;
				    i_194_ += i_232_;
				    i += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
				while (--i_189_ >= 0) {
				    d(e, is, 0, 0, i, i_191_ >> 16,
				      i_193_ >> 16, i_194_, i_231_, i_198_,
				      i_227_, i_197_, i_201_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_193_ += i_222_;
				    i_191_ += i_221_;
				    i_198_ += i_228_;
				    i_201_ += i_230_;
				    i_194_ += i_232_;
				    i += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
			    }
			}
		    }
		} else if (i_189_ <= i_190_) {
		    if (i_189_ < ((jea) this).r) {
			if (i_190_ > ((jea) this).r)
			    i_190_ = ((jea) this).r;
			if (i > ((jea) this).r)
			    i = ((jea) this).r;
			i_199_ = (i_199_ << 16) - i_227_ * i_192_ + i_227_;
			i_202_ = (i_202_ << 9) - i_229_ * i_192_ + i_229_;
			i_195_ = (i_195_ << 8) - i_231_ * i_192_ + i_231_;
			if (i_190_ < i) {
			    i_191_ = i_192_ <<= 16;
			    if (i_189_ < 0) {
				i_191_ -= i_221_ * i_189_;
				i_192_ -= i_222_ * i_189_;
				i_199_ -= i_228_ * i_189_;
				i_202_ -= i_230_ * i_189_;
				i_195_ -= i_232_ * i_189_;
				i_189_ = 0;
			    }
			    i_193_ <<= 16;
			    if (i_190_ < 0) {
				i_193_ -= i_223_ * i_190_;
				i_190_ = 0;
			    }
			    int i_245_ = i_189_ - ((jea) this).l;
			    f_234_ += f_236_ * (float) i_245_;
			    f_237_ += f_239_ * (float) i_245_;
			    f_240_ += f_242_ * (float) i_245_;
			    if (i_189_ != i_190_ && i_221_ < i_222_
				|| i_189_ == i_190_ && i_221_ > i_223_) {
				i -= i_190_;
				i_190_ -= i_189_;
				i_189_ = ((jea) this).h[i_189_];
				while (--i_190_ >= 0) {
				    d(e, is, 0, 0, i_189_, i_191_ >> 16,
				      i_192_ >> 16, i_195_, i_231_, i_199_,
				      i_227_, i_197_, i_202_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_191_ += i_221_;
				    i_192_ += i_222_;
				    i_199_ += i_228_;
				    i_202_ += i_230_;
				    i_195_ += i_232_;
				    i_189_ += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
				while (--i >= 0) {
				    d(e, is, 0, 0, i_189_, i_191_ >> 16,
				      i_193_ >> 16, i_195_, i_231_, i_199_,
				      i_227_, i_197_, i_202_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_191_ += i_221_;
				    i_193_ += i_223_;
				    i_199_ += i_228_;
				    i_202_ += i_230_;
				    i_195_ += i_232_;
				    i_189_ += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
			    } else {
				i -= i_190_;
				i_190_ -= i_189_;
				i_189_ = ((jea) this).h[i_189_];
				while (--i_190_ >= 0) {
				    d(e, is, 0, 0, i_189_, i_192_ >> 16,
				      i_191_ >> 16, i_195_, i_231_, i_199_,
				      i_227_, i_197_, i_202_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_191_ += i_221_;
				    i_192_ += i_222_;
				    i_199_ += i_228_;
				    i_202_ += i_230_;
				    i_195_ += i_232_;
				    i_189_ += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
				while (--i >= 0) {
				    d(e, is, 0, 0, i_189_, i_193_ >> 16,
				      i_191_ >> 16, i_195_, i_231_, i_199_,
				      i_227_, i_197_, i_202_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_191_ += i_221_;
				    i_193_ += i_223_;
				    i_199_ += i_228_;
				    i_202_ += i_230_;
				    i_195_ += i_232_;
				    i_189_ += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
			    }
			} else {
			    i_193_ = i_192_ <<= 16;
			    if (i_189_ < 0) {
				i_193_ -= i_221_ * i_189_;
				i_192_ -= i_222_ * i_189_;
				i_199_ -= i_228_ * i_189_;
				i_202_ -= i_230_ * i_189_;
				i_195_ -= i_232_ * i_189_;
				i_189_ = 0;
			    }
			    i_191_ <<= 16;
			    if (i < 0) {
				i_191_ -= i_223_ * i;
				i = 0;
			    }
			    int i_246_ = i_189_ - ((jea) this).l;
			    f_234_ += f_236_ * (float) i_246_;
			    f_237_ += f_239_ * (float) i_246_;
			    f_240_ += f_242_ * (float) i_246_;
			    if (i_221_ < i_222_) {
				i_190_ -= i;
				i -= i_189_;
				i_189_ = ((jea) this).h[i_189_];
				while (--i >= 0) {
				    d(e, is, 0, 0, i_189_, i_193_ >> 16,
				      i_192_ >> 16, i_195_, i_231_, i_199_,
				      i_227_, i_197_, i_202_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_193_ += i_221_;
				    i_192_ += i_222_;
				    i_199_ += i_228_;
				    i_202_ += i_230_;
				    i_195_ += i_232_;
				    i_189_ += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
				while (--i_190_ >= 0) {
				    d(e, is, 0, 0, i_189_, i_191_ >> 16,
				      i_192_ >> 16, i_195_, i_231_, i_199_,
				      i_227_, i_197_, i_202_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_191_ += i_223_;
				    i_192_ += i_222_;
				    i_199_ += i_228_;
				    i_202_ += i_230_;
				    i_195_ += i_232_;
				    i_189_ += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
			    } else {
				i_190_ -= i;
				i -= i_189_;
				i_189_ = ((jea) this).h[i_189_];
				while (--i >= 0) {
				    d(e, is, 0, 0, i_189_, i_192_ >> 16,
				      i_193_ >> 16, i_195_, i_231_, i_199_,
				      i_227_, i_197_, i_202_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_193_ += i_221_;
				    i_192_ += i_222_;
				    i_199_ += i_228_;
				    i_202_ += i_230_;
				    i_195_ += i_232_;
				    i_189_ += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
				while (--i_190_ >= 0) {
				    d(e, is, 0, 0, i_189_, i_192_ >> 16,
				      i_191_ >> 16, i_195_, i_231_, i_199_,
				      i_227_, i_197_, i_202_, i_229_, f_234_,
				      f_237_, f_240_, f_235_, f_238_, f_241_);
				    i_191_ += i_223_;
				    i_192_ += i_222_;
				    i_199_ += i_228_;
				    i_202_ += i_230_;
				    i_195_ += i_232_;
				    i_189_ += this.f;
				    f_234_ += f_236_;
				    f_237_ += f_239_;
				    f_240_ += f_242_;
				}
			    }
			}
		    }
		} else if (i_190_ < ((jea) this).r) {
		    if (i > ((jea) this).r)
			i = ((jea) this).r;
		    if (i_189_ > ((jea) this).r)
			i_189_ = ((jea) this).r;
		    i_200_ = (i_200_ << 16) - i_227_ * i_193_ + i_227_;
		    i_203_ = (i_203_ << 9) - i_229_ * i_193_ + i_229_;
		    i_196_ = (i_196_ << 8) - i_231_ * i_193_ + i_231_;
		    if (i < i_189_) {
			i_192_ = i_193_ <<= 16;
			if (i_190_ < 0) {
			    i_192_ -= i_222_ * i_190_;
			    i_193_ -= i_223_ * i_190_;
			    i_200_ -= i_228_ * i_190_;
			    i_203_ -= i_230_ * i_190_;
			    i_196_ -= i_232_ * i_190_;
			    i_190_ = 0;
			}
			i_191_ <<= 16;
			if (i < 0) {
			    i_191_ -= i_221_ * i;
			    i = 0;
			}
			int i_247_ = i_190_ - ((jea) this).l;
			f_234_ += f_236_ * (float) i_247_;
			f_237_ += f_239_ * (float) i_247_;
			f_240_ += f_242_ * (float) i_247_;
			if (i_222_ < i_223_) {
			    i_189_ -= i;
			    i -= i_190_;
			    i_190_ = ((jea) this).h[i_190_];
			    while (--i >= 0) {
				d(e, is, 0, 0, i_190_, i_192_ >> 16,
				  i_193_ >> 16, i_196_, i_231_, i_200_, i_227_,
				  i_197_, i_203_, i_229_, f_234_, f_237_,
				  f_240_, f_235_, f_238_, f_241_);
				i_192_ += i_222_;
				i_193_ += i_223_;
				i_200_ += i_228_;
				i_203_ += i_230_;
				i_196_ += i_232_;
				i_190_ += this.f;
				f_234_ += f_236_;
				f_237_ += f_239_;
				f_240_ += f_242_;
			    }
			    while (--i_189_ >= 0) {
				d(e, is, 0, 0, i_190_, i_192_ >> 16,
				  i_191_ >> 16, i_196_, i_231_, i_200_, i_227_,
				  i_197_, i_203_, i_229_, f_234_, f_237_,
				  f_240_, f_235_, f_238_, f_241_);
				i_192_ += i_222_;
				i_191_ += i_221_;
				i_200_ += i_228_;
				i_203_ += i_230_;
				i_196_ += i_232_;
				i_190_ += this.f;
				f_234_ += f_236_;
				f_237_ += f_239_;
				f_240_ += f_242_;
			    }
			} else {
			    i_189_ -= i;
			    i -= i_190_;
			    i_190_ = ((jea) this).h[i_190_];
			    while (--i >= 0) {
				d(e, is, 0, 0, i_190_, i_193_ >> 16,
				  i_192_ >> 16, i_196_, i_231_, i_200_, i_227_,
				  i_197_, i_203_, i_229_, f_234_, f_237_,
				  f_240_, f_235_, f_238_, f_241_);
				i_192_ += i_222_;
				i_193_ += i_223_;
				i_200_ += i_228_;
				i_203_ += i_230_;
				i_196_ += i_232_;
				i_190_ += this.f;
				f_234_ += f_236_;
				f_237_ += f_239_;
				f_240_ += f_242_;
			    }
			    while (--i_189_ >= 0) {
				d(e, is, 0, 0, i_190_, i_191_ >> 16,
				  i_192_ >> 16, i_196_, i_231_, i_200_, i_227_,
				  i_197_, i_203_, i_229_, f_234_, f_237_,
				  f_240_, f_235_, f_238_, f_241_);
				i_192_ += i_222_;
				i_191_ += i_221_;
				i_200_ += i_228_;
				i_203_ += i_230_;
				i_196_ += i_232_;
				i_190_ += this.f;
				f_234_ += f_236_;
				f_237_ += f_239_;
				f_240_ += f_242_;
			    }
			}
		    } else {
			i_191_ = i_193_ <<= 16;
			if (i_190_ < 0) {
			    i_191_ -= i_222_ * i_190_;
			    i_193_ -= i_223_ * i_190_;
			    i_200_ -= i_228_ * i_190_;
			    i_203_ -= i_230_ * i_190_;
			    i_196_ -= i_232_ * i_190_;
			    i_190_ = 0;
			}
			i_192_ <<= 16;
			if (i_189_ < 0) {
			    i_192_ -= i_221_ * i_189_;
			    i_189_ = 0;
			}
			int i_248_ = i_190_ - ((jea) this).l;
			f_234_ += f_236_ * (float) i_248_;
			f_237_ += f_239_ * (float) i_248_;
			f_240_ += f_242_ * (float) i_248_;
			if (i_222_ < i_223_) {
			    i -= i_189_;
			    i_189_ -= i_190_;
			    i_190_ = ((jea) this).h[i_190_];
			    while (--i_189_ >= 0) {
				d(e, is, 0, 0, i_190_, i_191_ >> 16,
				  i_193_ >> 16, i_196_, i_231_, i_200_, i_227_,
				  i_197_, i_203_, i_229_, f_234_, f_237_,
				  f_240_, f_235_, f_238_, f_241_);
				i_191_ += i_222_;
				i_193_ += i_223_;
				i_200_ += i_228_;
				i_203_ += i_230_;
				i_196_ += i_232_;
				i_190_ += this.f;
				f_234_ += f_236_;
				f_237_ += f_239_;
				f_240_ += f_242_;
			    }
			    while (--i >= 0) {
				d(e, is, 0, 0, i_190_, i_192_ >> 16,
				  i_193_ >> 16, i_196_, i_231_, i_200_, i_227_,
				  i_197_, i_203_, i_229_, f_234_, f_237_,
				  f_240_, f_235_, f_238_, f_241_);
				i_192_ += i_221_;
				i_193_ += i_223_;
				i_200_ += i_228_;
				i_203_ += i_230_;
				i_196_ += i_232_;
				i_190_ += this.f;
				f_234_ += f_236_;
				f_237_ += f_239_;
				f_240_ += f_242_;
			    }
			} else {
			    i -= i_189_;
			    i_189_ -= i_190_;
			    i_190_ = ((jea) this).h[i_190_];
			    while (--i_189_ >= 0) {
				d(e, is, 0, 0, i_190_, i_193_ >> 16,
				  i_191_ >> 16, i_196_, i_231_, i_200_, i_227_,
				  i_197_, i_203_, i_229_, f_234_, f_237_,
				  f_240_, f_235_, f_238_, f_241_);
				i_191_ += i_222_;
				i_193_ += i_223_;
				i_200_ += i_228_;
				i_203_ += i_230_;
				i_196_ += i_232_;
				i_190_ += this.f;
				f_234_ += f_236_;
				f_237_ += f_239_;
				f_240_ += f_242_;
			    }
			    while (--i >= 0) {
				d(e, is, 0, 0, i_190_, i_193_ >> 16,
				  i_192_ >> 16, i_196_, i_231_, i_200_, i_227_,
				  i_197_, i_203_, i_229_, f_234_, f_237_,
				  f_240_, f_235_, f_238_, f_241_);
				i_192_ += i_221_;
				i_193_ += i_223_;
				i_200_ += i_228_;
				i_203_ += i_230_;
				i_196_ += i_232_;
				i_190_ += this.f;
				f_234_ += f_236_;
				f_237_ += f_239_;
				f_240_ += f_242_;
			    }
			}
		    }
		}
	    }
	}
    }
    
    private final void b
	(int[] is, int[] is_249_, int i, int i_250_, int i_251_, int i_252_,
	 int i_253_, int i_254_, int i_255_, int i_256_, int i_257_,
	 int i_258_, int i_259_, int i_260_, float f, float f_261_,
	 float f_262_, float f_263_, float f_264_, float f_265_) {
	if (((jea) this).o) {
	    if (i_253_ > ((jea) this).b)
		i_253_ = ((jea) this).b;
	    if (i_252_ < 0)
		i_252_ = 0;
	}
	if (i_252_ < i_253_) {
	    i_251_ += i_252_;
	    i_256_ += i_257_ * i_252_;
	    i_259_ += i_260_ * i_252_;
	    i_254_ += i_255_ * i_252_;
	    int i_266_ = i_253_ - i_252_;
	    i_257_ <<= 3;
	    int i_267_ = i_256_ >> 16;
	    int i_268_ = 255 - i_267_;
	    int i_269_ = (((i_258_ & 0xff00ff) * i_267_ & ~0xff00ff
			   | (i_258_ & 0xff00) * i_267_ & 0xff0000)
			  >>> 8);
	    do {
		if (a) {
		    int i_270_ = i_252_ - ((jea) this).i;
		    f += f_263_ / 8.0F * (float) i_270_;
		    f_261_ += f_264_ / 8.0F * (float) i_270_;
		    f_262_ += f_265_ / 8.0F * (float) i_270_;
		    int i_271_;
		    int i_272_;
		    if (f_262_ != 0.0F) {
			i_271_ = (int) (f * 4096.0F / f_262_);
			i_272_ = (int) (f_261_ * 4096.0F / f_262_);
		    } else {
			i_271_ = 0;
			i_272_ = 0;
		    }
		    f += f_263_;
		    f_261_ += f_264_;
		    f_262_ += f_265_;
		    int i_273_;
		    int i_274_;
		    if (f_262_ != 0.0F) {
			i_273_ = (int) (f * 4096.0F / f_262_);
			i_274_ = (int) (f_261_ * 4096.0F / f_262_);
		    } else {
			i_273_ = 0;
			i_274_ = 0;
		    }
		    i = (i_271_ << 20) + i_272_;
		    int i_275_ = ((i_273_ - i_271_ >> 3 << 20)
				  + (i_274_ - i_272_ >> 3));
		    i_266_ >>= 3;
		    i_260_ <<= 3;
		    int i_276_ = i_259_ >> 8;
		    if (n) {
			if (i_266_ > 0) {
			    do {
				if (i_254_ < m[i_251_]) {
				    i_250_ = is_249_[(i & 0xfc0) + (i >>> 26)];
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i += i_275_;
				i_254_ += i_255_;
				i_251_++;
				if (i_254_ < m[i_251_]) {
				    i_250_ = is_249_[(i & 0xfc0) + (i >>> 26)];
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i += i_275_;
				i_254_ += i_255_;
				i_251_++;
				if (i_254_ < m[i_251_]) {
				    i_250_ = is_249_[(i & 0xfc0) + (i >>> 26)];
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i += i_275_;
				i_254_ += i_255_;
				i_251_++;
				if (i_254_ < m[i_251_]) {
				    i_250_ = is_249_[(i & 0xfc0) + (i >>> 26)];
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i += i_275_;
				i_254_ += i_255_;
				i_251_++;
				if (i_254_ < m[i_251_]) {
				    i_250_ = is_249_[(i & 0xfc0) + (i >>> 26)];
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i += i_275_;
				i_254_ += i_255_;
				i_251_++;
				if (i_254_ < m[i_251_]) {
				    i_250_ = is_249_[(i & 0xfc0) + (i >>> 26)];
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i += i_275_;
				i_254_ += i_255_;
				i_251_++;
				if (i_254_ < m[i_251_]) {
				    i_250_ = is_249_[(i & 0xfc0) + (i >>> 26)];
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i += i_275_;
				i_254_ += i_255_;
				i_251_++;
				if (i_254_ < m[i_251_]) {
				    i_250_ = is_249_[(i & 0xfc0) + (i >>> 26)];
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i += i_275_;
				i_254_ += i_255_;
				i_251_++;
				i_271_ = i_273_;
				i_272_ = i_274_;
				f += f_263_;
				f_261_ += f_264_;
				f_262_ += f_265_;
				if (f_262_ != 0.0F) {
				    i_273_ = (int) (f * 4096.0F / f_262_);
				    i_274_ = (int) (f_261_ * 4096.0F / f_262_);
				} else {
				    i_273_ = 0;
				    i_274_ = 0;
				}
				i = (i_271_ << 20) + i_272_;
				i_275_ = ((i_273_ - i_271_ >> 3 << 20)
					  + (i_274_ - i_272_ >> 3));
				i_259_ += i_260_;
				i_276_ = i_259_ >> 8;
				i_256_ += i_257_;
				i_267_ = i_256_ >> 16;
				i_268_ = 255 - i_267_;
				i_269_
				    = ((i_258_ & 0xff00ff) * i_267_ & ~0xff00ff
				       | ((i_258_ & 0xff00) * i_267_
					  & 0xff0000)) >>> 8;
			    } while (--i_266_ > 0);
			}
			i_266_ = i_253_ - i_252_ & 0x7;
			if (i_266_ > 0) {
			    do {
				if (i_254_ < m[i_251_]) {
				    i_250_ = is_249_[(i & 0xfc0) + (i >>> 26)];
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i += i_275_;
				i_254_ += i_255_;
				i_251_++;
			    } while (--i_266_ > 0);
			}
		    } else {
			if (i_266_ > 0) {
			    do {
				if (i_254_ < m[i_251_]
				    && ((i_250_
					 = is_249_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i_251_++;
				i += i_275_;
				i_254_ += i_255_;
				if (i_254_ < m[i_251_]
				    && ((i_250_
					 = is_249_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i_251_++;
				i += i_275_;
				i_254_ += i_255_;
				if (i_254_ < m[i_251_]
				    && ((i_250_
					 = is_249_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i_251_++;
				i += i_275_;
				i_254_ += i_255_;
				if (i_254_ < m[i_251_]
				    && ((i_250_
					 = is_249_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i_251_++;
				i += i_275_;
				i_254_ += i_255_;
				if (i_254_ < m[i_251_]
				    && ((i_250_
					 = is_249_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i_251_++;
				i += i_275_;
				i_254_ += i_255_;
				if (i_254_ < m[i_251_]
				    && ((i_250_
					 = is_249_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i_251_++;
				i += i_275_;
				i_254_ += i_255_;
				if (i_254_ < m[i_251_]
				    && ((i_250_
					 = is_249_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i_251_++;
				i += i_275_;
				i_254_ += i_255_;
				if (i_254_ < m[i_251_]
				    && ((i_250_
					 = is_249_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_250_ = (((i_250_ & 0xff00ff) * i_276_
					       & ~0xff00ff)
					      + ((i_250_ & 0xff00) * i_276_
						 & 0xff0000)) >> 8;
				    is[i_251_]
					= ((((i_250_ & 0xff00ff) * i_268_
					     & ~0xff00ff)
					    | ((i_250_ & 0xff00) * i_268_
					       & 0xff0000))
					   >>> 8) + i_269_;
				    m[i_251_] = i_254_;
				}
				i_251_++;
				i += i_275_;
				i_254_ += i_255_;
				i_271_ = i_273_;
				i_272_ = i_274_;
				f += f_263_;
				f_261_ += f_264_;
				f_262_ += f_265_;
				if (f_262_ != 0.0F) {
				    i_273_ = (int) (f * 4096.0F / f_262_);
				    i_274_ = (int) (f_261_ * 4096.0F / f_262_);
				} else {
				    i_273_ = 0;
				    i_274_ = 0;
				}
				i = (i_271_ << 20) + i_272_;
				i_275_ = ((i_273_ - i_271_ >> 3 << 20)
					  + (i_274_ - i_272_ >> 3));
				i_259_ += i_260_;
				i_276_ = i_259_ >> 8;
				i_256_ += i_257_;
				i_267_ = i_256_ >> 16;
				i_268_ = 255 - i_267_;
				i_269_
				    = ((i_258_ & 0xff00ff) * i_267_ & ~0xff00ff
				       | ((i_258_ & 0xff00) * i_267_
					  & 0xff0000)) >>> 8;
			    } while (--i_266_ > 0);
			}
			i_266_ = i_253_ - i_252_ & 0x7;
			if (i_266_ <= 0)
			    break;
			do {
			    if (i_254_ < m[i_251_]
				&& ((i_250_
				     = is_249_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				i_250_ = (((i_250_ & 0xff00ff) * i_276_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_276_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i_251_++;
			    i += i_275_;
			    i_254_ += i_255_;
			} while (--i_266_ > 0);
		    }
		    break;
		}
		int i_277_ = i_252_ - ((jea) this).i;
		f += f_263_ / 8.0F * (float) i_277_;
		f_261_ += f_264_ / 8.0F * (float) i_277_;
		f_262_ += f_265_ / 8.0F * (float) i_277_;
		int i_278_;
		int i_279_;
		if (f_262_ != 0.0F) {
		    i_278_ = (int) (f * 16384.0F / f_262_);
		    i_279_ = (int) (f_261_ * 16384.0F / f_262_);
		} else {
		    i_278_ = 0;
		    i_279_ = 0;
		}
		f += f_263_;
		f_261_ += f_264_;
		f_262_ += f_265_;
		int i_280_;
		int i_281_;
		if (f_262_ != 0.0F) {
		    i_280_ = (int) (f * 16384.0F / f_262_);
		    i_281_ = (int) (f_261_ * 16384.0F / f_262_);
		} else {
		    i_280_ = 0;
		    i_281_ = 0;
		}
		i = (i_278_ << 18) + i_279_;
		int i_282_
		    = (i_280_ - i_278_ >> 3 << 18) + (i_281_ - i_279_ >> 3);
		i_266_ >>= 3;
		i_260_ <<= 3;
		int i_283_ = i_259_ >> 8;
		if (n) {
		    if (i_266_ > 0) {
			do {
			    if (i_254_ < m[i_251_]) {
				i_250_ = is_249_[(i & 0x3f80) + (i >>> 25)];
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i += i_282_;
			    i_251_++;
			    i_254_ += i_255_;
			    if (i_254_ < m[i_251_]) {
				i_250_ = is_249_[(i & 0x3f80) + (i >>> 25)];
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i += i_282_;
			    i_251_++;
			    i_254_ += i_255_;
			    if (i_254_ < m[i_251_]) {
				i_250_ = is_249_[(i & 0x3f80) + (i >>> 25)];
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i += i_282_;
			    i_251_++;
			    i_254_ += i_255_;
			    if (i_254_ < m[i_251_]) {
				i_250_ = is_249_[(i & 0x3f80) + (i >>> 25)];
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i += i_282_;
			    i_251_++;
			    i_254_ += i_255_;
			    if (i_254_ < m[i_251_]) {
				i_250_ = is_249_[(i & 0x3f80) + (i >>> 25)];
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i += i_282_;
			    i_251_++;
			    i_254_ += i_255_;
			    if (i_254_ < m[i_251_]) {
				i_250_ = is_249_[(i & 0x3f80) + (i >>> 25)];
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i += i_282_;
			    i_251_++;
			    i_254_ += i_255_;
			    if (i_254_ < m[i_251_]) {
				i_250_ = is_249_[(i & 0x3f80) + (i >>> 25)];
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i += i_282_;
			    i_251_++;
			    i_254_ += i_255_;
			    if (i_254_ < m[i_251_]) {
				i_250_ = is_249_[(i & 0x3f80) + (i >>> 25)];
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i += i_282_;
			    i_251_++;
			    i_254_ += i_255_;
			    i_278_ = i_280_;
			    i_279_ = i_281_;
			    f += f_263_;
			    f_261_ += f_264_;
			    f_262_ += f_265_;
			    if (f_262_ != 0.0F) {
				i_280_ = (int) (f * 16384.0F / f_262_);
				i_281_ = (int) (f_261_ * 16384.0F / f_262_);
			    } else {
				i_280_ = 0;
				i_281_ = 0;
			    }
			    i = (i_278_ << 18) + i_279_;
			    i_282_ = ((i_280_ - i_278_ >> 3 << 18)
				      + (i_281_ - i_279_ >> 3));
			    i_259_ += i_260_;
			    i_283_ = i_259_ >> 8;
			    i_256_ += i_257_;
			    i_267_ = i_256_ >> 16;
			    i_268_ = 255 - i_267_;
			    i_269_ = (((i_258_ & 0xff00ff) * i_267_ & ~0xff00ff
				       | (i_258_ & 0xff00) * i_267_ & 0xff0000)
				      >>> 8);
			} while (--i_266_ > 0);
		    }
		    i_266_ = i_253_ - i_252_ & 0x7;
		    if (i_266_ > 0) {
			do {
			    if (i_254_ < m[i_251_]) {
				i_250_ = is_249_[(i & 0x3f80) + (i >>> 25)];
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i += i_282_;
			    i_251_++;
			    i_254_ += i_255_;
			} while (--i_266_ > 0);
			break;
		    }
		} else {
		    if (i_266_ > 0) {
			do {
			    if (i_254_ < m[i_251_]
				&& ((i_250_
				     = is_249_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i_251_++;
			    i += i_282_;
			    i_254_ += i_255_;
			    if (i_254_ < m[i_251_]
				&& ((i_250_
				     = is_249_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i_251_++;
			    i += i_282_;
			    i_254_ += i_255_;
			    if (i_254_ < m[i_251_]
				&& ((i_250_
				     = is_249_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i_251_++;
			    i += i_282_;
			    i_254_ += i_255_;
			    if (i_254_ < m[i_251_]
				&& ((i_250_
				     = is_249_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i_251_++;
			    i += i_282_;
			    i_254_ += i_255_;
			    if (i_254_ < m[i_251_]
				&& ((i_250_
				     = is_249_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i_251_++;
			    i += i_282_;
			    i_254_ += i_255_;
			    if (i_254_ < m[i_251_]
				&& ((i_250_
				     = is_249_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i_251_++;
			    i += i_282_;
			    i_254_ += i_255_;
			    if (i_254_ < m[i_251_]
				&& ((i_250_
				     = is_249_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i_251_++;
			    i += i_282_;
			    i_254_ += i_255_;
			    if (i_254_ < m[i_251_]
				&& ((i_250_
				     = is_249_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i_251_++;
			    i += i_282_;
			    i_254_ += i_255_;
			    i_278_ = i_280_;
			    i_279_ = i_281_;
			    f += f_263_;
			    f_261_ += f_264_;
			    f_262_ += f_265_;
			    if (f_262_ != 0.0F) {
				i_280_ = (int) (f / f_262_ * 16384.0F);
				i_281_ = (int) (f_261_ / f_262_ * 16384.0F);
			    } else {
				i_280_ = 0;
				i_281_ = 0;
			    }
			    i = (i_278_ << 18) + i_279_;
			    i_282_ = ((i_280_ - i_278_ >> 3 << 18)
				      + (i_281_ - i_279_ >> 3));
			    i_259_ += i_260_;
			    i_283_ = i_259_ >> 8;
			    i_256_ += i_257_;
			    i_267_ = i_256_ >> 16;
			    i_268_ = 255 - i_267_;
			    i_269_ = (((i_258_ & 0xff00ff) * i_267_ & ~0xff00ff
				       | (i_258_ & 0xff00) * i_267_ & 0xff0000)
				      >>> 8);
			} while (--i_266_ > 0);
		    }
		    i_266_ = i_253_ - i_252_ & 0x7;
		    if (i_266_ > 0) {
			do {
			    if (i_254_ < m[i_251_]
				&& ((i_250_
				     = is_249_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_250_ = (((i_250_ & 0xff00ff) * i_283_
					   & ~0xff00ff)
					  + ((i_250_ & 0xff00) * i_283_
					     & 0xff0000)) >> 8;
				is[i_251_] = ((((i_250_ & 0xff00ff) * i_268_
						& ~0xff00ff)
					       | ((i_250_ & 0xff00) * i_268_
						  & 0xff0000))
					      >>> 8) + i_269_;
				m[i_251_] = i_254_;
			    }
			    i_251_++;
			    i += i_282_;
			    i_254_ += i_255_;
			} while (--i_266_ > 0);
		    }
		}
	    } while (false);
	}
    }
    
    private final void c
	(int[] is, int[] is_284_, int i, int i_285_, int i_286_, int i_287_,
	 int i_288_, int i_289_, int i_290_, int i_291_, int i_292_,
	 int i_293_, int i_294_, int i_295_, float f, float f_296_,
	 float f_297_, float f_298_, float f_299_, float f_300_) {
	if (((jea) this).o) {
	    if (i_288_ > ((jea) this).b)
		i_288_ = ((jea) this).b;
	    if (i_287_ < 0)
		i_287_ = 0;
	}
	if (i_287_ < i_288_) {
	    i_286_ += i_287_;
	    i_291_ += i_292_ * i_287_;
	    i_294_ += i_295_ * i_287_;
	    i_289_ += i_290_ * i_287_;
	    int i_301_ = i_288_ - i_287_;
	    i_292_ <<= 3;
	    int i_302_ = i_291_ >> 16;
	    int i_303_ = 255 - i_302_;
	    int i_304_ = (((i_293_ & 0xff00ff) * i_302_ & ~0xff00ff
			   | (i_293_ & 0xff00) * i_302_ & 0xff0000)
			  >>> 8);
	    int i_305_ = ((jea) this).q;
	    int i_306_ = 256 - ((jea) this).q;
	    do {
		if (a) {
		    int i_307_ = i_287_ - ((jea) this).i;
		    f += f_298_ / 8.0F * (float) i_307_;
		    f_296_ += f_299_ / 8.0F * (float) i_307_;
		    f_297_ += f_300_ / 8.0F * (float) i_307_;
		    int i_308_;
		    int i_309_;
		    if (f_297_ != 0.0F) {
			i_308_ = (int) (f * 4096.0F / f_297_);
			i_309_ = (int) (f_296_ * 4096.0F / f_297_);
		    } else {
			i_308_ = 0;
			i_309_ = 0;
		    }
		    f += f_298_;
		    f_296_ += f_299_;
		    f_297_ += f_300_;
		    int i_310_;
		    int i_311_;
		    if (f_297_ != 0.0F) {
			i_310_ = (int) (f * 4096.0F / f_297_);
			i_311_ = (int) (f_296_ * 4096.0F / f_297_);
		    } else {
			i_310_ = 0;
			i_311_ = 0;
		    }
		    i = (i_308_ << 20) + i_309_;
		    int i_312_ = ((i_310_ - i_308_ >> 3 << 20)
				  + (i_311_ - i_309_ >> 3));
		    i_301_ >>= 3;
		    i_295_ <<= 3;
		    int i_313_ = i_294_ >> 8;
		    if (n) {
			if (i_301_ > 0) {
			    do {
				if (i_289_ < m[i_286_]) {
				    int i_314_ = is[i_286_];
				    i_285_ = is_284_[(i & 0xfc0) + (i >>> 26)];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_314_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_314_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i += i_312_;
				i_286_++;
				i_289_ += i_290_;
				if (i_289_ < m[i_286_]) {
				    int i_315_ = is[i_286_];
				    i_285_ = is_284_[(i & 0xfc0) + (i >>> 26)];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_315_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_315_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i += i_312_;
				i_286_++;
				i_289_ += i_290_;
				if (i_289_ < m[i_286_]) {
				    int i_316_ = is[i_286_];
				    i_285_ = is_284_[(i & 0xfc0) + (i >>> 26)];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_316_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_316_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i += i_312_;
				i_286_++;
				i_289_ += i_290_;
				if (i_289_ < m[i_286_]) {
				    int i_317_ = is[i_286_];
				    i_285_ = is_284_[(i & 0xfc0) + (i >>> 26)];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_317_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_317_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i += i_312_;
				i_286_++;
				i_289_ += i_290_;
				if (i_289_ < m[i_286_]) {
				    int i_318_ = is[i_286_];
				    i_285_ = is_284_[(i & 0xfc0) + (i >>> 26)];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_318_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_318_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i += i_312_;
				i_286_++;
				i_289_ += i_290_;
				if (i_289_ < m[i_286_]) {
				    int i_319_ = is[i_286_];
				    i_285_ = is_284_[(i & 0xfc0) + (i >>> 26)];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_319_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_319_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i += i_312_;
				i_286_++;
				i_289_ += i_290_;
				if (i_289_ < m[i_286_]) {
				    int i_320_ = is[i_286_];
				    i_285_ = is_284_[(i & 0xfc0) + (i >>> 26)];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_320_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_320_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i += i_312_;
				i_286_++;
				i_289_ += i_290_;
				if (i_289_ < m[i_286_]) {
				    int i_321_ = is[i_286_];
				    i_285_ = is_284_[(i & 0xfc0) + (i >>> 26)];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_321_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_321_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i += i_312_;
				i_286_++;
				i_289_ += i_290_;
				i_308_ = i_310_;
				i_309_ = i_311_;
				f += f_298_;
				f_296_ += f_299_;
				f_297_ += f_300_;
				if (f_297_ != 0.0F) {
				    i_310_ = (int) (f * 4096.0F / f_297_);
				    i_311_ = (int) (f_296_ * 4096.0F / f_297_);
				} else {
				    i_310_ = 0;
				    i_311_ = 0;
				}
				i = (i_308_ << 20) + i_309_;
				i_312_ = ((i_310_ - i_308_ >> 3 << 20)
					  + (i_311_ - i_309_ >> 3));
				i_294_ += i_295_;
				i_313_ = i_294_ >> 8;
				i_291_ += i_292_;
				i_302_ = i_291_ >> 16;
				i_303_ = 255 - i_302_;
				i_304_
				    = ((i_293_ & 0xff00ff) * i_302_ & ~0xff00ff
				       | ((i_293_ & 0xff00) * i_302_
					  & 0xff0000)) >>> 8;
			    } while (--i_301_ > 0);
			}
			i_301_ = i_288_ - i_287_ & 0x7;
			if (i_301_ > 0) {
			    do {
				if (i_289_ < m[i_286_]) {
				    int i_322_ = is[i_286_];
				    i_285_ = is_284_[(i & 0xfc0) + (i >>> 26)];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_322_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_322_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i += i_312_;
				i_286_++;
				i_289_ += i_290_;
			    } while (--i_301_ > 0);
			}
		    } else {
			if (i_301_ > 0) {
			    do {
				if (i_289_ < m[i_286_]
				    && ((i_285_
					 = is_284_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_323_ = is[i_286_];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_323_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_323_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i_286_++;
				i += i_312_;
				i_289_ += i_290_;
				if (i_289_ < m[i_286_]
				    && ((i_285_
					 = is_284_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_324_ = is[i_286_];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_324_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_324_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i_286_++;
				i += i_312_;
				i_289_ += i_290_;
				if (i_289_ < m[i_286_]
				    && ((i_285_
					 = is_284_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_325_ = is[i_286_];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_325_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_325_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i_286_++;
				i += i_312_;
				i_289_ += i_290_;
				if (i_289_ < m[i_286_]
				    && ((i_285_
					 = is_284_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_326_ = is[i_286_];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_326_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_326_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i_286_++;
				i += i_312_;
				i_289_ += i_290_;
				if (i_289_ < m[i_286_]
				    && ((i_285_
					 = is_284_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_327_ = is[i_286_];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_327_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_327_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i_286_++;
				i += i_312_;
				i_289_ += i_290_;
				if (i_289_ < m[i_286_]
				    && ((i_285_
					 = is_284_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_328_ = is[i_286_];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_328_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_328_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i_286_++;
				i += i_312_;
				i_289_ += i_290_;
				if (i_289_ < m[i_286_]
				    && ((i_285_
					 = is_284_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_329_ = is[i_286_];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_329_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_329_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i_286_++;
				i += i_312_;
				i_289_ += i_290_;
				if (i_289_ < m[i_286_]
				    && ((i_285_
					 = is_284_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    int i_330_ = is[i_286_];
				    i_285_ = (((i_285_ & 0xff00ff) * i_313_
					       & ~0xff00ff)
					      + ((i_285_ & 0xff00) * i_313_
						 & 0xff0000)) >> 8;
				    i_285_ = ((((i_330_ & 0xff00ff) * i_305_
						+ (i_285_ & 0xff00ff) * i_306_)
					       & ~0xff00ff)
					      + (((i_330_ & 0xff00) * i_305_
						  + (i_285_ & 0xff00) * i_306_)
						 & 0xff0000)) >> 8;
				    is[i_286_]
					= ((((i_285_ & 0xff00ff) * i_303_
					     & ~0xff00ff)
					    | ((i_285_ & 0xff00) * i_303_
					       & 0xff0000))
					   >>> 8) + i_304_;
				    m[i_286_] = i_289_;
				}
				i_286_++;
				i += i_312_;
				i_289_ += i_290_;
				i_308_ = i_310_;
				i_309_ = i_311_;
				f += f_298_;
				f_296_ += f_299_;
				f_297_ += f_300_;
				if (f_297_ != 0.0F) {
				    i_310_ = (int) (f * 4096.0F / f_297_);
				    i_311_ = (int) (f_296_ * 4096.0F / f_297_);
				} else {
				    i_310_ = 0;
				    i_311_ = 0;
				}
				i = (i_308_ << 20) + i_309_;
				i_312_ = ((i_310_ - i_308_ >> 3 << 20)
					  + (i_311_ - i_309_ >> 3));
				i_294_ += i_295_;
				i_313_ = i_294_ >> 8;
				i_291_ += i_292_;
				i_302_ = i_291_ >> 16;
				i_303_ = 255 - i_302_;
				i_304_
				    = ((i_293_ & 0xff00ff) * i_302_ & ~0xff00ff
				       | ((i_293_ & 0xff00) * i_302_
					  & 0xff0000)) >>> 8;
			    } while (--i_301_ > 0);
			}
			i_301_ = i_288_ - i_287_ & 0x7;
			if (i_301_ <= 0)
			    break;
			do {
			    if (i_289_ < m[i_286_]
				&& ((i_285_
				     = is_284_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_331_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_313_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_313_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_331_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_331_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i_286_++;
			    i += i_312_;
			    i_289_ += i_290_;
			} while (--i_301_ > 0);
		    }
		    break;
		}
		int i_332_ = i_287_ - ((jea) this).i;
		f += f_298_ / 8.0F * (float) i_332_;
		f_296_ += f_299_ / 8.0F * (float) i_332_;
		f_297_ += f_300_ / 8.0F * (float) i_332_;
		int i_333_;
		int i_334_;
		if (f_297_ != 0.0F) {
		    i_333_ = (int) (f * 16384.0F / f_297_);
		    i_334_ = (int) (f_296_ * 16384.0F / f_297_);
		} else {
		    i_333_ = 0;
		    i_334_ = 0;
		}
		f += f_298_;
		f_296_ += f_299_;
		f_297_ += f_300_;
		int i_335_;
		int i_336_;
		if (f_297_ != 0.0F) {
		    i_335_ = (int) (f * 16384.0F / f_297_);
		    i_336_ = (int) (f_296_ * 16384.0F / f_297_);
		} else {
		    i_335_ = 0;
		    i_336_ = 0;
		}
		i = (i_333_ << 18) + i_334_;
		int i_337_
		    = (i_335_ - i_333_ >> 3 << 18) + (i_336_ - i_334_ >> 3);
		i_301_ >>= 3;
		i_295_ <<= 3;
		int i_338_ = i_294_ >> 8;
		if (n) {
		    if (i_301_ > 0) {
			do {
			    if (i_289_ < m[i_286_]) {
				i_285_ = is_284_[(i & 0x3f80) + (i >>> 25)];
				int i_339_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_339_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_339_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i += i_337_;
			    i_286_++;
			    i_289_ += i_290_;
			    if (i_289_ < m[i_286_]) {
				i_285_ = is_284_[(i & 0x3f80) + (i >>> 25)];
				int i_340_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_340_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_340_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i += i_337_;
			    i_286_++;
			    i_289_ += i_290_;
			    if (i_289_ < m[i_286_]) {
				i_285_ = is_284_[(i & 0x3f80) + (i >>> 25)];
				int i_341_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_341_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_341_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i += i_337_;
			    i_286_++;
			    i_289_ += i_290_;
			    if (i_289_ < m[i_286_]) {
				i_285_ = is_284_[(i & 0x3f80) + (i >>> 25)];
				int i_342_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_342_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_342_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i += i_337_;
			    i_286_++;
			    i_289_ += i_290_;
			    if (i_289_ < m[i_286_]) {
				i_285_ = is_284_[(i & 0x3f80) + (i >>> 25)];
				int i_343_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_343_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_343_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i += i_337_;
			    i_286_++;
			    i_289_ += i_290_;
			    if (i_289_ < m[i_286_]) {
				i_285_ = is_284_[(i & 0x3f80) + (i >>> 25)];
				int i_344_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_344_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_344_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i += i_337_;
			    i_286_++;
			    i_289_ += i_290_;
			    if (i_289_ < m[i_286_]) {
				i_285_ = is_284_[(i & 0x3f80) + (i >>> 25)];
				int i_345_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_345_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_345_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i += i_337_;
			    i_286_++;
			    i_289_ += i_290_;
			    if (i_289_ < m[i_286_]) {
				i_285_ = is_284_[(i & 0x3f80) + (i >>> 25)];
				int i_346_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_346_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_346_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i += i_337_;
			    i_286_++;
			    i_289_ += i_290_;
			    i_333_ = i_335_;
			    i_334_ = i_336_;
			    f += f_298_;
			    f_296_ += f_299_;
			    f_297_ += f_300_;
			    if (f_297_ != 0.0F) {
				i_335_ = (int) (f * 16384.0F / f_297_);
				i_336_ = (int) (f_296_ * 16384.0F / f_297_);
			    } else {
				i_335_ = 0;
				i_336_ = 0;
			    }
			    i = (i_333_ << 18) + i_334_;
			    i_337_ = ((i_335_ - i_333_ >> 3 << 18)
				      + (i_336_ - i_334_ >> 3));
			    i_294_ += i_295_;
			    i_338_ = i_294_ >> 8;
			    i_291_ += i_292_;
			    i_302_ = i_291_ >> 16;
			    i_303_ = 255 - i_302_;
			    i_304_ = (((i_293_ & 0xff00ff) * i_302_ & ~0xff00ff
				       | (i_293_ & 0xff00) * i_302_ & 0xff0000)
				      >>> 8);
			} while (--i_301_ > 0);
		    }
		    i_301_ = i_288_ - i_287_ & 0x7;
		    if (i_301_ > 0) {
			do {
			    if (i_289_ < m[i_286_]) {
				i_285_ = is_284_[(i & 0x3f80) + (i >>> 25)];
				int i_347_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_347_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_347_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i += i_337_;
			    i_286_++;
			    i_289_ += i_290_;
			} while (--i_301_ > 0);
			break;
		    }
		} else {
		    if (i_301_ > 0) {
			do {
			    if (i_289_ < m[i_286_]
				&& ((i_285_
				     = is_284_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_348_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_348_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_348_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i_286_++;
			    i += i_337_;
			    i_289_ += i_290_;
			    if (i_289_ < m[i_286_]
				&& ((i_285_
				     = is_284_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_349_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_349_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_349_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i_286_++;
			    i += i_337_;
			    i_289_ += i_290_;
			    if (i_289_ < m[i_286_]
				&& ((i_285_
				     = is_284_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_350_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_350_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_350_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i_286_++;
			    i += i_337_;
			    i_289_ += i_290_;
			    if (i_289_ < m[i_286_]
				&& ((i_285_
				     = is_284_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_351_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_351_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_351_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i_286_++;
			    i += i_337_;
			    i_289_ += i_290_;
			    if (i_289_ < m[i_286_]
				&& ((i_285_
				     = is_284_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_352_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_352_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_352_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i_286_++;
			    i += i_337_;
			    i_289_ += i_290_;
			    if (i_289_ < m[i_286_]
				&& ((i_285_
				     = is_284_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_353_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_353_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_353_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i_286_++;
			    i += i_337_;
			    i_289_ += i_290_;
			    if (i_289_ < m[i_286_]
				&& ((i_285_
				     = is_284_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_354_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_354_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_354_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i_286_++;
			    i += i_337_;
			    i_289_ += i_290_;
			    if (i_289_ < m[i_286_]
				&& ((i_285_
				     = is_284_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_355_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_355_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_355_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i_286_++;
			    i += i_337_;
			    i_289_ += i_290_;
			    i_333_ = i_335_;
			    i_334_ = i_336_;
			    f += f_298_;
			    f_296_ += f_299_;
			    f_297_ += f_300_;
			    if (f_297_ != 0.0F) {
				i_335_ = (int) (f * 16384.0F / f_297_);
				i_336_ = (int) (f_296_ * 16384.0F / f_297_);
			    } else {
				i_335_ = 0;
				i_336_ = 0;
			    }
			    i = (i_333_ << 18) + i_334_;
			    i_337_ = ((i_335_ - i_333_ >> 3 << 18)
				      + (i_336_ - i_334_ >> 3));
			    i_294_ += i_295_;
			    i_338_ = i_294_ >> 8;
			    i_291_ += i_292_;
			    i_302_ = i_291_ >> 16;
			    i_303_ = 255 - i_302_;
			    i_304_ = (((i_293_ & 0xff00ff) * i_302_ & ~0xff00ff
				       | (i_293_ & 0xff00) * i_302_ & 0xff0000)
				      >>> 8);
			} while (--i_301_ > 0);
		    }
		    i_301_ = i_288_ - i_287_ & 0x7;
		    if (i_301_ > 0) {
			do {
			    if (i_289_ < m[i_286_]
				&& ((i_285_
				     = is_284_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				int i_356_ = is[i_286_];
				i_285_ = (((i_285_ & 0xff00ff) * i_338_
					   & ~0xff00ff)
					  + ((i_285_ & 0xff00) * i_338_
					     & 0xff0000)) >> 8;
				i_285_ = ((((i_356_ & 0xff00ff) * i_305_
					    + (i_285_ & 0xff00ff) * i_306_)
					   & ~0xff00ff)
					  + (((i_356_ & 0xff00) * i_305_
					      + (i_285_ & 0xff00) * i_306_)
					     & 0xff0000)) >> 8;
				is[i_286_] = ((((i_285_ & 0xff00ff) * i_303_
						& ~0xff00ff)
					       | ((i_285_ & 0xff00) * i_303_
						  & 0xff0000))
					      >>> 8) + i_304_;
				m[i_286_] = i_289_;
			    }
			    i_286_++;
			    i += i_337_;
			    i_289_ += i_290_;
			} while (--i_301_ > 0);
		    }
		}
	    } while (false);
	}
    }
    
    final int a() {
	return ((jea) this).h[0] % f;
    }
    
    private final void a(int[] is, int[] is_357_, int i, int i_358_,
			 int i_359_, int i_360_, int i_361_, int i_362_,
			 int i_363_, int i_364_, int i_365_, int i_366_,
			 int i_367_, int i_368_, int i_369_) {
	if (((jea) this).o) {
	    if (i_361_ > ((jea) this).b)
		i_361_ = ((jea) this).b;
	    if (i_360_ < 0)
		i_360_ = 0;
	}
	if (i_360_ < i_361_) {
	    if (((jea) this).j) {
		i += i_360_;
		i_364_ += i_365_ * i_360_;
		i_366_ += i_367_ * i_360_;
		i_368_ += i_369_ * i_360_;
		if (((jea) this).c) {
		    i_359_ = i_361_ - i_360_ >> 2;
		    i_365_ <<= 2;
		    i_367_ <<= 2;
		    i_369_ <<= 2;
		    if (((jea) this).q == 0) {
			if (i_359_ > 0) {
			    do {
				i_358_
				    = (~0xffffff | i_364_ << 8 & 0xff0000
				       | i_366_ & 0xff00 | i_368_ >> 8 & 0xff);
				i_364_ += i_365_;
				i_366_ += i_367_;
				i_368_ += i_369_;
				is[i++] = i_358_;
				is[i++] = i_358_;
				is[i++] = i_358_;
				is[i++] = i_358_;
			    } while (--i_359_ > 0);
			}
			i_359_ = i_361_ - i_360_ & 0x3;
			if (i_359_ > 0) {
			    i_358_ = (~0xffffff | i_364_ << 8 & 0xff0000
				      | i_366_ & 0xff00 | i_368_ >> 8 & 0xff);
			    do
				is[i++] = i_358_;
			    while (--i_359_ > 0);
			}
		    } else if (!((jea) this).k) {
			int i_370_ = ((jea) this).q;
			int i_371_ = 256 - ((jea) this).q;
			if (i_359_ > 0) {
			    do {
				i_358_
				    = (~0xffffff | i_364_ << 8 & 0xff0000
				       | i_366_ & 0xff00 | i_368_ >> 8 & 0xff);
				i_364_ += i_365_;
				i_366_ += i_367_;
				i_368_ += i_369_;
				i_358_ = (((i_358_ & 0xff00ff) * i_371_ >> 8
					   & 0xff00ff)
					  + ((i_358_ & 0xff00) * i_371_ >> 8
					     & 0xff00));
				int i_372_ = is[i];
				is[i++] = (i_358_
					   + ((i_372_ & 0xff00ff) * i_370_ >> 8
					      & 0xff00ff)
					   + ((i_372_ & 0xff00) * i_370_ >> 8
					      & 0xff00));
				i_372_ = is[i];
				is[i++] = (i_358_
					   + ((i_372_ & 0xff00ff) * i_370_ >> 8
					      & 0xff00ff)
					   + ((i_372_ & 0xff00) * i_370_ >> 8
					      & 0xff00));
				i_372_ = is[i];
				is[i++] = (i_358_
					   + ((i_372_ & 0xff00ff) * i_370_ >> 8
					      & 0xff00ff)
					   + ((i_372_ & 0xff00) * i_370_ >> 8
					      & 0xff00));
				i_372_ = is[i];
				is[i++] = (i_358_
					   + ((i_372_ & 0xff00ff) * i_370_ >> 8
					      & 0xff00ff)
					   + ((i_372_ & 0xff00) * i_370_ >> 8
					      & 0xff00));
			    } while (--i_359_ > 0);
			}
			i_359_ = i_361_ - i_360_ & 0x3;
			if (i_359_ > 0) {
			    i_358_ = (~0xffffff | i_364_ << 8 & 0xff0000
				      | i_366_ & 0xff00 | i_368_ >> 8 & 0xff);
			    i_358_ = (((i_358_ & 0xff00ff) * i_371_ >> 8
				       & 0xff00ff)
				      + ((i_358_ & 0xff00) * i_371_ >> 8
					 & 0xff00));
			    do {
				int i_373_ = is[i];
				is[i++] = (i_358_
					   + ((i_373_ & 0xff00ff) * i_370_ >> 8
					      & 0xff00ff)
					   + ((i_373_ & 0xff00) * i_370_ >> 8
					      & 0xff00));
			    } while (--i_359_ > 0);
			}
		    } else {
			if (i_359_ > 0) {
			    do {
				i_358_
				    = (i_364_ << 8 & 0xff0000 | i_366_ & 0xff00
				       | i_368_ >> 8 & 0xff);
				i_364_ += i_365_;
				i_366_ += i_367_;
				i_368_ += i_369_;
				int[] is_374_ = is;
				int i_375_ = i++;
				int i_376_ = i_358_;
				int i_377_ = is_374_[i_375_];
				int i_378_ = i_376_ + i_377_;
				int i_379_ = ((i_376_ & 0xff00ff)
					      + (i_377_ & 0xff00ff));
				i_377_
				    = (i_379_ & 0x1000100) + (i_378_ - i_379_
							      & 0x10000);
				is_374_[i_375_] = (~0xffffff | i_378_ - i_377_
						   | i_377_ - (i_377_ >>> 8));
				int[] is_380_ = is;
				int i_381_ = i++;
				int i_382_ = i_358_;
				int i_383_ = is_380_[i_381_];
				int i_384_ = i_382_ + i_383_;
				int i_385_ = ((i_382_ & 0xff00ff)
					      + (i_383_ & 0xff00ff));
				i_383_
				    = (i_385_ & 0x1000100) + (i_384_ - i_385_
							      & 0x10000);
				is_380_[i_381_] = (~0xffffff | i_384_ - i_383_
						   | i_383_ - (i_383_ >>> 8));
				int[] is_386_ = is;
				int i_387_ = i++;
				int i_388_ = i_358_;
				int i_389_ = is_386_[i_387_];
				int i_390_ = i_388_ + i_389_;
				int i_391_ = ((i_388_ & 0xff00ff)
					      + (i_389_ & 0xff00ff));
				i_389_
				    = (i_391_ & 0x1000100) + (i_390_ - i_391_
							      & 0x10000);
				is_386_[i_387_] = (~0xffffff | i_390_ - i_389_
						   | i_389_ - (i_389_ >>> 8));
				int[] is_392_ = is;
				int i_393_ = i++;
				int i_394_ = i_358_;
				int i_395_ = is_392_[i_393_];
				int i_396_ = i_394_ + i_395_;
				int i_397_ = ((i_394_ & 0xff00ff)
					      + (i_395_ & 0xff00ff));
				i_395_
				    = (i_397_ & 0x1000100) + (i_396_ - i_397_
							      & 0x10000);
				is_392_[i_393_] = (~0xffffff | i_396_ - i_395_
						   | i_395_ - (i_395_ >>> 8));
			    } while (--i_359_ > 0);
			}
			i_359_ = i_361_ - i_360_ & 0x3;
			if (i_359_ > 0) {
			    i_358_ = (i_364_ << 8 & 0xff0000 | i_366_ & 0xff00
				      | i_368_ >> 8 & 0xff);
			    do {
				int[] is_398_ = is;
				int i_399_ = i++;
				int i_400_ = i_358_;
				int i_401_ = is_398_[i_399_];
				int i_402_ = i_400_ + i_401_;
				int i_403_ = ((i_400_ & 0xff00ff)
					      + (i_401_ & 0xff00ff));
				i_401_
				    = (i_403_ & 0x1000100) + (i_402_ - i_403_
							      & 0x10000);
				is_398_[i_399_] = (~0xffffff | i_402_ - i_401_
						   | i_401_ - (i_401_ >>> 8));
			    } while (--i_359_ > 0);
			}
		    }
		} else {
		    i_359_ = i_361_ - i_360_;
		    if (((jea) this).q == 0) {
			do {
			    is[i++] = (~0xffffff | i_364_ << 8 & 0xff0000
				       | i_366_ & 0xff00 | i_368_ >> 8 & 0xff);
			    i_364_ += i_365_;
			    i_366_ += i_367_;
			    i_368_ += i_369_;
			} while (--i_359_ > 0);
		    } else if (!((jea) this).k) {
			int i_404_ = ((jea) this).q;
			int i_405_ = 256 - ((jea) this).q;
			do {
			    i_358_ = (~0xffffff | i_364_ << 8 & 0xff0000
				      | i_366_ & 0xff00 | i_368_ >> 8 & 0xff);
			    i_364_ += i_365_;
			    i_366_ += i_367_;
			    i_368_ += i_369_;
			    i_358_ = (((i_358_ & 0xff00ff) * i_405_ >> 8
				       & 0xff00ff)
				      + ((i_358_ & 0xff00) * i_405_ >> 8
					 & 0xff00));
			    int i_406_ = is[i];
			    is[i++] = (i_358_
				       + ((i_406_ & 0xff00ff) * i_404_ >> 8
					  & 0xff00ff)
				       + ((i_406_ & 0xff00) * i_404_ >> 8
					  & 0xff00));
			} while (--i_359_ > 0);
		    } else {
			do {
			    int[] is_407_ = is;
			    int i_408_ = i++;
			    int i_409_
				= (i_364_ << 8 & 0xff0000 | i_366_ & 0xff00
				   | i_368_ >> 8 & 0xff);
			    int i_410_ = is_407_[i_408_];
			    int i_411_ = i_409_ + i_410_;
			    int i_412_
				= (i_409_ & 0xff00ff) + (i_410_ & 0xff00ff);
			    i_410_ = (i_412_ & 0x1000100) + (i_411_ - i_412_
							     & 0x10000);
			    is_407_[i_408_] = (~0xffffff | i_411_ - i_410_
					       | i_410_ - (i_410_ >>> 8));
			    i_364_ += i_365_;
			    i_366_ += i_367_;
			    i_368_ += i_369_;
			} while (--i_359_ > 0);
		    }
		}
	    } else {
		i += i_360_ - 1;
		i_362_ += i_363_ * i_360_;
		i_364_ += i_365_ * i_360_;
		i_366_ += i_367_ * i_360_;
		i_368_ += i_369_ * i_360_;
		if (((lfa) d).i) {
		    if (((jea) this).c) {
			i_359_ = i_361_ - i_360_ >> 2;
			i_365_ <<= 2;
			i_367_ <<= 2;
			i_369_ <<= 2;
			if (((jea) this).q == 0) {
			    if (i_359_ > 0) {
				do {
				    i_358_
					= (~0xffffff | i_364_ << 8 & 0xff0000
					   | i_366_ & 0xff00
					   | i_368_ >> 8 & 0xff);
				    i_364_ += i_365_;
				    i_366_ += i_367_;
				    i_368_ += i_369_;
				    if (i_362_ < is_357_[++i]) {
					is[i] = i_358_;
					is_357_[i] = i_362_;
				    }
				    i_362_ += i_363_;
				    if (i_362_ < is_357_[++i]) {
					is[i] = i_358_;
					is_357_[i] = i_362_;
				    }
				    i_362_ += i_363_;
				    if (i_362_ < is_357_[++i]) {
					is[i] = i_358_;
					is_357_[i] = i_362_;
				    }
				    i_362_ += i_363_;
				    if (i_362_ < is_357_[++i]) {
					is[i] = i_358_;
					is_357_[i] = i_362_;
				    }
				    i_362_ += i_363_;
				} while (--i_359_ > 0);
			    }
			    i_359_ = i_361_ - i_360_ & 0x3;
			    if (i_359_ > 0) {
				i_358_
				    = (~0xffffff | i_364_ << 8 & 0xff0000
				       | i_366_ & 0xff00 | i_368_ >> 8 & 0xff);
				do {
				    if (i_362_ < is_357_[++i]) {
					is[i] = i_358_;
					is_357_[i] = i_362_;
				    }
				    i_362_ += i_363_;
				} while (--i_359_ > 0);
			    }
			} else if (!((jea) this).k) {
			    int i_413_ = ((jea) this).q;
			    int i_414_ = 256 - ((jea) this).q;
			    if (i_359_ > 0) {
				do {
				    i_358_
					= (~0xffffff | i_364_ << 8 & 0xff0000
					   | i_366_ & 0xff00
					   | i_368_ >> 8 & 0xff);
				    i_364_ += i_365_;
				    i_366_ += i_367_;
				    i_368_ += i_369_;
				    i_358_
					= (((i_358_ & 0xff00ff) * i_414_ >> 8
					    & 0xff00ff)
					   + ((i_358_ & 0xff00) * i_414_ >> 8
					      & 0xff00));
				    if (i_362_ < is_357_[++i]) {
					int i_415_ = is[i];
					is[i]
					    = (i_358_
					       + (((i_415_ & 0xff00ff) * i_413_
						   >> 8)
						  & 0xff00ff)
					       + (((i_415_ & 0xff00) * i_413_
						   >> 8)
						  & 0xff00));
					is_357_[i] = i_362_;
				    }
				    i_362_ += i_363_;
				    if (i_362_ < is_357_[++i]) {
					int i_416_ = is[i];
					is[i]
					    = (i_358_
					       + (((i_416_ & 0xff00ff) * i_413_
						   >> 8)
						  & 0xff00ff)
					       + (((i_416_ & 0xff00) * i_413_
						   >> 8)
						  & 0xff00));
					is_357_[i] = i_362_;
				    }
				    i_362_ += i_363_;
				    if (i_362_ < is_357_[++i]) {
					int i_417_ = is[i];
					is[i]
					    = (i_358_
					       + (((i_417_ & 0xff00ff) * i_413_
						   >> 8)
						  & 0xff00ff)
					       + (((i_417_ & 0xff00) * i_413_
						   >> 8)
						  & 0xff00));
					is_357_[i] = i_362_;
				    }
				    i_362_ += i_363_;
				    if (i_362_ < is_357_[++i]) {
					int i_418_ = is[i];
					is[i]
					    = (i_358_
					       + (((i_418_ & 0xff00ff) * i_413_
						   >> 8)
						  & 0xff00ff)
					       + (((i_418_ & 0xff00) * i_413_
						   >> 8)
						  & 0xff00));
					is_357_[i] = i_362_;
				    }
				    i_362_ += i_363_;
				} while (--i_359_ > 0);
			    }
			    i_359_ = i_361_ - i_360_ & 0x3;
			    if (i_359_ > 0) {
				i_358_
				    = (~0xffffff | i_364_ << 8 & 0xff0000
				       | i_366_ & 0xff00 | i_368_ >> 8 & 0xff);
				i_358_ = (((i_358_ & 0xff00ff) * i_414_ >> 8
					   & 0xff00ff)
					  + ((i_358_ & 0xff00) * i_414_ >> 8
					     & 0xff00));
				do {
				    if (i_362_ < is_357_[++i]) {
					int i_419_ = is[i];
					is[i]
					    = (i_358_
					       + (((i_419_ & 0xff00ff) * i_413_
						   >> 8)
						  & 0xff00ff)
					       + (((i_419_ & 0xff00) * i_413_
						   >> 8)
						  & 0xff00));
					is_357_[i] = i_362_;
				    }
				    i_362_ += i_363_;
				} while (--i_359_ > 0);
			    }
			} else {
			    if (i_359_ > 0) {
				do {
				    i_358_ = (i_364_ << 8 & 0xff0000
					      | i_366_ & 0xff00
					      | i_368_ >> 8 & 0xff);
				    i_364_ += i_365_;
				    i_366_ += i_367_;
				    i_368_ += i_369_;
				    if (i_362_ < is_357_[++i]) {
					int[] is_420_ = is;
					int i_421_ = i;
					int i_422_ = i_358_;
					int i_423_ = is_420_[i_421_];
					int i_424_ = i_422_ + i_423_;
					int i_425_ = ((i_422_ & 0xff00ff)
						      + (i_423_ & 0xff00ff));
					i_423_
					    = ((i_425_ & 0x1000100)
					       + (i_424_ - i_425_ & 0x10000));
					is_420_[i_421_]
					    = (~0xffffff | i_424_ - i_423_
					       | i_423_ - (i_423_ >>> 8));
					is_357_[i] = i_362_;
				    }
				    i_362_ += i_363_;
				    if (i_362_ < is_357_[++i]) {
					int[] is_426_ = is;
					int i_427_ = i;
					int i_428_ = i_358_;
					int i_429_ = is_426_[i_427_];
					int i_430_ = i_428_ + i_429_;
					int i_431_ = ((i_428_ & 0xff00ff)
						      + (i_429_ & 0xff00ff));
					i_429_
					    = ((i_431_ & 0x1000100)
					       + (i_430_ - i_431_ & 0x10000));
					is_426_[i_427_]
					    = (~0xffffff | i_430_ - i_429_
					       | i_429_ - (i_429_ >>> 8));
					is_357_[i] = i_362_;
				    }
				    i_362_ += i_363_;
				    if (i_362_ < is_357_[++i]) {
					int[] is_432_ = is;
					int i_433_ = i;
					int i_434_ = i_358_;
					int i_435_ = is_432_[i_433_];
					int i_436_ = i_434_ + i_435_;
					int i_437_ = ((i_434_ & 0xff00ff)
						      + (i_435_ & 0xff00ff));
					i_435_
					    = ((i_437_ & 0x1000100)
					       + (i_436_ - i_437_ & 0x10000));
					is_432_[i_433_]
					    = (~0xffffff | i_436_ - i_435_
					       | i_435_ - (i_435_ >>> 8));
					is_357_[i] = i_362_;
				    }
				    i_362_ += i_363_;
				    if (i_362_ < is_357_[++i]) {
					int[] is_438_ = is;
					int i_439_ = i;
					int i_440_ = i_358_;
					int i_441_ = is_438_[i_439_];
					int i_442_ = i_440_ + i_441_;
					int i_443_ = ((i_440_ & 0xff00ff)
						      + (i_441_ & 0xff00ff));
					i_441_
					    = ((i_443_ & 0x1000100)
					       + (i_442_ - i_443_ & 0x10000));
					is_438_[i_439_]
					    = (~0xffffff | i_442_ - i_441_
					       | i_441_ - (i_441_ >>> 8));
					is_357_[i] = i_362_;
				    }
				    i_362_ += i_363_;
				} while (--i_359_ > 0);
			    }
			    i_359_ = i_361_ - i_360_ & 0x3;
			    if (i_359_ > 0) {
				i_358_
				    = (i_364_ << 8 & 0xff0000 | i_366_ & 0xff00
				       | i_368_ >> 8 & 0xff);
				do {
				    if (i_362_ < is_357_[++i]) {
					int[] is_444_ = is;
					int i_445_ = i;
					int i_446_ = i_358_;
					int i_447_ = is_444_[i_445_];
					int i_448_ = i_446_ + i_447_;
					int i_449_ = ((i_446_ & 0xff00ff)
						      + (i_447_ & 0xff00ff));
					i_447_
					    = ((i_449_ & 0x1000100)
					       + (i_448_ - i_449_ & 0x10000));
					is_444_[i_445_]
					    = (~0xffffff | i_448_ - i_447_
					       | i_447_ - (i_447_ >>> 8));
					is_357_[i] = i_362_;
				    }
				    i_362_ += i_363_;
				} while (--i_359_ > 0);
			    }
			}
		    } else {
			i_359_ = i_361_ - i_360_;
			if (((jea) this).q == 0) {
			    do {
				if (i_362_ < is_357_[++i]) {
				    is[i] = (~0xffffff | i_364_ << 8 & 0xff0000
					     | i_366_ & 0xff00
					     | i_368_ >> 8 & 0xff);
				    is_357_[i] = i_362_;
				}
				i_362_ += i_363_;
				i_364_ += i_365_;
				i_366_ += i_367_;
				i_368_ += i_369_;
			    } while (--i_359_ > 0);
			} else if (!((jea) this).k) {
			    int i_450_ = ((jea) this).q;
			    int i_451_ = 256 - ((jea) this).q;
			    do {
				if (i_362_ < is_357_[++i]) {
				    i_358_
					= (~0xffffff | i_364_ << 8 & 0xff0000
					   | i_366_ & 0xff00
					   | i_368_ >> 8 & 0xff);
				    i_358_
					= (((i_358_ & 0xff00ff) * i_451_ >> 8
					    & 0xff00ff)
					   + ((i_358_ & 0xff00) * i_451_ >> 8
					      & 0xff00));
				    int i_452_ = is[i];
				    is[i]
					= (i_358_
					   + ((i_452_ & 0xff00ff) * i_450_ >> 8
					      & 0xff00ff)
					   + ((i_452_ & 0xff00) * i_450_ >> 8
					      & 0xff00));
				    is_357_[i] = i_362_;
				}
				i_362_ += i_363_;
				i_364_ += i_365_;
				i_366_ += i_367_;
				i_368_ += i_369_;
			    } while (--i_359_ > 0);
			} else {
			    do {
				if (i_362_ < is_357_[++i]) {
				    int[] is_453_ = is;
				    int i_454_ = i;
				    int i_455_ = (i_364_ << 8 & 0xff0000
						  | i_366_ & 0xff00
						  | i_368_ >> 8 & 0xff);
				    int i_456_ = is_453_[i_454_];
				    int i_457_ = i_455_ + i_456_;
				    int i_458_ = ((i_455_ & 0xff00ff)
						  + (i_456_ & 0xff00ff));
				    i_456_ = ((i_458_ & 0x1000100)
					      + (i_457_ - i_458_ & 0x10000));
				    is_453_[i_454_]
					= (~0xffffff | i_457_ - i_456_
					   | i_456_ - (i_456_ >>> 8));
				    is_357_[i] = i_362_;
				}
				i_362_ += i_363_;
				i_364_ += i_365_;
				i_366_ += i_367_;
				i_368_ += i_369_;
			    } while (--i_359_ > 0);
			}
		    }
		} else if (((jea) this).c) {
		    i_359_ = i_361_ - i_360_ >> 2;
		    i_365_ <<= 2;
		    i_367_ <<= 2;
		    i_369_ <<= 2;
		    if (((jea) this).q == 0) {
			if (i_359_ > 0) {
			    do {
				i_358_
				    = (~0xffffff | i_364_ << 8 & 0xff0000
				       | i_366_ & 0xff00 | i_368_ >> 8 & 0xff);
				i_364_ += i_365_;
				i_366_ += i_367_;
				i_368_ += i_369_;
				if (i_362_ < is_357_[++i])
				    is[i] = i_358_;
				i_362_ += i_363_;
				if (i_362_ < is_357_[++i])
				    is[i] = i_358_;
				i_362_ += i_363_;
				if (i_362_ < is_357_[++i])
				    is[i] = i_358_;
				i_362_ += i_363_;
				if (i_362_ < is_357_[++i])
				    is[i] = i_358_;
				i_362_ += i_363_;
			    } while (--i_359_ > 0);
			}
			i_359_ = i_361_ - i_360_ & 0x3;
			if (i_359_ > 0) {
			    i_358_ = (~0xffffff | i_364_ << 8 & 0xff0000
				      | i_366_ & 0xff00 | i_368_ >> 8 & 0xff);
			    do {
				if (i_362_ < is_357_[++i])
				    is[i] = i_358_;
				i_362_ += i_363_;
			    } while (--i_359_ > 0);
			}
		    } else if (!((jea) this).k) {
			int i_459_ = ((jea) this).q;
			int i_460_ = 256 - ((jea) this).q;
			if (i_359_ > 0) {
			    do {
				i_358_
				    = (~0xffffff | i_364_ << 8 & 0xff0000
				       | i_366_ & 0xff00 | i_368_ >> 8 & 0xff);
				i_364_ += i_365_;
				i_366_ += i_367_;
				i_368_ += i_369_;
				i_358_ = (((i_358_ & 0xff00ff) * i_460_ >> 8
					   & 0xff00ff)
					  + ((i_358_ & 0xff00) * i_460_ >> 8
					     & 0xff00));
				if (i_362_ < is_357_[++i]) {
				    int i_461_ = is[i];
				    is[i]
					= (i_358_
					   + ((i_461_ & 0xff00ff) * i_459_ >> 8
					      & 0xff00ff)
					   + ((i_461_ & 0xff00) * i_459_ >> 8
					      & 0xff00));
				}
				i_362_ += i_363_;
				if (i_362_ < is_357_[++i]) {
				    int i_462_ = is[i];
				    is[i]
					= (i_358_
					   + ((i_462_ & 0xff00ff) * i_459_ >> 8
					      & 0xff00ff)
					   + ((i_462_ & 0xff00) * i_459_ >> 8
					      & 0xff00));
				}
				i_362_ += i_363_;
				if (i_362_ < is_357_[++i]) {
				    int i_463_ = is[i];
				    is[i]
					= (i_358_
					   + ((i_463_ & 0xff00ff) * i_459_ >> 8
					      & 0xff00ff)
					   + ((i_463_ & 0xff00) * i_459_ >> 8
					      & 0xff00));
				}
				i_362_ += i_363_;
				if (i_362_ < is_357_[++i]) {
				    int i_464_ = is[i];
				    is[i]
					= (i_358_
					   + ((i_464_ & 0xff00ff) * i_459_ >> 8
					      & 0xff00ff)
					   + ((i_464_ & 0xff00) * i_459_ >> 8
					      & 0xff00));
				}
				i_362_ += i_363_;
			    } while (--i_359_ > 0);
			}
			i_359_ = i_361_ - i_360_ & 0x3;
			if (i_359_ > 0) {
			    i_358_ = (~0xffffff | i_364_ << 8 & 0xff0000
				      | i_366_ & 0xff00 | i_368_ >> 8 & 0xff);
			    i_358_ = (((i_358_ & 0xff00ff) * i_460_ >> 8
				       & 0xff00ff)
				      + ((i_358_ & 0xff00) * i_460_ >> 8
					 & 0xff00));
			    do {
				if (i_362_ < is_357_[++i]) {
				    int i_465_ = is[i];
				    is[i]
					= (i_358_
					   + ((i_465_ & 0xff00ff) * i_459_ >> 8
					      & 0xff00ff)
					   + ((i_465_ & 0xff00) * i_459_ >> 8
					      & 0xff00));
				}
				i_362_ += i_363_;
			    } while (--i_359_ > 0);
			}
		    } else {
			if (i_359_ > 0) {
			    do {
				i_358_
				    = (i_364_ << 8 & 0xff0000 | i_366_ & 0xff00
				       | i_368_ >> 8 & 0xff);
				i_364_ += i_365_;
				i_366_ += i_367_;
				i_368_ += i_369_;
				if (i_362_ < is_357_[++i]) {
				    int[] is_466_ = is;
				    int i_467_ = i;
				    int i_468_ = i_358_;
				    int i_469_ = is_466_[i_467_];
				    int i_470_ = i_468_ + i_469_;
				    int i_471_ = ((i_468_ & 0xff00ff)
						  + (i_469_ & 0xff00ff));
				    i_469_ = ((i_471_ & 0x1000100)
					      + (i_470_ - i_471_ & 0x10000));
				    is_466_[i_467_]
					= (~0xffffff | i_470_ - i_469_
					   | i_469_ - (i_469_ >>> 8));
				}
				i_362_ += i_363_;
				if (i_362_ < is_357_[++i]) {
				    int[] is_472_ = is;
				    int i_473_ = i;
				    int i_474_ = i_358_;
				    int i_475_ = is_472_[i_473_];
				    int i_476_ = i_474_ + i_475_;
				    int i_477_ = ((i_474_ & 0xff00ff)
						  + (i_475_ & 0xff00ff));
				    i_475_ = ((i_477_ & 0x1000100)
					      + (i_476_ - i_477_ & 0x10000));
				    is_472_[i_473_]
					= (~0xffffff | i_476_ - i_475_
					   | i_475_ - (i_475_ >>> 8));
				}
				i_362_ += i_363_;
				if (i_362_ < is_357_[++i]) {
				    int[] is_478_ = is;
				    int i_479_ = i;
				    int i_480_ = i_358_;
				    int i_481_ = is_478_[i_479_];
				    int i_482_ = i_480_ + i_481_;
				    int i_483_ = ((i_480_ & 0xff00ff)
						  + (i_481_ & 0xff00ff));
				    i_481_ = ((i_483_ & 0x1000100)
					      + (i_482_ - i_483_ & 0x10000));
				    is_478_[i_479_]
					= (~0xffffff | i_482_ - i_481_
					   | i_481_ - (i_481_ >>> 8));
				}
				i_362_ += i_363_;
				if (i_362_ < is_357_[++i]) {
				    int[] is_484_ = is;
				    int i_485_ = i;
				    int i_486_ = i_358_;
				    int i_487_ = is_484_[i_485_];
				    int i_488_ = i_486_ + i_487_;
				    int i_489_ = ((i_486_ & 0xff00ff)
						  + (i_487_ & 0xff00ff));
				    i_487_ = ((i_489_ & 0x1000100)
					      + (i_488_ - i_489_ & 0x10000));
				    is_484_[i_485_]
					= (~0xffffff | i_488_ - i_487_
					   | i_487_ - (i_487_ >>> 8));
				}
				i_362_ += i_363_;
			    } while (--i_359_ > 0);
			}
			i_359_ = i_361_ - i_360_ & 0x3;
			if (i_359_ > 0) {
			    i_358_ = (i_364_ << 8 & 0xff0000 | i_366_ & 0xff00
				      | i_368_ >> 8 & 0xff);
			    do {
				if (i_362_ < is_357_[++i]) {
				    int[] is_490_ = is;
				    int i_491_ = i;
				    int i_492_ = i_358_;
				    int i_493_ = is_490_[i_491_];
				    int i_494_ = i_492_ + i_493_;
				    int i_495_ = ((i_492_ & 0xff00ff)
						  + (i_493_ & 0xff00ff));
				    i_493_ = ((i_495_ & 0x1000100)
					      + (i_494_ - i_495_ & 0x10000));
				    is_490_[i_491_]
					= (~0xffffff | i_494_ - i_493_
					   | i_493_ - (i_493_ >>> 8));
				}
				i_362_ += i_363_;
			    } while (--i_359_ > 0);
			}
		    }
		} else {
		    i_359_ = i_361_ - i_360_;
		    if (((jea) this).q == 0) {
			do {
			    if (i_362_ < is_357_[++i])
				is[i]
				    = (~0xffffff | i_364_ << 8 & 0xff0000
				       | i_366_ & 0xff00 | i_368_ >> 8 & 0xff);
			    i_362_ += i_363_;
			    i_364_ += i_365_;
			    i_366_ += i_367_;
			    i_368_ += i_369_;
			} while (--i_359_ > 0);
		    } else if (!((jea) this).k) {
			int i_496_ = ((jea) this).q;
			int i_497_ = 256 - ((jea) this).q;
			do {
			    if (i_362_ < is_357_[++i]) {
				i_358_
				    = (~0xffffff | i_364_ << 8 & 0xff0000
				       | i_366_ & 0xff00 | i_368_ >> 8 & 0xff);
				i_358_ = (((i_358_ & 0xff00ff) * i_497_ >> 8
					   & 0xff00ff)
					  + ((i_358_ & 0xff00) * i_497_ >> 8
					     & 0xff00));
				int i_498_ = is[i];
				is[i] = (i_358_
					 + ((i_498_ & 0xff00ff) * i_496_ >> 8
					    & 0xff00ff)
					 + ((i_498_ & 0xff00) * i_496_ >> 8
					    & 0xff00));
			    }
			    i_362_ += i_363_;
			    i_364_ += i_365_;
			    i_366_ += i_367_;
			    i_368_ += i_369_;
			} while (--i_359_ > 0);
		    } else {
			do {
			    if (i_362_ < is_357_[++i]) {
				int[] is_499_ = is;
				int i_500_ = i;
				int i_501_
				    = (i_364_ << 8 & 0xff0000 | i_366_ & 0xff00
				       | i_368_ >> 8 & 0xff);
				int i_502_ = is_499_[i_500_];
				int i_503_ = i_501_ + i_502_;
				int i_504_ = ((i_501_ & 0xff00ff)
					      + (i_502_ & 0xff00ff));
				i_502_
				    = (i_504_ & 0x1000100) + (i_503_ - i_504_
							      & 0x10000);
				is_499_[i_500_] = (~0xffffff | i_503_ - i_502_
						   | i_502_ - (i_502_ >>> 8));
			    }
			    i_362_ += i_363_;
			    i_364_ += i_365_;
			    i_366_ += i_367_;
			    i_368_ += i_369_;
			} while (--i_359_ > 0);
		    }
		}
	    }
	}
    }
    
    private final void d
	(int[] is, int[] is_505_, int i, int i_506_, int i_507_, int i_508_,
	 int i_509_, int i_510_, int i_511_, int i_512_, int i_513_,
	 int i_514_, int i_515_, int i_516_, float f, float f_517_,
	 float f_518_, float f_519_, float f_520_, float f_521_) {
	if (((jea) this).q == 0) {
	    if (((lfa) d).i)
		b(is, is_505_, i, i_506_, i_507_, i_508_, i_509_, i_510_,
		  i_511_, i_512_, i_513_, i_514_, i_515_, i_516_, f, f_517_,
		  f_518_, f_519_, f_520_, f_521_);
	    else
		e(is, is_505_, i, i_506_, i_507_, i_508_, i_509_, i_510_,
		  i_511_, i_512_, i_513_, i_514_, i_515_, i_516_, f, f_517_,
		  f_518_, f_519_, f_520_, f_521_);
	} else if (((lfa) d).i)
	    c(is, is_505_, i, i_506_, i_507_, i_508_, i_509_, i_510_, i_511_,
	      i_512_, i_513_, i_514_, i_515_, i_516_, f, f_517_, f_518_,
	      f_519_, f_520_, f_521_);
	else
	    a(is, is_505_, i, i_506_, i_507_, i_508_, i_509_, i_510_, i_511_,
	      i_512_, i_513_, i_514_, i_515_, i_516_, f, f_517_, f_518_,
	      f_519_, f_520_, f_521_);
    }
    
    private final void e
	(int[] is, int[] is_522_, int i, int i_523_, int i_524_, int i_525_,
	 int i_526_, int i_527_, int i_528_, int i_529_, int i_530_,
	 int i_531_, int i_532_, int i_533_, float f, float f_534_,
	 float f_535_, float f_536_, float f_537_, float f_538_) {
	if (((jea) this).o) {
	    if (i_526_ > ((jea) this).b)
		i_526_ = ((jea) this).b;
	    if (i_525_ < 0)
		i_525_ = 0;
	}
	if (i_525_ < i_526_) {
	    i_524_ += i_525_;
	    i_529_ += i_530_ * i_525_;
	    i_532_ += i_533_ * i_525_;
	    i_527_ += i_528_ * i_525_;
	    int i_539_ = i_526_ - i_525_;
	    i_530_ <<= 3;
	    int i_540_ = i_529_ >> 16;
	    int i_541_ = 255 - i_540_;
	    int i_542_ = (((i_531_ & 0xff00ff) * i_540_ & ~0xff00ff
			   | (i_531_ & 0xff00) * i_540_ & 0xff0000)
			  >>> 8);
	    do {
		if (a) {
		    int i_543_ = i_525_ - ((jea) this).i;
		    f += f_536_ / 8.0F * (float) i_543_;
		    f_534_ += f_537_ / 8.0F * (float) i_543_;
		    f_535_ += f_538_ / 8.0F * (float) i_543_;
		    int i_544_;
		    int i_545_;
		    if (f_535_ != 0.0F) {
			i_544_ = (int) (f * 4096.0F / f_535_);
			i_545_ = (int) (f_534_ * 4096.0F / f_535_);
		    } else {
			i_544_ = 0;
			i_545_ = 0;
		    }
		    f += f_536_;
		    f_534_ += f_537_;
		    f_535_ += f_538_;
		    int i_546_;
		    int i_547_;
		    if (f_535_ != 0.0F) {
			i_546_ = (int) (f * 4096.0F / f_535_);
			i_547_ = (int) (f_534_ * 4096.0F / f_535_);
		    } else {
			i_546_ = 0;
			i_547_ = 0;
		    }
		    i = (i_544_ << 20) + i_545_;
		    int i_548_ = ((i_546_ - i_544_ >> 3 << 20)
				  + (i_547_ - i_545_ >> 3));
		    i_539_ >>= 3;
		    i_533_ <<= 3;
		    int i_549_ = i_532_ >> 8;
		    if (n) {
			if (i_539_ > 0) {
			    do {
				if (i_527_ < m[i_524_]) {
				    i_523_ = is_522_[(i & 0xfc0) + (i >>> 26)];
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i += i_548_;
				i_527_ += i_528_;
				i_524_++;
				if (i_527_ < m[i_524_]) {
				    i_523_ = is_522_[(i & 0xfc0) + (i >>> 26)];
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i += i_548_;
				i_527_ += i_528_;
				i_524_++;
				if (i_527_ < m[i_524_]) {
				    i_523_ = is_522_[(i & 0xfc0) + (i >>> 26)];
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i += i_548_;
				i_527_ += i_528_;
				i_524_++;
				if (i_527_ < m[i_524_]) {
				    i_523_ = is_522_[(i & 0xfc0) + (i >>> 26)];
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i += i_548_;
				i_527_ += i_528_;
				i_524_++;
				if (i_527_ < m[i_524_]) {
				    i_523_ = is_522_[(i & 0xfc0) + (i >>> 26)];
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i += i_548_;
				i_527_ += i_528_;
				i_524_++;
				if (i_527_ < m[i_524_]) {
				    i_523_ = is_522_[(i & 0xfc0) + (i >>> 26)];
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i += i_548_;
				i_527_ += i_528_;
				i_524_++;
				if (i_527_ < m[i_524_]) {
				    i_523_ = is_522_[(i & 0xfc0) + (i >>> 26)];
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i += i_548_;
				i_527_ += i_528_;
				i_524_++;
				if (i_527_ < m[i_524_]) {
				    i_523_ = is_522_[(i & 0xfc0) + (i >>> 26)];
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i += i_548_;
				i_527_ += i_528_;
				i_524_++;
				i_544_ = i_546_;
				i_545_ = i_547_;
				f += f_536_;
				f_534_ += f_537_;
				f_535_ += f_538_;
				if (f_535_ != 0.0F) {
				    i_546_ = (int) (f * 4096.0F / f_535_);
				    i_547_ = (int) (f_534_ * 4096.0F / f_535_);
				} else {
				    i_546_ = 0;
				    i_547_ = 0;
				}
				i = (i_544_ << 20) + i_545_;
				i_548_ = ((i_546_ - i_544_ >> 3 << 20)
					  + (i_547_ - i_545_ >> 3));
				i_532_ += i_533_;
				i_549_ = i_532_ >> 8;
				i_529_ += i_530_;
				i_540_ = i_529_ >> 16;
				i_541_ = 255 - i_540_;
				i_542_
				    = ((i_531_ & 0xff00ff) * i_540_ & ~0xff00ff
				       | ((i_531_ & 0xff00) * i_540_
					  & 0xff0000)) >>> 8;
			    } while (--i_539_ > 0);
			}
			i_539_ = i_526_ - i_525_ & 0x7;
			if (i_539_ > 0) {
			    do {
				if (i_527_ < m[i_524_]) {
				    i_523_ = is_522_[(i & 0xfc0) + (i >>> 26)];
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i += i_548_;
				i_527_ += i_528_;
				i_524_++;
			    } while (--i_539_ > 0);
			}
		    } else {
			if (i_539_ > 0) {
			    do {
				if (i_527_ < m[i_524_]
				    && ((i_523_
					 = is_522_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i_524_++;
				i += i_548_;
				i_527_ += i_528_;
				if (i_527_ < m[i_524_]
				    && ((i_523_
					 = is_522_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i_524_++;
				i += i_548_;
				i_527_ += i_528_;
				if (i_527_ < m[i_524_]
				    && ((i_523_
					 = is_522_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i_524_++;
				i += i_548_;
				i_527_ += i_528_;
				if (i_527_ < m[i_524_]
				    && ((i_523_
					 = is_522_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i_524_++;
				i += i_548_;
				i_527_ += i_528_;
				if (i_527_ < m[i_524_]
				    && ((i_523_
					 = is_522_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i_524_++;
				i += i_548_;
				i_527_ += i_528_;
				if (i_527_ < m[i_524_]
				    && ((i_523_
					 = is_522_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i_524_++;
				i += i_548_;
				i_527_ += i_528_;
				if (i_527_ < m[i_524_]
				    && ((i_523_
					 = is_522_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i_524_++;
				i += i_548_;
				i_527_ += i_528_;
				if (i_527_ < m[i_524_]
				    && ((i_523_
					 = is_522_[(i & 0xfc0) + (i >>> 26)])
					!= 0)) {
				    i_523_ = (((i_523_ & 0xff00ff) * i_549_
					       & ~0xff00ff)
					      + ((i_523_ & 0xff00) * i_549_
						 & 0xff0000)) >> 8;
				    is[i_524_]
					= ((((i_523_ & 0xff00ff) * i_541_
					     & ~0xff00ff)
					    | ((i_523_ & 0xff00) * i_541_
					       & 0xff0000))
					   >>> 8) + i_542_;
				}
				i_524_++;
				i += i_548_;
				i_527_ += i_528_;
				i_544_ = i_546_;
				i_545_ = i_547_;
				f += f_536_;
				f_534_ += f_537_;
				f_535_ += f_538_;
				if (f_535_ != 0.0F) {
				    i_546_ = (int) (f * 4096.0F / f_535_);
				    i_547_ = (int) (f_534_ * 4096.0F / f_535_);
				} else {
				    i_546_ = 0;
				    i_547_ = 0;
				}
				i = (i_544_ << 20) + i_545_;
				i_548_ = ((i_546_ - i_544_ >> 3 << 20)
					  + (i_547_ - i_545_ >> 3));
				i_532_ += i_533_;
				i_549_ = i_532_ >> 8;
				i_529_ += i_530_;
				i_540_ = i_529_ >> 16;
				i_541_ = 255 - i_540_;
				i_542_
				    = ((i_531_ & 0xff00ff) * i_540_ & ~0xff00ff
				       | ((i_531_ & 0xff00) * i_540_
					  & 0xff0000)) >>> 8;
			    } while (--i_539_ > 0);
			}
			i_539_ = i_526_ - i_525_ & 0x7;
			if (i_539_ <= 0)
			    break;
			do {
			    if (i_527_ < m[i_524_]
				&& ((i_523_
				     = is_522_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				i_523_ = (((i_523_ & 0xff00ff) * i_549_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_549_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i_524_++;
			    i += i_548_;
			    i_527_ += i_528_;
			} while (--i_539_ > 0);
		    }
		    break;
		}
		int i_550_ = i_525_ - ((jea) this).i;
		f += f_536_ / 8.0F * (float) i_550_;
		f_534_ += f_537_ / 8.0F * (float) i_550_;
		f_535_ += f_538_ / 8.0F * (float) i_550_;
		int i_551_;
		int i_552_;
		if (f_535_ != 0.0F) {
		    i_551_ = (int) (f * 16384.0F / f_535_);
		    i_552_ = (int) (f_534_ * 16384.0F / f_535_);
		} else {
		    i_551_ = 0;
		    i_552_ = 0;
		}
		f += f_536_;
		f_534_ += f_537_;
		f_535_ += f_538_;
		int i_553_;
		int i_554_;
		if (f_535_ != 0.0F) {
		    i_553_ = (int) (f * 16384.0F / f_535_);
		    i_554_ = (int) (f_534_ * 16384.0F / f_535_);
		} else {
		    i_553_ = 0;
		    i_554_ = 0;
		}
		i = (i_551_ << 18) + i_552_;
		int i_555_
		    = (i_553_ - i_551_ >> 3 << 18) + (i_554_ - i_552_ >> 3);
		i_539_ >>= 3;
		i_533_ <<= 3;
		int i_556_ = i_532_ >> 8;
		if (n) {
		    if (i_539_ > 0) {
			do {
			    if (i_527_ < m[i_524_]) {
				i_523_ = is_522_[(i & 0x3f80) + (i >>> 25)];
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i += i_555_;
			    i_524_++;
			    i_527_ += i_528_;
			    if (i_527_ < m[i_524_]) {
				i_523_ = is_522_[(i & 0x3f80) + (i >>> 25)];
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i += i_555_;
			    i_524_++;
			    i_527_ += i_528_;
			    if (i_527_ < m[i_524_]) {
				i_523_ = is_522_[(i & 0x3f80) + (i >>> 25)];
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i += i_555_;
			    i_524_++;
			    i_527_ += i_528_;
			    if (i_527_ < m[i_524_]) {
				i_523_ = is_522_[(i & 0x3f80) + (i >>> 25)];
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i += i_555_;
			    i_524_++;
			    i_527_ += i_528_;
			    if (i_527_ < m[i_524_]) {
				i_523_ = is_522_[(i & 0x3f80) + (i >>> 25)];
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i += i_555_;
			    i_524_++;
			    i_527_ += i_528_;
			    if (i_527_ < m[i_524_]) {
				i_523_ = is_522_[(i & 0x3f80) + (i >>> 25)];
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i += i_555_;
			    i_524_++;
			    i_527_ += i_528_;
			    if (i_527_ < m[i_524_]) {
				i_523_ = is_522_[(i & 0x3f80) + (i >>> 25)];
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i += i_555_;
			    i_524_++;
			    i_527_ += i_528_;
			    if (i_527_ < m[i_524_]) {
				i_523_ = is_522_[(i & 0x3f80) + (i >>> 25)];
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i += i_555_;
			    i_524_++;
			    i_527_ += i_528_;
			    i_551_ = i_553_;
			    i_552_ = i_554_;
			    f += f_536_;
			    f_534_ += f_537_;
			    f_535_ += f_538_;
			    if (f_535_ != 0.0F) {
				i_553_ = (int) (f * 16384.0F / f_535_);
				i_554_ = (int) (f_534_ * 16384.0F / f_535_);
			    } else {
				i_553_ = 0;
				i_554_ = 0;
			    }
			    i = (i_551_ << 18) + i_552_;
			    i_555_ = ((i_553_ - i_551_ >> 3 << 18)
				      + (i_554_ - i_552_ >> 3));
			    i_532_ += i_533_;
			    i_556_ = i_532_ >> 8;
			    i_529_ += i_530_;
			    i_540_ = i_529_ >> 16;
			    i_541_ = 255 - i_540_;
			    i_542_ = (((i_531_ & 0xff00ff) * i_540_ & ~0xff00ff
				       | (i_531_ & 0xff00) * i_540_ & 0xff0000)
				      >>> 8);
			} while (--i_539_ > 0);
		    }
		    i_539_ = i_526_ - i_525_ & 0x7;
		    if (i_539_ > 0) {
			do {
			    if (i_527_ < m[i_524_]) {
				i_523_ = is_522_[(i & 0x3f80) + (i >>> 25)];
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i += i_555_;
			    i_524_++;
			    i_527_ += i_528_;
			} while (--i_539_ > 0);
			break;
		    }
		} else {
		    if (i_539_ > 0) {
			do {
			    if (i_527_ < m[i_524_]
				&& ((i_523_
				     = is_522_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i_524_++;
			    i += i_555_;
			    i_527_ += i_528_;
			    if (i_527_ < m[i_524_]
				&& ((i_523_
				     = is_522_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i_524_++;
			    i += i_555_;
			    i_527_ += i_528_;
			    if (i_527_ < m[i_524_]
				&& ((i_523_
				     = is_522_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i_524_++;
			    i += i_555_;
			    i_527_ += i_528_;
			    if (i_527_ < m[i_524_]
				&& ((i_523_
				     = is_522_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i_524_++;
			    i += i_555_;
			    i_527_ += i_528_;
			    if (i_527_ < m[i_524_]
				&& ((i_523_
				     = is_522_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i_524_++;
			    i += i_555_;
			    i_527_ += i_528_;
			    if (i_527_ < m[i_524_]
				&& ((i_523_
				     = is_522_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i_524_++;
			    i += i_555_;
			    i_527_ += i_528_;
			    if (i_527_ < m[i_524_]
				&& ((i_523_
				     = is_522_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i_524_++;
			    i += i_555_;
			    i_527_ += i_528_;
			    if (i_527_ < m[i_524_]
				&& ((i_523_
				     = is_522_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i_524_++;
			    i += i_555_;
			    i_527_ += i_528_;
			    i_551_ = i_553_;
			    i_552_ = i_554_;
			    f += f_536_;
			    f_534_ += f_537_;
			    f_535_ += f_538_;
			    if (f_535_ != 0.0F) {
				i_553_ = (int) (f / f_535_ * 16384.0F);
				i_554_ = (int) (f_534_ / f_535_ * 16384.0F);
			    } else {
				i_553_ = 0;
				i_554_ = 0;
			    }
			    i = (i_551_ << 18) + i_552_;
			    i_555_ = ((i_553_ - i_551_ >> 3 << 18)
				      + (i_554_ - i_552_ >> 3));
			    i_532_ += i_533_;
			    i_556_ = i_532_ >> 8;
			    i_529_ += i_530_;
			    i_540_ = i_529_ >> 16;
			    i_541_ = 255 - i_540_;
			    i_542_ = (((i_531_ & 0xff00ff) * i_540_ & ~0xff00ff
				       | (i_531_ & 0xff00) * i_540_ & 0xff0000)
				      >>> 8);
			} while (--i_539_ > 0);
		    }
		    i_539_ = i_526_ - i_525_ & 0x7;
		    if (i_539_ > 0) {
			do {
			    if (i_527_ < m[i_524_]
				&& ((i_523_
				     = is_522_[(i & 0x3f80) + (i >>> 25)])
				    != 0)) {
				i_523_ = (((i_523_ & 0xff00ff) * i_556_
					   & ~0xff00ff)
					  + ((i_523_ & 0xff00) * i_556_
					     & 0xff0000)) >> 8;
				is[i_524_] = ((((i_523_ & 0xff00ff) * i_541_
						& ~0xff00ff)
					       | ((i_523_ & 0xff00) * i_541_
						  & 0xff0000))
					      >>> 8) + i_542_;
			    }
			    i_524_++;
			    i += i_555_;
			    i_527_ += i_528_;
			} while (--i_539_ > 0);
		    }
		}
	    } while (false);
	}
    }
    
    private static final int a(int i, int i_557_) {
	i_557_ = i_557_ * (i & 0x7f) >> 7;
	if (i_557_ < 2)
	    i_557_ = 2;
	else if (i_557_ > 126)
	    i_557_ = 126;
	return (i & 0xff80) + i_557_;
    }
    
    final void b(int i, int i_558_, int i_559_, int i_560_, int i_561_,
		 int i_562_, int i_563_, int i_564_, int i_565_, int i_566_,
		 int i_567_, int i_568_) {
	if (p) {
	    g.e(1, i, ~0xffffff | i_566_, i_558_, i_560_, i_561_);
	    g.e(1, i_558_, ~0xffffff | i_566_, i_559_, i_561_, i_562_);
	    g.e(1, i_559_, ~0xffffff | i_566_, i, i_562_, i_560_);
	} else {
	    int i_569_ = i_561_ - i_560_;
	    int i_570_ = i_558_ - i;
	    int i_571_ = i_562_ - i_560_;
	    int i_572_ = i_559_ - i;
	    int i_573_ = i_564_ - i_563_;
	    int i_574_ = i_565_ - i_563_;
	    int i_575_ = (i_567_ & 0xff0000) - (i_566_ & 0xff0000) >> 8;
	    int i_576_ = (i_568_ & 0xff0000) - (i_566_ & 0xff0000) >> 8;
	    int i_577_ = (i_567_ & 0xff00) - (i_566_ & 0xff00);
	    int i_578_ = (i_568_ & 0xff00) - (i_566_ & 0xff00);
	    int i_579_ = (i_567_ & 0xff) - (i_566_ & 0xff);
	    int i_580_ = (i_568_ & 0xff) - (i_566_ & 0xff);
	    int i_581_;
	    if (i_559_ != i_558_)
		i_581_ = (i_562_ - i_561_ << 16) / (i_559_ - i_558_);
	    else
		i_581_ = 0;
	    int i_582_;
	    if (i_558_ != i)
		i_582_ = (i_569_ << 16) / i_570_;
	    else
		i_582_ = 0;
	    int i_583_;
	    if (i_559_ != i)
		i_583_ = (i_571_ << 16) / i_572_;
	    else
		i_583_ = 0;
	    int i_584_ = i_569_ * i_572_ - i_571_ * i_570_;
	    if (i_584_ != 0) {
		int i_585_ = (i_573_ * i_572_ - i_574_ * i_570_ << 8) / i_584_;
		int i_586_ = (i_574_ * i_569_ - i_573_ * i_571_ << 8) / i_584_;
		int i_587_ = (i_575_ * i_572_ - i_576_ * i_570_) / i_584_;
		int i_588_ = (i_576_ * i_569_ - i_575_ * i_571_) / i_584_;
		int i_589_ = (i_577_ * i_572_ - i_578_ * i_570_) / i_584_;
		int i_590_ = (i_578_ * i_569_ - i_577_ * i_571_) / i_584_;
		int i_591_ = (i_579_ * i_572_ - i_580_ * i_570_ << 8) / i_584_;
		int i_592_ = (i_580_ * i_569_ - i_579_ * i_571_ << 8) / i_584_;
		if (i <= i_558_ && i <= i_559_) {
		    if (i < ((jea) this).r) {
			if (i_558_ > ((jea) this).r)
			    i_558_ = ((jea) this).r;
			if (i_559_ > ((jea) this).r)
			    i_559_ = ((jea) this).r;
			i_563_ = (i_563_ << 8) - i_585_ * i_560_ + i_585_;
			int i_593_ = (((i_566_ & 0xff0000) >> 8)
				      - i_587_ * i_560_ + i_587_);
			int i_594_
			    = (i_566_ & 0xff00) - i_589_ * i_560_ + i_589_;
			int i_595_ = (((i_566_ & 0xff) << 8) - i_591_ * i_560_
				      + i_591_);
			if (i_558_ < i_559_) {
			    i_562_ = i_560_ <<= 16;
			    if (i < 0) {
				i_562_ -= i_583_ * i;
				i_560_ -= i_582_ * i;
				i_563_ -= i_586_ * i;
				i_593_ -= i_588_ * i;
				i_594_ -= i_590_ * i;
				i_595_ -= i_592_ * i;
				i = 0;
			    }
			    i_561_ <<= 16;
			    if (i_558_ < 0) {
				i_561_ -= i_581_ * i_558_;
				i_558_ = 0;
			    }
			    if (i != i_558_ && i_583_ < i_582_
				|| i == i_558_ && i_583_ > i_581_) {
				i_559_ -= i_558_;
				i_558_ -= i;
				i = ((jea) this).h[i];
				while (--i_558_ >= 0) {
				    a(e, m, i, 0, 0, i_562_ >> 16,
				      i_560_ >> 16, i_563_, i_585_, i_593_,
				      i_587_, i_594_, i_589_, i_595_, i_591_);
				    i_562_ += i_583_;
				    i_560_ += i_582_;
				    i_563_ += i_586_;
				    i_593_ += i_588_;
				    i_594_ += i_590_;
				    i_595_ += i_592_;
				    i += f;
				}
				while (--i_559_ >= 0) {
				    a(e, m, i, 0, 0, i_562_ >> 16,
				      i_561_ >> 16, i_563_, i_585_, i_593_,
				      i_587_, i_594_, i_589_, i_595_, i_591_);
				    i_562_ += i_583_;
				    i_561_ += i_581_;
				    i_563_ += i_586_;
				    i_593_ += i_588_;
				    i_594_ += i_590_;
				    i_595_ += i_592_;
				    i += f;
				}
			    } else {
				i_559_ -= i_558_;
				i_558_ -= i;
				i = ((jea) this).h[i];
				while (--i_558_ >= 0) {
				    a(e, m, i, 0, 0, i_560_ >> 16,
				      i_562_ >> 16, i_563_, i_585_, i_593_,
				      i_587_, i_594_, i_589_, i_595_, i_591_);
				    i_562_ += i_583_;
				    i_560_ += i_582_;
				    i_563_ += i_586_;
				    i_593_ += i_588_;
				    i_594_ += i_590_;
				    i_595_ += i_592_;
				    i += f;
				}
				while (--i_559_ >= 0) {
				    a(e, m, i, 0, 0, i_561_ >> 16,
				      i_562_ >> 16, i_563_, i_585_, i_593_,
				      i_587_, i_594_, i_589_, i_595_, i_591_);
				    i_562_ += i_583_;
				    i_561_ += i_581_;
				    i_563_ += i_586_;
				    i_593_ += i_588_;
				    i_594_ += i_590_;
				    i_595_ += i_592_;
				    i += f;
				}
			    }
			} else {
			    i_561_ = i_560_ <<= 16;
			    if (i < 0) {
				i_561_ -= i_583_ * i;
				i_560_ -= i_582_ * i;
				i_563_ -= i_586_ * i;
				i_593_ -= i_588_ * i;
				i_594_ -= i_590_ * i;
				i_595_ -= i_592_ * i;
				i = 0;
			    }
			    i_562_ <<= 16;
			    if (i_559_ < 0) {
				i_562_ -= i_581_ * i_559_;
				i_559_ = 0;
			    }
			    if (i != i_559_ && i_583_ < i_582_
				|| i == i_559_ && i_581_ > i_582_) {
				i_558_ -= i_559_;
				i_559_ -= i;
				i = ((jea) this).h[i];
				while (--i_559_ >= 0) {
				    a(e, m, i, 0, 0, i_561_ >> 16,
				      i_560_ >> 16, i_563_, i_585_, i_593_,
				      i_587_, i_594_, i_589_, i_595_, i_591_);
				    i_561_ += i_583_;
				    i_560_ += i_582_;
				    i_563_ += i_586_;
				    i_593_ += i_588_;
				    i_594_ += i_590_;
				    i_595_ += i_592_;
				    i += f;
				}
				while (--i_558_ >= 0) {
				    a(e, m, i, 0, 0, i_562_ >> 16,
				      i_560_ >> 16, i_563_, i_585_, i_593_,
				      i_587_, i_594_, i_589_, i_595_, i_591_);
				    i_562_ += i_581_;
				    i_560_ += i_582_;
				    i_563_ += i_586_;
				    i_593_ += i_588_;
				    i_594_ += i_590_;
				    i_595_ += i_592_;
				    i += f;
				}
			    } else {
				i_558_ -= i_559_;
				i_559_ -= i;
				i = ((jea) this).h[i];
				while (--i_559_ >= 0) {
				    a(e, m, i, 0, 0, i_560_ >> 16,
				      i_561_ >> 16, i_563_, i_585_, i_593_,
				      i_587_, i_594_, i_589_, i_595_, i_591_);
				    i_561_ += i_583_;
				    i_560_ += i_582_;
				    i_563_ += i_586_;
				    i_593_ += i_588_;
				    i_594_ += i_590_;
				    i_595_ += i_592_;
				    i += f;
				}
				while (--i_558_ >= 0) {
				    a(e, m, i, 0, 0, i_560_ >> 16,
				      i_562_ >> 16, i_563_, i_585_, i_593_,
				      i_587_, i_594_, i_589_, i_595_, i_591_);
				    i_562_ += i_581_;
				    i_560_ += i_582_;
				    i_563_ += i_586_;
				    i_593_ += i_588_;
				    i_594_ += i_590_;
				    i_595_ += i_592_;
				    i += f;
				}
			    }
			}
		    }
		} else if (i_558_ <= i_559_) {
		    if (i_558_ < ((jea) this).r) {
			if (i_559_ > ((jea) this).r)
			    i_559_ = ((jea) this).r;
			if (i > ((jea) this).r)
			    i = ((jea) this).r;
			i_564_ = (i_564_ << 8) - i_585_ * i_561_ + i_585_;
			int i_596_ = (((i_567_ & 0xff0000) >> 8)
				      - i_587_ * i_561_ + i_587_);
			int i_597_
			    = (i_567_ & 0xff00) - i_589_ * i_561_ + i_589_;
			int i_598_ = (((i_567_ & 0xff) << 8) - i_591_ * i_561_
				      + i_591_);
			if (i_559_ < i) {
			    i_560_ = i_561_ <<= 16;
			    if (i_558_ < 0) {
				i_560_ -= i_582_ * i_558_;
				i_561_ -= i_581_ * i_558_;
				i_564_ -= i_586_ * i_558_;
				i_596_ -= i_588_ * i_558_;
				i_597_ -= i_590_ * i_558_;
				i_598_ -= i_592_ * i_558_;
				i_558_ = 0;
			    }
			    i_562_ <<= 16;
			    if (i_559_ < 0) {
				i_562_ -= i_583_ * i_559_;
				i_559_ = 0;
			    }
			    if (i_558_ != i_559_ && i_582_ < i_581_
				|| i_558_ == i_559_ && i_582_ > i_583_) {
				i -= i_559_;
				i_559_ -= i_558_;
				i_558_ = ((jea) this).h[i_558_];
				while (--i_559_ >= 0) {
				    a(e, m, i_558_, 0, 0, i_560_ >> 16,
				      i_561_ >> 16, i_564_, i_585_, i_596_,
				      i_587_, i_597_, i_589_, i_598_, i_591_);
				    i_560_ += i_582_;
				    i_561_ += i_581_;
				    i_564_ += i_586_;
				    i_596_ += i_588_;
				    i_597_ += i_590_;
				    i_598_ += i_592_;
				    i_558_ += f;
				}
				while (--i >= 0) {
				    a(e, m, i_558_, 0, 0, i_560_ >> 16,
				      i_562_ >> 16, i_564_, i_585_, i_596_,
				      i_587_, i_597_, i_589_, i_598_, i_591_);
				    i_560_ += i_582_;
				    i_562_ += i_583_;
				    i_564_ += i_586_;
				    i_596_ += i_588_;
				    i_597_ += i_590_;
				    i_598_ += i_592_;
				    i_558_ += f;
				}
			    } else {
				i -= i_559_;
				i_559_ -= i_558_;
				i_558_ = ((jea) this).h[i_558_];
				while (--i_559_ >= 0) {
				    a(e, m, i_558_, 0, 0, i_561_ >> 16,
				      i_560_ >> 16, i_564_, i_585_, i_596_,
				      i_587_, i_597_, i_589_, i_598_, i_591_);
				    i_560_ += i_582_;
				    i_561_ += i_581_;
				    i_564_ += i_586_;
				    i_596_ += i_588_;
				    i_597_ += i_590_;
				    i_598_ += i_592_;
				    i_558_ += f;
				}
				while (--i >= 0) {
				    a(e, m, i_558_, 0, 0, i_562_ >> 16,
				      i_560_ >> 16, i_564_, i_585_, i_596_,
				      i_587_, i_597_, i_589_, i_598_, i_591_);
				    i_560_ += i_582_;
				    i_562_ += i_583_;
				    i_564_ += i_586_;
				    i_596_ += i_588_;
				    i_597_ += i_590_;
				    i_598_ += i_592_;
				    i_558_ += f;
				}
			    }
			} else {
			    i_562_ = i_561_ <<= 16;
			    if (i_558_ < 0) {
				i_562_ -= i_582_ * i_558_;
				i_561_ -= i_581_ * i_558_;
				i_564_ -= i_586_ * i_558_;
				i_596_ -= i_588_ * i_558_;
				i_597_ -= i_590_ * i_558_;
				i_598_ -= i_592_ * i_558_;
				i_558_ = 0;
			    }
			    i_560_ <<= 16;
			    if (i < 0) {
				i_560_ -= i_583_ * i;
				i = 0;
			    }
			    if (i_582_ < i_581_) {
				i_559_ -= i;
				i -= i_558_;
				i_558_ = ((jea) this).h[i_558_];
				while (--i >= 0) {
				    a(e, m, i_558_, 0, 0, i_562_ >> 16,
				      i_561_ >> 16, i_564_, i_585_, i_596_,
				      i_587_, i_597_, i_589_, i_598_, i_591_);
				    i_562_ += i_582_;
				    i_561_ += i_581_;
				    i_564_ += i_586_;
				    i_596_ += i_588_;
				    i_597_ += i_590_;
				    i_598_ += i_592_;
				    i_558_ += f;
				}
				while (--i_559_ >= 0) {
				    a(e, m, i_558_, 0, 0, i_560_ >> 16,
				      i_561_ >> 16, i_564_, i_585_, i_596_,
				      i_587_, i_597_, i_589_, i_598_, i_591_);
				    i_560_ += i_583_;
				    i_561_ += i_581_;
				    i_564_ += i_586_;
				    i_596_ += i_588_;
				    i_597_ += i_590_;
				    i_598_ += i_592_;
				    i_558_ += f;
				}
			    } else {
				i_559_ -= i;
				i -= i_558_;
				i_558_ = ((jea) this).h[i_558_];
				while (--i >= 0) {
				    a(e, m, i_558_, 0, 0, i_561_ >> 16,
				      i_562_ >> 16, i_564_, i_585_, i_596_,
				      i_587_, i_597_, i_589_, i_598_, i_591_);
				    i_562_ += i_582_;
				    i_561_ += i_581_;
				    i_564_ += i_586_;
				    i_596_ += i_588_;
				    i_597_ += i_590_;
				    i_598_ += i_592_;
				    i_558_ += f;
				}
				while (--i_559_ >= 0) {
				    a(e, m, i_558_, 0, 0, i_561_ >> 16,
				      i_560_ >> 16, i_564_, i_585_, i_596_,
				      i_587_, i_597_, i_589_, i_598_, i_591_);
				    i_560_ += i_583_;
				    i_561_ += i_581_;
				    i_564_ += i_586_;
				    i_596_ += i_588_;
				    i_597_ += i_590_;
				    i_598_ += i_592_;
				    i_558_ += f;
				}
			    }
			}
		    }
		} else if (i_559_ < ((jea) this).r) {
		    if (i > ((jea) this).r)
			i = ((jea) this).r;
		    if (i_558_ > ((jea) this).r)
			i_558_ = ((jea) this).r;
		    i_565_ = (i_565_ << 8) - i_585_ * i_562_ + i_585_;
		    int i_599_ = (((i_568_ & 0xff0000) >> 8) - i_587_ * i_562_
				  + i_587_);
		    int i_600_ = (i_568_ & 0xff00) - i_589_ * i_562_ + i_589_;
		    int i_601_
			= ((i_568_ & 0xff) << 8) - i_591_ * i_562_ + i_591_;
		    if (i < i_558_) {
			i_561_ = i_562_ <<= 16;
			if (i_559_ < 0) {
			    i_561_ -= i_581_ * i_559_;
			    i_562_ -= i_583_ * i_559_;
			    i_565_ -= i_586_ * i_559_;
			    i_599_ -= i_588_ * i_559_;
			    i_600_ -= i_590_ * i_559_;
			    i_601_ -= i_592_ * i_559_;
			    i_559_ = 0;
			}
			i_560_ <<= 16;
			if (i < 0) {
			    i_560_ -= i_582_ * i;
			    i = 0;
			}
			if (i_581_ < i_583_) {
			    i_558_ -= i;
			    i -= i_559_;
			    i_559_ = ((jea) this).h[i_559_];
			    while (--i >= 0) {
				a(e, m, i_559_, 0, 0, i_561_ >> 16,
				  i_562_ >> 16, i_565_, i_585_, i_599_, i_587_,
				  i_600_, i_589_, i_601_, i_591_);
				i_561_ += i_581_;
				i_562_ += i_583_;
				i_565_ += i_586_;
				i_599_ += i_588_;
				i_600_ += i_590_;
				i_601_ += i_592_;
				i_559_ += f;
			    }
			    while (--i_558_ >= 0) {
				a(e, m, i_559_, 0, 0, i_561_ >> 16,
				  i_560_ >> 16, i_565_, i_585_, i_599_, i_587_,
				  i_600_, i_589_, i_601_, i_591_);
				i_561_ += i_581_;
				i_560_ += i_582_;
				i_565_ += i_586_;
				i_599_ += i_588_;
				i_600_ += i_590_;
				i_601_ += i_592_;
				i_559_ += f;
			    }
			} else {
			    i_558_ -= i;
			    i -= i_559_;
			    i_559_ = ((jea) this).h[i_559_];
			    while (--i >= 0) {
				a(e, m, i_559_, 0, 0, i_562_ >> 16,
				  i_561_ >> 16, i_565_, i_585_, i_599_, i_587_,
				  i_600_, i_589_, i_601_, i_591_);
				i_561_ += i_581_;
				i_562_ += i_583_;
				i_565_ += i_586_;
				i_599_ += i_588_;
				i_600_ += i_590_;
				i_601_ += i_592_;
				i_559_ += f;
			    }
			    while (--i_558_ >= 0) {
				a(e, m, i_559_, 0, 0, i_560_ >> 16,
				  i_561_ >> 16, i_565_, i_585_, i_599_, i_587_,
				  i_600_, i_589_, i_601_, i_591_);
				i_561_ += i_581_;
				i_560_ += i_582_;
				i_565_ += i_586_;
				i_599_ += i_588_;
				i_600_ += i_590_;
				i_601_ += i_592_;
				i_559_ += f;
			    }
			}
		    } else {
			i_560_ = i_562_ <<= 16;
			if (i_559_ < 0) {
			    i_560_ -= i_581_ * i_559_;
			    i_562_ -= i_583_ * i_559_;
			    i_565_ -= i_586_ * i_559_;
			    i_599_ -= i_588_ * i_559_;
			    i_600_ -= i_590_ * i_559_;
			    i_601_ -= i_592_ * i_559_;
			    i_559_ = 0;
			}
			i_561_ <<= 16;
			if (i_558_ < 0) {
			    i_561_ -= i_582_ * i_558_;
			    i_558_ = 0;
			}
			if (i_581_ < i_583_) {
			    i -= i_558_;
			    i_558_ -= i_559_;
			    i_559_ = ((jea) this).h[i_559_];
			    while (--i_558_ >= 0) {
				a(e, m, i_559_, 0, 0, i_560_ >> 16,
				  i_562_ >> 16, i_565_, i_585_, i_599_, i_587_,
				  i_600_, i_589_, i_601_, i_591_);
				i_560_ += i_581_;
				i_562_ += i_583_;
				i_565_ += i_586_;
				i_599_ += i_588_;
				i_600_ += i_590_;
				i_601_ += i_592_;
				i_559_ += f;
			    }
			    while (--i >= 0) {
				a(e, m, i_559_, 0, 0, i_561_ >> 16,
				  i_562_ >> 16, i_565_, i_585_, i_599_, i_587_,
				  i_600_, i_589_, i_601_, i_591_);
				i_561_ += i_582_;
				i_562_ += i_583_;
				i_565_ += i_586_;
				i_599_ += i_588_;
				i_600_ += i_590_;
				i_601_ += i_592_;
				i_559_ += f;
			    }
			} else {
			    i -= i_558_;
			    i_558_ -= i_559_;
			    i_559_ = ((jea) this).h[i_559_];
			    while (--i_558_ >= 0) {
				a(e, m, i_559_, 0, 0, i_562_ >> 16,
				  i_560_ >> 16, i_565_, i_585_, i_599_, i_587_,
				  i_600_, i_589_, i_601_, i_591_);
				i_560_ += i_581_;
				i_562_ += i_583_;
				i_565_ += i_586_;
				i_599_ += i_588_;
				i_600_ += i_590_;
				i_601_ += i_592_;
				i_559_ += f;
			    }
			    while (--i >= 0) {
				a(e, m, i_559_, 0, 0, i_562_ >> 16,
				  i_561_ >> 16, i_565_, i_585_, i_599_, i_587_,
				  i_600_, i_589_, i_601_, i_591_);
				i_561_ += i_582_;
				i_562_ += i_583_;
				i_565_ += i_586_;
				i_599_ += i_588_;
				i_600_ += i_590_;
				i_601_ += i_592_;
				i_559_ += f;
			    }
			}
		    }
		}
	    }
	}
    }
    
    final void a(int i, int i_602_, int i_603_, int i_604_, int i_605_,
		 int i_606_, int i_607_, int i_608_, int i_609_, int i_610_,
		 int i_611_, int i_612_, int i_613_, int i_614_, int i_615_,
		 int i_616_, int i_617_, int i_618_, int i_619_, int i_620_,
		 int i_621_, int i_622_) {
	int[] is = g.l(i_622_);
	if (is == null) {
	    int i_623_ = g.j(i_622_);
	    a(i, i_602_, i_603_, i_604_, i_605_, i_606_, i_607_, i_608_,
	      i_609_, a(i_623_, i_610_), a(i_623_, i_611_), a(i_623_, i_612_));
	} else {
	    a = g.m(i_622_);
	    n = g.i(i_622_);
	    int i_624_ = i_605_ - i_604_;
	    int i_625_ = i_602_ - i;
	    int i_626_ = i_606_ - i_604_;
	    int i_627_ = i_603_ - i;
	    int i_628_ = i_611_ - i_610_;
	    int i_629_ = i_612_ - i_610_;
	    int i_630_ = i_608_ - i_607_;
	    int i_631_ = i_609_ - i_607_;
	    int i_632_ = 0;
	    if (i_602_ != i)
		i_632_ = (i_605_ - i_604_ << 16) / (i_602_ - i);
	    int i_633_ = 0;
	    if (i_603_ != i_602_)
		i_633_ = (i_606_ - i_605_ << 16) / (i_603_ - i_602_);
	    int i_634_ = 0;
	    if (i_603_ != i)
		i_634_ = (i_604_ - i_606_ << 16) / (i - i_603_);
	    int i_635_ = i_624_ * i_627_ - i_626_ * i_625_;
	    if (i_635_ != 0) {
		int i_636_ = (i_628_ * i_627_ - i_629_ * i_625_ << 9) / i_635_;
		int i_637_ = (i_629_ * i_624_ - i_628_ * i_626_ << 9) / i_635_;
		int i_638_ = (i_630_ * i_627_ - i_631_ * i_625_ << 8) / i_635_;
		int i_639_ = (i_631_ * i_624_ - i_630_ * i_626_ << 8) / i_635_;
		float f = 8.0F / (float) ((nga) g).L;
		float f_640_ = (float) ((nga) g).O;
		i_614_ = i_613_ - i_614_;
		i_617_ = i_616_ - i_617_;
		i_620_ = i_619_ - i_620_;
		i_615_ -= i_613_;
		i_618_ -= i_616_;
		i_621_ -= i_619_;
		float f_641_ = (float) (i_615_ * i_616_ - i_618_ * i_613_);
		float f_642_ = (float) (i_618_ * i_619_ - i_621_ * i_616_) * f;
		float f_643_
		    = (float) (i_621_ * i_613_ - i_615_ * i_619_) / f_640_;
		float f_644_ = (float) (i_614_ * i_616_ - i_617_ * i_613_);
		float f_645_ = (float) (i_617_ * i_619_ - i_620_ * i_616_) * f;
		float f_646_
		    = (float) (i_620_ * i_613_ - i_614_ * i_619_) / f_640_;
		float f_647_ = (float) (i_617_ * i_615_ - i_614_ * i_618_);
		float f_648_ = (float) (i_620_ * i_618_ - i_617_ * i_621_) * f;
		float f_649_
		    = (float) (i_614_ * i_621_ - i_620_ * i_615_) / f_640_;
		if (i <= i_602_ && i <= i_603_) {
		    if (i < ((jea) this).r) {
			if (i_602_ > ((jea) this).r)
			    i_602_ = ((jea) this).r;
			if (i_603_ > ((jea) this).r)
			    i_603_ = ((jea) this).r;
			i_610_ = (i_610_ << 9) - i_636_ * i_604_ + i_636_;
			i_607_ = (i_607_ << 8) - i_638_ * i_604_ + i_638_;
			if (i_602_ < i_603_) {
			    i_606_ = i_604_ <<= 16;
			    if (i < 0) {
				i_606_ -= i_634_ * i;
				i_604_ -= i_632_ * i;
				i_610_ -= i_637_ * i;
				i_607_ -= i_639_ * i;
				i = 0;
			    }
			    i_605_ <<= 16;
			    if (i_602_ < 0) {
				i_605_ -= i_633_ * i_602_;
				i_602_ = 0;
			    }
			    int i_650_ = i - ((jea) this).l;
			    f_641_ += f_643_ * (float) i_650_;
			    f_644_ += f_646_ * (float) i_650_;
			    f_647_ += f_649_ * (float) i_650_;
			    if (i != i_602_ && i_634_ < i_632_
				|| i == i_602_ && i_634_ > i_633_) {
				i_603_ -= i_602_;
				i_602_ -= i;
				i = ((jea) this).h[i];
				while (--i_602_ >= 0) {
				    e(e, m, is, 0, 0, i, i_606_ >> 16,
				      i_604_ >> 16, i_607_, i_638_, i_610_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_606_ += i_634_;
				    i_604_ += i_632_;
				    i_610_ += i_637_;
				    i_607_ += i_639_;
				    i += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
				while (--i_603_ >= 0) {
				    e(e, m, is, 0, 0, i, i_606_ >> 16,
				      i_605_ >> 16, i_607_, i_638_, i_610_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_606_ += i_634_;
				    i_605_ += i_633_;
				    i_610_ += i_637_;
				    i_607_ += i_639_;
				    i += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
			    } else {
				i_603_ -= i_602_;
				i_602_ -= i;
				i = ((jea) this).h[i];
				while (--i_602_ >= 0) {
				    e(e, m, is, 0, 0, i, i_604_ >> 16,
				      i_606_ >> 16, i_607_, i_638_, i_610_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_606_ += i_634_;
				    i_604_ += i_632_;
				    i_610_ += i_637_;
				    i_607_ += i_639_;
				    i += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
				while (--i_603_ >= 0) {
				    e(e, m, is, 0, 0, i, i_605_ >> 16,
				      i_606_ >> 16, i_607_, i_638_, i_610_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_606_ += i_634_;
				    i_605_ += i_633_;
				    i_610_ += i_637_;
				    i_607_ += i_639_;
				    i += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
			    }
			} else {
			    i_605_ = i_604_ <<= 16;
			    if (i < 0) {
				i_605_ -= i_634_ * i;
				i_604_ -= i_632_ * i;
				i_610_ -= i_637_ * i;
				i_607_ -= i_639_ * i;
				i = 0;
			    }
			    i_606_ <<= 16;
			    if (i_603_ < 0) {
				i_606_ -= i_633_ * i_603_;
				i_603_ = 0;
			    }
			    int i_651_ = i - ((jea) this).l;
			    f_641_ += f_643_ * (float) i_651_;
			    f_644_ += f_646_ * (float) i_651_;
			    f_647_ += f_649_ * (float) i_651_;
			    if (i != i_603_ && i_634_ < i_632_
				|| i == i_603_ && i_633_ > i_632_) {
				i_602_ -= i_603_;
				i_603_ -= i;
				i = ((jea) this).h[i];
				while (--i_603_ >= 0) {
				    e(e, m, is, 0, 0, i, i_605_ >> 16,
				      i_604_ >> 16, i_607_, i_638_, i_610_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_605_ += i_634_;
				    i_604_ += i_632_;
				    i_610_ += i_637_;
				    i_607_ += i_639_;
				    i += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
				while (--i_602_ >= 0) {
				    e(e, m, is, 0, 0, i, i_606_ >> 16,
				      i_604_ >> 16, i_607_, i_638_, i_610_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_606_ += i_633_;
				    i_604_ += i_632_;
				    i_610_ += i_637_;
				    i_607_ += i_639_;
				    i += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
			    } else {
				i_602_ -= i_603_;
				i_603_ -= i;
				i = ((jea) this).h[i];
				while (--i_603_ >= 0) {
				    e(e, m, is, 0, 0, i, i_604_ >> 16,
				      i_605_ >> 16, i_607_, i_638_, i_610_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_605_ += i_634_;
				    i_604_ += i_632_;
				    i_610_ += i_637_;
				    i_607_ += i_639_;
				    i += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
				while (--i_602_ >= 0) {
				    e(e, m, is, 0, 0, i, i_604_ >> 16,
				      i_606_ >> 16, i_607_, i_638_, i_610_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_606_ += i_633_;
				    i_604_ += i_632_;
				    i_610_ += i_637_;
				    i_607_ += i_639_;
				    i += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
			    }
			}
		    }
		} else if (i_602_ <= i_603_) {
		    if (i_602_ < ((jea) this).r) {
			if (i_603_ > ((jea) this).r)
			    i_603_ = ((jea) this).r;
			if (i > ((jea) this).r)
			    i = ((jea) this).r;
			i_611_ = (i_611_ << 9) - i_636_ * i_605_ + i_636_;
			i_608_ = (i_608_ << 8) - i_638_ * i_605_ + i_638_;
			if (i_603_ < i) {
			    i_604_ = i_605_ <<= 16;
			    if (i_602_ < 0) {
				i_604_ -= i_632_ * i_602_;
				i_605_ -= i_633_ * i_602_;
				i_611_ -= i_637_ * i_602_;
				i_608_ -= i_639_ * i_602_;
				i_602_ = 0;
			    }
			    i_606_ <<= 16;
			    if (i_603_ < 0) {
				i_606_ -= i_634_ * i_603_;
				i_603_ = 0;
			    }
			    int i_652_ = i_602_ - ((jea) this).l;
			    f_641_ += f_643_ * (float) i_652_;
			    f_644_ += f_646_ * (float) i_652_;
			    f_647_ += f_649_ * (float) i_652_;
			    if (i_602_ != i_603_ && i_632_ < i_633_
				|| i_602_ == i_603_ && i_632_ > i_634_) {
				i -= i_603_;
				i_603_ -= i_602_;
				i_602_ = ((jea) this).h[i_602_];
				while (--i_603_ >= 0) {
				    e(e, m, is, 0, 0, i_602_, i_604_ >> 16,
				      i_605_ >> 16, i_608_, i_638_, i_611_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_604_ += i_632_;
				    i_605_ += i_633_;
				    i_611_ += i_637_;
				    i_608_ += i_639_;
				    i_602_ += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
				while (--i >= 0) {
				    e(e, m, is, 0, 0, i_602_, i_604_ >> 16,
				      i_606_ >> 16, i_608_, i_638_, i_611_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_604_ += i_632_;
				    i_606_ += i_634_;
				    i_611_ += i_637_;
				    i_608_ += i_639_;
				    i_602_ += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
			    } else {
				i -= i_603_;
				i_603_ -= i_602_;
				i_602_ = ((jea) this).h[i_602_];
				while (--i_603_ >= 0) {
				    e(e, m, is, 0, 0, i_602_, i_605_ >> 16,
				      i_604_ >> 16, i_608_, i_638_, i_611_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_604_ += i_632_;
				    i_605_ += i_633_;
				    i_611_ += i_637_;
				    i_608_ += i_639_;
				    i_602_ += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
				while (--i >= 0) {
				    e(e, m, is, 0, 0, i_602_, i_606_ >> 16,
				      i_604_ >> 16, i_608_, i_638_, i_611_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_604_ += i_632_;
				    i_606_ += i_634_;
				    i_611_ += i_637_;
				    i_608_ += i_639_;
				    i_602_ += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
			    }
			} else {
			    i_606_ = i_605_ <<= 16;
			    if (i_602_ < 0) {
				i_606_ -= i_632_ * i_602_;
				i_605_ -= i_633_ * i_602_;
				i_611_ -= i_637_ * i_602_;
				i_608_ -= i_639_ * i_602_;
				i_602_ = 0;
			    }
			    i_604_ <<= 16;
			    if (i < 0) {
				i_604_ -= i_634_ * i;
				i = 0;
			    }
			    int i_653_ = i_602_ - ((jea) this).l;
			    f_641_ += f_643_ * (float) i_653_;
			    f_644_ += f_646_ * (float) i_653_;
			    f_647_ += f_649_ * (float) i_653_;
			    if (i_632_ < i_633_) {
				i_603_ -= i;
				i -= i_602_;
				i_602_ = ((jea) this).h[i_602_];
				while (--i >= 0) {
				    e(e, m, is, 0, 0, i_602_, i_606_ >> 16,
				      i_605_ >> 16, i_608_, i_638_, i_611_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_606_ += i_632_;
				    i_605_ += i_633_;
				    i_611_ += i_637_;
				    i_608_ += i_639_;
				    i_602_ += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
				while (--i_603_ >= 0) {
				    e(e, m, is, 0, 0, i_602_, i_604_ >> 16,
				      i_605_ >> 16, i_608_, i_638_, i_611_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_604_ += i_634_;
				    i_605_ += i_633_;
				    i_611_ += i_637_;
				    i_608_ += i_639_;
				    i_602_ += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
			    } else {
				i_603_ -= i;
				i -= i_602_;
				i_602_ = ((jea) this).h[i_602_];
				while (--i >= 0) {
				    e(e, m, is, 0, 0, i_602_, i_605_ >> 16,
				      i_606_ >> 16, i_608_, i_638_, i_611_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_606_ += i_632_;
				    i_605_ += i_633_;
				    i_611_ += i_637_;
				    i_608_ += i_639_;
				    i_602_ += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
				while (--i_603_ >= 0) {
				    e(e, m, is, 0, 0, i_602_, i_605_ >> 16,
				      i_604_ >> 16, i_608_, i_638_, i_611_,
				      i_636_, f_641_, f_644_, f_647_, f_642_,
				      f_645_, f_648_);
				    i_604_ += i_634_;
				    i_605_ += i_633_;
				    i_611_ += i_637_;
				    i_608_ += i_639_;
				    i_602_ += this.f;
				    f_641_ += f_643_;
				    f_644_ += f_646_;
				    f_647_ += f_649_;
				}
			    }
			}
		    }
		} else if (i_603_ < ((jea) this).r) {
		    if (i > ((jea) this).r)
			i = ((jea) this).r;
		    if (i_602_ > ((jea) this).r)
			i_602_ = ((jea) this).r;
		    i_612_ = (i_612_ << 9) - i_636_ * i_606_ + i_636_;
		    i_609_ = (i_609_ << 8) - i_638_ * i_606_ + i_638_;
		    if (i < i_602_) {
			i_605_ = i_606_ <<= 16;
			if (i_603_ < 0) {
			    i_605_ -= i_633_ * i_603_;
			    i_606_ -= i_634_ * i_603_;
			    i_612_ -= i_637_ * i_603_;
			    i_609_ -= i_639_ * i_603_;
			    i_603_ = 0;
			}
			i_604_ <<= 16;
			if (i < 0) {
			    i_604_ -= i_632_ * i;
			    i = 0;
			}
			int i_654_ = i_603_ - ((jea) this).l;
			f_641_ += f_643_ * (float) i_654_;
			f_644_ += f_646_ * (float) i_654_;
			f_647_ += f_649_ * (float) i_654_;
			if (i_633_ < i_634_) {
			    i_602_ -= i;
			    i -= i_603_;
			    i_603_ = ((jea) this).h[i_603_];
			    while (--i >= 0) {
				e(e, m, is, 0, 0, i_603_, i_605_ >> 16,
				  i_606_ >> 16, i_609_, i_638_, i_612_, i_636_,
				  f_641_, f_644_, f_647_, f_642_, f_645_,
				  f_648_);
				i_605_ += i_633_;
				i_606_ += i_634_;
				i_612_ += i_637_;
				i_609_ += i_639_;
				i_603_ += this.f;
				f_641_ += f_643_;
				f_644_ += f_646_;
				f_647_ += f_649_;
			    }
			    while (--i_602_ >= 0) {
				e(e, m, is, 0, 0, i_603_, i_605_ >> 16,
				  i_604_ >> 16, i_609_, i_638_, i_612_, i_636_,
				  f_641_, f_644_, f_647_, f_642_, f_645_,
				  f_648_);
				i_605_ += i_633_;
				i_604_ += i_632_;
				i_612_ += i_637_;
				i_609_ += i_639_;
				i_603_ += this.f;
				f_641_ += f_643_;
				f_644_ += f_646_;
				f_647_ += f_649_;
			    }
			} else {
			    i_602_ -= i;
			    i -= i_603_;
			    i_603_ = ((jea) this).h[i_603_];
			    while (--i >= 0) {
				e(e, m, is, 0, 0, i_603_, i_606_ >> 16,
				  i_605_ >> 16, i_609_, i_638_, i_612_, i_636_,
				  f_641_, f_644_, f_647_, f_642_, f_645_,
				  f_648_);
				i_605_ += i_633_;
				i_606_ += i_634_;
				i_612_ += i_637_;
				i_609_ += i_639_;
				i_603_ += this.f;
				f_641_ += f_643_;
				f_644_ += f_646_;
				f_647_ += f_649_;
			    }
			    while (--i_602_ >= 0) {
				e(e, m, is, 0, 0, i_603_, i_604_ >> 16,
				  i_605_ >> 16, i_609_, i_638_, i_612_, i_636_,
				  f_641_, f_644_, f_647_, f_642_, f_645_,
				  f_648_);
				i_605_ += i_633_;
				i_604_ += i_632_;
				i_612_ += i_637_;
				i_609_ += i_639_;
				i_603_ += this.f;
				f_641_ += f_643_;
				f_644_ += f_646_;
				f_647_ += f_649_;
			    }
			}
		    } else {
			i_604_ = i_606_ <<= 16;
			if (i_603_ < 0) {
			    i_604_ -= i_633_ * i_603_;
			    i_606_ -= i_634_ * i_603_;
			    i_612_ -= i_637_ * i_603_;
			    i_609_ -= i_639_ * i_603_;
			    i_603_ = 0;
			}
			i_605_ <<= 16;
			if (i_602_ < 0) {
			    i_605_ -= i_632_ * i_602_;
			    i_602_ = 0;
			}
			int i_655_ = i_603_ - ((jea) this).l;
			f_641_ += f_643_ * (float) i_655_;
			f_644_ += f_646_ * (float) i_655_;
			f_647_ += f_649_ * (float) i_655_;
			if (i_633_ < i_634_) {
			    i -= i_602_;
			    i_602_ -= i_603_;
			    i_603_ = ((jea) this).h[i_603_];
			    while (--i_602_ >= 0) {
				e(e, m, is, 0, 0, i_603_, i_604_ >> 16,
				  i_606_ >> 16, i_609_, i_638_, i_612_, i_636_,
				  f_641_, f_644_, f_647_, f_642_, f_645_,
				  f_648_);
				i_604_ += i_633_;
				i_606_ += i_634_;
				i_612_ += i_637_;
				i_609_ += i_639_;
				i_603_ += this.f;
				f_641_ += f_643_;
				f_644_ += f_646_;
				f_647_ += f_649_;
			    }
			    while (--i >= 0) {
				e(e, m, is, 0, 0, i_603_, i_605_ >> 16,
				  i_606_ >> 16, i_609_, i_638_, i_612_, i_636_,
				  f_641_, f_644_, f_647_, f_642_, f_645_,
				  f_648_);
				i_605_ += i_632_;
				i_606_ += i_634_;
				i_612_ += i_637_;
				i_609_ += i_639_;
				i_603_ += this.f;
				f_641_ += f_643_;
				f_644_ += f_646_;
				f_647_ += f_649_;
			    }
			} else {
			    i -= i_602_;
			    i_602_ -= i_603_;
			    i_603_ = ((jea) this).h[i_603_];
			    while (--i_602_ >= 0) {
				e(e, m, is, 0, 0, i_603_, i_606_ >> 16,
				  i_604_ >> 16, i_609_, i_638_, i_612_, i_636_,
				  f_641_, f_644_, f_647_, f_642_, f_645_,
				  f_648_);
				i_604_ += i_633_;
				i_606_ += i_634_;
				i_612_ += i_637_;
				i_609_ += i_639_;
				i_603_ += this.f;
				f_641_ += f_643_;
				f_644_ += f_646_;
				f_647_ += f_649_;
			    }
			    while (--i >= 0) {
				e(e, m, is, 0, 0, i_603_, i_606_ >> 16,
				  i_605_ >> 16, i_609_, i_638_, i_612_, i_636_,
				  f_641_, f_644_, f_647_, f_642_, f_645_,
				  f_648_);
				i_605_ += i_632_;
				i_606_ += i_634_;
				i_612_ += i_637_;
				i_609_ += i_639_;
				i_603_ += this.f;
				f_641_ += f_643_;
				f_644_ += f_646_;
				f_647_ += f_649_;
			    }
			}
		    }
		}
	    }
	}
    }
    
    private final void b(int[] is, int[] is_656_, int[] is_657_, int i,
			 int i_658_, int i_659_, int i_660_, int i_661_,
			 int i_662_, int i_663_, int i_664_, int i_665_,
			 float f, float f_666_, float f_667_, float f_668_,
			 float f_669_, float f_670_) {
	int i_671_ = i_661_ - i_660_;
	int i_672_ = ((jea) this).q;
	int i_673_ = 256 - ((jea) this).q;
	do {
	    if (a) {
		int i_674_ = i_660_ - ((jea) this).i;
		f += f_668_ / 8.0F * (float) i_674_;
		f_666_ += f_669_ / 8.0F * (float) i_674_;
		f_667_ += f_670_ / 8.0F * (float) i_674_;
		int i_675_;
		int i_676_;
		if (f_667_ != 0.0F) {
		    i_675_ = (int) (f * 4096.0F / f_667_);
		    i_676_ = (int) (f_666_ * 4096.0F / f_667_);
		} else {
		    i_675_ = 0;
		    i_676_ = 0;
		}
		f += f_668_;
		f_666_ += f_669_;
		f_667_ += f_670_;
		int i_677_;
		int i_678_;
		if (f_667_ != 0.0F) {
		    i_677_ = (int) (f * 4096.0F / f_667_);
		    i_678_ = (int) (f_666_ * 4096.0F / f_667_);
		} else {
		    i_677_ = 0;
		    i_678_ = 0;
		}
		i = (i_675_ << 20) + i_676_;
		int i_679_
		    = (i_677_ - i_675_ >> 3 << 20) + (i_678_ - i_676_ >> 3);
		i_671_ >>= 3;
		i_665_ <<= 3;
		int i_680_ = i_664_ >> 8;
		if (n) {
		    if (i_671_ > 0) {
			do {
			    if (i_662_ < is_656_[i_659_]) {
				int i_681_ = is[i_659_];
				i_658_ = is_657_[(i & 0xfc0) + (i >>> 26)];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_681_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_681_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i += i_679_;
			    i_659_++;
			    if (i_662_ < is_656_[i_659_]) {
				int i_682_ = is[i_659_];
				i_658_ = is_657_[(i & 0xfc0) + (i >>> 26)];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_682_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_682_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i += i_679_;
			    i_659_++;
			    if (i_662_ < is_656_[i_659_]) {
				int i_683_ = is[i_659_];
				i_658_ = is_657_[(i & 0xfc0) + (i >>> 26)];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_683_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_683_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i += i_679_;
			    i_659_++;
			    if (i_662_ < is_656_[i_659_]) {
				int i_684_ = is[i_659_];
				i_658_ = is_657_[(i & 0xfc0) + (i >>> 26)];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_684_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_684_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i += i_679_;
			    i_659_++;
			    if (i_662_ < is_656_[i_659_]) {
				int i_685_ = is[i_659_];
				i_658_ = is_657_[(i & 0xfc0) + (i >>> 26)];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_685_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_685_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i += i_679_;
			    i_659_++;
			    if (i_662_ < is_656_[i_659_]) {
				int i_686_ = is[i_659_];
				i_658_ = is_657_[(i & 0xfc0) + (i >>> 26)];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_686_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_686_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i += i_679_;
			    i_659_++;
			    if (i_662_ < is_656_[i_659_]) {
				int i_687_ = is[i_659_];
				i_658_ = is_657_[(i & 0xfc0) + (i >>> 26)];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_687_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_687_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i += i_679_;
			    i_659_++;
			    if (i_662_ < is_656_[i_659_]) {
				int i_688_ = is[i_659_];
				i_658_ = is_657_[(i & 0xfc0) + (i >>> 26)];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_688_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_688_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i += i_679_;
			    i_659_++;
			    i_675_ = i_677_;
			    i_676_ = i_678_;
			    f += f_668_;
			    f_666_ += f_669_;
			    f_667_ += f_670_;
			    if (f_667_ != 0.0F) {
				i_677_ = (int) (f * 4096.0F / f_667_);
				i_678_ = (int) (f_666_ * 4096.0F / f_667_);
			    } else {
				i_677_ = 0;
				i_678_ = 0;
			    }
			    i = (i_675_ << 20) + i_676_;
			    i_679_ = ((i_677_ - i_675_ >> 3 << 20)
				      + (i_678_ - i_676_ >> 3));
			    i_664_ += i_665_;
			    i_680_ = i_664_ >> 8;
			} while (--i_671_ > 0);
		    }
		    i_671_ = i_661_ - i_660_ & 0x7;
		    if (i_671_ > 0) {
			do {
			    if (i_662_ < is_656_[i_659_]) {
				int i_689_ = is[i_659_];
				i_658_ = is_657_[(i & 0xfc0) + (i >>> 26)];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_689_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_689_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i += i_679_;
			    i_659_++;
			} while (--i_671_ > 0);
		    }
		} else {
		    if (i_671_ > 0) {
			do {
			    if (i_662_ < is_656_[i_659_]
				&& ((i_658_
				     = is_657_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_690_ = is[i_659_];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_690_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_690_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i_659_++;
			    i += i_679_;
			    if (i_662_ < is_656_[i_659_]
				&& ((i_658_
				     = is_657_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_691_ = is[i_659_];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_691_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_691_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i_659_++;
			    i += i_679_;
			    if (i_662_ < is_656_[i_659_]
				&& ((i_658_
				     = is_657_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_692_ = is[i_659_];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_692_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_692_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i_659_++;
			    i += i_679_;
			    if (i_662_ < is_656_[i_659_]
				&& ((i_658_
				     = is_657_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_693_ = is[i_659_];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_693_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_693_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i_659_++;
			    i += i_679_;
			    if (i_662_ < is_656_[i_659_]
				&& ((i_658_
				     = is_657_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_694_ = is[i_659_];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_694_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_694_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i_659_++;
			    i += i_679_;
			    if (i_662_ < is_656_[i_659_]
				&& ((i_658_
				     = is_657_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_695_ = is[i_659_];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_695_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_695_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i_659_++;
			    i += i_679_;
			    if (i_662_ < is_656_[i_659_]
				&& ((i_658_
				     = is_657_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_696_ = is[i_659_];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_696_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_696_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i_659_++;
			    i += i_679_;
			    if (i_662_ < is_656_[i_659_]
				&& ((i_658_
				     = is_657_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				int i_697_ = is[i_659_];
				i_658_ = (((i_658_ & 0xff00ff) * i_680_
					   & ~0xff00ff)
					  + ((i_658_ & 0xff00) * i_680_
					     & 0xff0000)) >> 8;
				is[i_659_] = ((((i_697_ & 0xff00ff) * i_672_
						+ (i_658_ & 0xff00ff) * i_673_)
					       & ~0xff00ff)
					      + (((i_697_ & 0xff00) * i_672_
						  + (i_658_ & 0xff00) * i_673_)
						 & 0xff0000)) >> 8;
				is_656_[i_659_] = i_662_;
			    }
			    i_662_ += i_663_;
			    i_659_++;
			    i += i_679_;
			    i_675_ = i_677_;
			    i_676_ = i_678_;
			    f += f_668_;
			    f_666_ += f_669_;
			    f_667_ += f_670_;
			    if (f_667_ != 0.0F) {
				i_677_ = (int) (f * 4096.0F / f_667_);
				i_678_ = (int) (f_666_ * 4096.0F / f_667_);
			    } else {
				i_677_ = 0;
				i_678_ = 0;
			    }
			    i = (i_675_ << 20) + i_676_;
			    i_679_ = ((i_677_ - i_675_ >> 3 << 20)
				      + (i_678_ - i_676_ >> 3));
			    i_664_ += i_665_;
			    i_680_ = i_664_ >> 8;
			} while (--i_671_ > 0);
		    }
		    i_671_ = i_661_ - i_660_ & 0x7;
		    if (i_671_ <= 0)
			break;
		    do {
			if (i_662_ < is_656_[i_659_]
			    && ((i_658_ = is_657_[(i & 0xfc0) + (i >>> 26)])
				!= 0)) {
			    int i_698_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_680_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_680_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_698_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_698_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_679_;
		    } while (--i_671_ > 0);
		}
		break;
	    }
	    int i_699_ = i_660_ - ((jea) this).i;
	    f += f_668_ / 8.0F * (float) i_699_;
	    f_666_ += f_669_ / 8.0F * (float) i_699_;
	    f_667_ += f_670_ / 8.0F * (float) i_699_;
	    int i_700_;
	    int i_701_;
	    if (f_667_ != 0.0F) {
		i_700_ = (int) (f * 16384.0F / f_667_);
		i_701_ = (int) (f_666_ * 16384.0F / f_667_);
	    } else {
		i_700_ = 0;
		i_701_ = 0;
	    }
	    f += f_668_;
	    f_666_ += f_669_;
	    f_667_ += f_670_;
	    int i_702_;
	    int i_703_;
	    if (f_667_ != 0.0F) {
		i_702_ = (int) (f * 16384.0F / f_667_);
		i_703_ = (int) (f_666_ * 16384.0F / f_667_);
	    } else {
		i_702_ = 0;
		i_703_ = 0;
	    }
	    i = (i_700_ << 18) + i_701_;
	    int i_704_ = (i_702_ - i_700_ >> 3 << 18) + (i_703_ - i_701_ >> 3);
	    i_671_ >>= 3;
	    i_665_ <<= 3;
	    int i_705_ = i_664_ >> 8;
	    if (n) {
		if (i_671_ > 0) {
		    do {
			if (i_662_ < is_656_[i_659_]) {
			    i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)];
			    int i_706_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_706_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_706_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			if (i_662_ < is_656_[i_659_]) {
			    i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)];
			    int i_707_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_707_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_707_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			if (i_662_ < is_656_[i_659_]) {
			    i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)];
			    int i_708_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_708_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_708_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			if (i_662_ < is_656_[i_659_]) {
			    i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)];
			    int i_709_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_709_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_709_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			if (i_662_ < is_656_[i_659_]) {
			    i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)];
			    int i_710_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_710_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_710_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			if (i_662_ < is_656_[i_659_]) {
			    i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)];
			    int i_711_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_711_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_711_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			if (i_662_ < is_656_[i_659_]) {
			    i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)];
			    int i_712_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_712_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_712_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			if (i_662_ < is_656_[i_659_]) {
			    i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)];
			    int i_713_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_713_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_713_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			i_700_ = i_702_;
			i_701_ = i_703_;
			f += f_668_;
			f_666_ += f_669_;
			f_667_ += f_670_;
			if (f_667_ != 0.0F) {
			    i_702_ = (int) (f * 16384.0F / f_667_);
			    i_703_ = (int) (f_666_ * 16384.0F / f_667_);
			} else {
			    i_702_ = 0;
			    i_703_ = 0;
			}
			i = (i_700_ << 18) + i_701_;
			i_704_
			    = (i_702_ - i_700_ >> 3 << 18) + (i_703_ - i_701_
							      >> 3);
			i_664_ += i_665_;
			i_705_ = i_664_ >> 8;
		    } while (--i_671_ > 0);
		}
		i_671_ = i_661_ - i_660_ & 0x7;
		if (i_671_ > 0) {
		    do {
			if (i_662_ < is_656_[i_659_]) {
			    i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)];
			    int i_714_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_714_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_714_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
		    } while (--i_671_ > 0);
		    break;
		}
	    } else {
		if (i_671_ > 0) {
		    do {
			if (i_662_ < is_656_[i_659_]
			    && ((i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_715_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_715_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_715_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			if (i_662_ < is_656_[i_659_]
			    && ((i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_716_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_716_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_716_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			if (i_662_ < is_656_[i_659_]
			    && ((i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_717_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_717_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_717_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			if (i_662_ < is_656_[i_659_]
			    && ((i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_718_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_718_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_718_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			if (i_662_ < is_656_[i_659_]
			    && ((i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_719_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_719_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_719_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			if (i_662_ < is_656_[i_659_]
			    && ((i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_720_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_720_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_720_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			if (i_662_ < is_656_[i_659_]
			    && ((i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_721_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_721_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_721_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			if (i_662_ < is_656_[i_659_]
			    && ((i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_722_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_722_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_722_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
			i_700_ = i_702_;
			i_701_ = i_703_;
			f += f_668_;
			f_666_ += f_669_;
			f_667_ += f_670_;
			if (f_667_ != 0.0F) {
			    i_702_ = (int) (f * 16384.0F / f_667_);
			    i_703_ = (int) (f_666_ * 16384.0F / f_667_);
			} else {
			    i_702_ = 0;
			    i_703_ = 0;
			}
			i = (i_700_ << 18) + i_701_;
			i_704_
			    = (i_702_ - i_700_ >> 3 << 18) + (i_703_ - i_701_
							      >> 3);
			i_664_ += i_665_;
			i_705_ = i_664_ >> 8;
		    } while (--i_671_ > 0);
		}
		i_671_ = i_661_ - i_660_ & 0x7;
		if (i_671_ > 0) {
		    do {
			if (i_662_ < is_656_[i_659_]
			    && ((i_658_ = is_657_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    int i_723_ = is[i_659_];
			    i_658_
				= ((((i_658_ & 0xff00ff) * i_705_ & ~0xff00ff)
				    + ((i_658_ & 0xff00) * i_705_ & 0xff0000))
				   >> 8);
			    is[i_659_] = ((((i_723_ & 0xff00ff) * i_672_
					    + (i_658_ & 0xff00ff) * i_673_)
					   & ~0xff00ff)
					  + (((i_723_ & 0xff00) * i_672_
					      + (i_658_ & 0xff00) * i_673_)
					     & 0xff0000)) >> 8;
			    is_656_[i_659_] = i_662_;
			}
			i_662_ += i_663_;
			i_659_++;
			i += i_704_;
		    } while (--i_671_ > 0);
		}
	    }
	} while (false);
    }
    
    private final void a(int[] is, int[] is_724_, int i, int i_725_,
			 int i_726_, int i_727_, int i_728_, int i_729_,
			 int i_730_, int i_731_, int i_732_) {
	if (((jea) this).o) {
	    if (i_728_ > ((jea) this).b)
		i_728_ = ((jea) this).b;
	    if (i_727_ < 0)
		i_727_ = 0;
	}
	if (i_727_ < i_728_) {
	    i += i_727_ - 1;
	    i_729_ += i_730_ * i_727_;
	    i_731_ += i_732_ * i_727_;
	    if (((lfa) d).i) {
		do {
		    if (((jea) this).c) {
			i_726_ = i_728_ - i_727_ >> 2;
			i_730_ <<= 2;
			if (((jea) this).q == 0) {
			    if (i_726_ > 0) {
				do {
				    i_725_ = vq.m[i_729_ >> 8];
				    i_729_ += i_730_;
				    if (i_731_ < is_724_[++i]) {
					is[i] = i_725_;
					is_724_[i] = i_731_;
				    }
				    i_731_ += i_732_;
				    if (i_731_ < is_724_[++i]) {
					is[i] = i_725_;
					is_724_[i] = i_731_;
				    }
				    i_731_ += i_732_;
				    if (i_731_ < is_724_[++i]) {
					is[i] = i_725_;
					is_724_[i] = i_731_;
				    }
				    i_731_ += i_732_;
				    if (i_731_ < is_724_[++i]) {
					is[i] = i_725_;
					is_724_[i] = i_731_;
				    }
				    i_731_ += i_732_;
				} while (--i_726_ > 0);
			    }
			    i_726_ = i_728_ - i_727_ & 0x3;
			    if (i_726_ > 0) {
				i_725_ = vq.m[i_729_ >> 8];
				do {
				    if (i_731_ < is_724_[++i]) {
					is[i] = i_725_;
					is_724_[i] = i_731_;
				    }
				    i_731_ += i_732_;
				} while (--i_726_ > 0);
			    }
			} else {
			    int i_733_ = ((jea) this).q;
			    int i_734_ = 256 - ((jea) this).q;
			    if (i_726_ > 0) {
				do {
				    i_725_ = vq.m[i_729_ >> 8];
				    i_729_ += i_730_;
				    i_725_
					= (((i_725_ & 0xff00ff) * i_734_ >> 8
					    & 0xff00ff)
					   + ((i_725_ & 0xff00) * i_734_ >> 8
					      & 0xff00));
				    if (i_731_ < is_724_[++i]) {
					int i_735_ = is[i];
					is[i]
					    = (i_725_
					       + (((i_735_ & 0xff00ff) * i_733_
						   >> 8)
						  & 0xff00ff)
					       + (((i_735_ & 0xff00) * i_733_
						   >> 8)
						  & 0xff00));
					is_724_[i] = i_731_;
				    }
				    i_731_ += i_732_;
				    if (i_731_ < is_724_[++i]) {
					int i_736_ = is[i];
					is[i]
					    = (i_725_
					       + (((i_736_ & 0xff00ff) * i_733_
						   >> 8)
						  & 0xff00ff)
					       + (((i_736_ & 0xff00) * i_733_
						   >> 8)
						  & 0xff00));
					is_724_[i] = i_731_;
				    }
				    i_731_ += i_732_;
				    if (i_731_ < is_724_[++i]) {
					int i_737_ = is[i];
					is[i]
					    = (i_725_
					       + (((i_737_ & 0xff00ff) * i_733_
						   >> 8)
						  & 0xff00ff)
					       + (((i_737_ & 0xff00) * i_733_
						   >> 8)
						  & 0xff00));
					is_724_[i] = i_731_;
				    }
				    i_731_ += i_732_;
				    if (i_731_ < is_724_[++i]) {
					int i_738_ = is[i];
					is[i]
					    = (i_725_
					       + (((i_738_ & 0xff00ff) * i_733_
						   >> 8)
						  & 0xff00ff)
					       + (((i_738_ & 0xff00) * i_733_
						   >> 8)
						  & 0xff00));
					is_724_[i] = i_731_;
				    }
				    i_731_ += i_732_;
				} while (--i_726_ > 0);
			    }
			    i_726_ = i_728_ - i_727_ & 0x3;
			    if (i_726_ <= 0)
				break;
			    i_725_ = vq.m[i_729_ >> 8];
			    i_725_ = (((i_725_ & 0xff00ff) * i_734_ >> 8
				       & 0xff00ff)
				      + ((i_725_ & 0xff00) * i_734_ >> 8
					 & 0xff00));
			    do {
				if (i_731_ < is_724_[++i]) {
				    int i_739_ = is[i];
				    is[i]
					= (i_725_
					   + ((i_739_ & 0xff00ff) * i_733_ >> 8
					      & 0xff00ff)
					   + ((i_739_ & 0xff00) * i_733_ >> 8
					      & 0xff00));
				    is_724_[i] = i_731_;
				}
				i_731_ += i_732_;
			    } while (--i_726_ > 0);
			}
			break;
		    }
		    i_726_ = i_728_ - i_727_;
		    if (((jea) this).q == 0) {
			do {
			    if (i_731_ < is_724_[++i]) {
				is[i] = vq.m[i_729_ >> 8];
				is_724_[i] = i_731_;
			    }
			    i_731_ += i_732_;
			    i_729_ += i_730_;
			} while (--i_726_ > 0);
			break;
		    }
		    int i_740_ = ((jea) this).q;
		    int i_741_ = 256 - ((jea) this).q;
		    do {
			if (i_731_ < is_724_[++i]) {
			    i_725_ = vq.m[i_729_ >> 8];
			    i_725_ = (((i_725_ & 0xff00ff) * i_741_ >> 8
				       & 0xff00ff)
				      + ((i_725_ & 0xff00) * i_741_ >> 8
					 & 0xff00));
			    int i_742_ = is[i];
			    is[i] = (i_725_
				     + ((i_742_ & 0xff00ff) * i_740_ >> 8
					& 0xff00ff)
				     + ((i_742_ & 0xff00) * i_740_ >> 8
					& 0xff00));
			    is_724_[i] = i_731_;
			}
			i_729_ += i_730_;
			i_731_ += i_732_;
		    } while (--i_726_ > 0);
		} while (false);
	    } else {
		do {
		    if (((jea) this).c) {
			i_726_ = i_728_ - i_727_ >> 2;
			i_730_ <<= 2;
			if (((jea) this).q == 0) {
			    if (i_726_ > 0) {
				do {
				    i_725_ = vq.m[i_729_ >> 8];
				    i_729_ += i_730_;
				    if (i_731_ < is_724_[++i])
					is[i] = i_725_;
				    i_731_ += i_732_;
				    if (i_731_ < is_724_[++i])
					is[i] = i_725_;
				    i_731_ += i_732_;
				    if (i_731_ < is_724_[++i])
					is[i] = i_725_;
				    i_731_ += i_732_;
				    if (i_731_ < is_724_[++i])
					is[i] = i_725_;
				    i_731_ += i_732_;
				} while (--i_726_ > 0);
			    }
			    i_726_ = i_728_ - i_727_ & 0x3;
			    if (i_726_ > 0) {
				i_725_ = vq.m[i_729_ >> 8];
				do {
				    if (i_731_ < is_724_[++i])
					is[i] = i_725_;
				    i_731_ += i_732_;
				} while (--i_726_ > 0);
			    }
			} else {
			    int i_743_ = ((jea) this).q;
			    int i_744_ = 256 - ((jea) this).q;
			    if (i_726_ > 0) {
				do {
				    i_725_ = vq.m[i_729_ >> 8];
				    i_729_ += i_730_;
				    i_725_
					= (((i_725_ & 0xff00ff) * i_744_ >> 8
					    & 0xff00ff)
					   + ((i_725_ & 0xff00) * i_744_ >> 8
					      & 0xff00));
				    if (i_731_ < is_724_[++i]) {
					int i_745_ = is[i];
					is[i]
					    = (i_725_
					       + (((i_745_ & 0xff00ff) * i_743_
						   >> 8)
						  & 0xff00ff)
					       + (((i_745_ & 0xff00) * i_743_
						   >> 8)
						  & 0xff00));
				    }
				    i_731_ += i_732_;
				    if (i_731_ < is_724_[++i]) {
					int i_746_ = is[i];
					is[i]
					    = (i_725_
					       + (((i_746_ & 0xff00ff) * i_743_
						   >> 8)
						  & 0xff00ff)
					       + (((i_746_ & 0xff00) * i_743_
						   >> 8)
						  & 0xff00));
				    }
				    i_731_ += i_732_;
				    if (i_731_ < is_724_[++i]) {
					int i_747_ = is[i];
					is[i]
					    = (i_725_
					       + (((i_747_ & 0xff00ff) * i_743_
						   >> 8)
						  & 0xff00ff)
					       + (((i_747_ & 0xff00) * i_743_
						   >> 8)
						  & 0xff00));
				    }
				    i_731_ += i_732_;
				    if (i_731_ < is_724_[++i]) {
					int i_748_ = is[i];
					is[i]
					    = (i_725_
					       + (((i_748_ & 0xff00ff) * i_743_
						   >> 8)
						  & 0xff00ff)
					       + (((i_748_ & 0xff00) * i_743_
						   >> 8)
						  & 0xff00));
				    }
				    i_731_ += i_732_;
				} while (--i_726_ > 0);
			    }
			    i_726_ = i_728_ - i_727_ & 0x3;
			    if (i_726_ <= 0)
				break;
			    i_725_ = vq.m[i_729_ >> 8];
			    i_725_ = (((i_725_ & 0xff00ff) * i_744_ >> 8
				       & 0xff00ff)
				      + ((i_725_ & 0xff00) * i_744_ >> 8
					 & 0xff00));
			    do {
				if (i_731_ < is_724_[++i]) {
				    int i_749_ = is[i];
				    is[i]
					= (i_725_
					   + ((i_749_ & 0xff00ff) * i_743_ >> 8
					      & 0xff00ff)
					   + ((i_749_ & 0xff00) * i_743_ >> 8
					      & 0xff00));
				}
				i_731_ += i_732_;
			    } while (--i_726_ > 0);
			}
			break;
		    }
		    i_726_ = i_728_ - i_727_;
		    if (((jea) this).q == 0) {
			do {
			    if (i_731_ < is_724_[++i])
				is[i] = vq.m[i_729_ >> 8];
			    i_731_ += i_732_;
			    i_729_ += i_730_;
			} while (--i_726_ > 0);
			break;
		    }
		    int i_750_ = ((jea) this).q;
		    int i_751_ = 256 - ((jea) this).q;
		    do {
			if (i_731_ < is_724_[++i]) {
			    i_725_ = vq.m[i_729_ >> 8];
			    i_725_ = (((i_725_ & 0xff00ff) * i_751_ >> 8
				       & 0xff00ff)
				      + ((i_725_ & 0xff00) * i_751_ >> 8
					 & 0xff00));
			    int i_752_ = is[i];
			    is[i] = (i_725_
				     + ((i_752_ & 0xff00ff) * i_750_ >> 8
					& 0xff00ff)
				     + ((i_752_ & 0xff00) * i_750_ >> 8
					& 0xff00));
			}
			i_729_ += i_730_;
			i_731_ += i_732_;
		    } while (--i_726_ > 0);
		} while (false);
	    }
	}
    }
    
    final void a(int i, int i_753_, int i_754_, int i_755_, int i_756_,
		 int i_757_, int i_758_, int i_759_, int i_760_, int i_761_) {
	if (p) {
	    g.e(1, i, i_761_, i_753_, i_755_, i_756_);
	    g.e(1, i_753_, i_761_, i_754_, i_756_, i_757_);
	    g.e(1, i_754_, i_761_, i, i_757_, i_755_);
	} else {
	    int i_762_ = i_756_ - i_755_;
	    int i_763_ = i_753_ - i;
	    int i_764_ = i_757_ - i_755_;
	    int i_765_ = i_754_ - i;
	    int i_766_ = i_759_ - i_758_;
	    int i_767_ = i_760_ - i_758_;
	    int i_768_ = 0;
	    if (i_753_ != i)
		i_768_ = (i_756_ - i_755_ << 16) / (i_753_ - i);
	    int i_769_ = 0;
	    if (i_754_ != i_753_)
		i_769_ = (i_757_ - i_756_ << 16) / (i_754_ - i_753_);
	    int i_770_ = 0;
	    if (i_754_ != i)
		i_770_ = (i_755_ - i_757_ << 16) / (i - i_754_);
	    int i_771_ = i_762_ * i_765_ - i_764_ * i_763_;
	    if (i_771_ != 0) {
		int i_772_ = (i_766_ * i_765_ - i_767_ * i_763_ << 8) / i_771_;
		int i_773_ = (i_767_ * i_762_ - i_766_ * i_764_ << 8) / i_771_;
		if (i <= i_753_ && i <= i_754_) {
		    if (i < ((jea) this).r) {
			if (i_753_ > ((jea) this).r)
			    i_753_ = ((jea) this).r;
			if (i_754_ > ((jea) this).r)
			    i_754_ = ((jea) this).r;
			i_758_ = (i_758_ << 8) - i_772_ * i_755_ + i_772_;
			if (i_753_ < i_754_) {
			    i_757_ = i_755_ <<= 16;
			    if (i < 0) {
				i_757_ -= i_770_ * i;
				i_755_ -= i_768_ * i;
				i_758_ -= i_773_ * i;
				i = 0;
			    }
			    i_756_ <<= 16;
			    if (i_753_ < 0) {
				i_756_ -= i_769_ * i_753_;
				i_753_ = 0;
			    }
			    if (i != i_753_ && i_770_ < i_768_
				|| i == i_753_ && i_770_ > i_769_) {
				i_754_ -= i_753_;
				i_753_ -= i;
				i = ((jea) this).h[i];
				while (--i_753_ >= 0) {
				    a(e, m, i, i_761_, 0, i_757_ >> 16,
				      i_755_ >> 16, i_758_, i_772_);
				    i_757_ += i_770_;
				    i_755_ += i_768_;
				    i_758_ += i_773_;
				    i += f;
				}
				while (--i_754_ >= 0) {
				    a(e, m, i, i_761_, 0, i_757_ >> 16,
				      i_756_ >> 16, i_758_, i_772_);
				    i_757_ += i_770_;
				    i_756_ += i_769_;
				    i_758_ += i_773_;
				    i += f;
				}
			    } else {
				i_754_ -= i_753_;
				i_753_ -= i;
				i = ((jea) this).h[i];
				while (--i_753_ >= 0) {
				    a(e, m, i, i_761_, 0, i_755_ >> 16,
				      i_757_ >> 16, i_758_, i_772_);
				    i_757_ += i_770_;
				    i_755_ += i_768_;
				    i_758_ += i_773_;
				    i += f;
				}
				while (--i_754_ >= 0) {
				    a(e, m, i, i_761_, 0, i_756_ >> 16,
				      i_757_ >> 16, i_758_, i_772_);
				    i_757_ += i_770_;
				    i_756_ += i_769_;
				    i_758_ += i_773_;
				    i += f;
				}
			    }
			} else {
			    i_756_ = i_755_ <<= 16;
			    if (i < 0) {
				i_756_ -= i_770_ * i;
				i_755_ -= i_768_ * i;
				i_758_ -= i_773_ * i;
				i = 0;
			    }
			    i_757_ <<= 16;
			    if (i_754_ < 0) {
				i_757_ -= i_769_ * i_754_;
				i_754_ = 0;
			    }
			    if (i != i_754_ && i_770_ < i_768_
				|| i == i_754_ && i_769_ > i_768_) {
				i_753_ -= i_754_;
				i_754_ -= i;
				i = ((jea) this).h[i];
				while (--i_754_ >= 0) {
				    a(e, m, i, i_761_, 0, i_756_ >> 16,
				      i_755_ >> 16, i_758_, i_772_);
				    i_756_ += i_770_;
				    i_755_ += i_768_;
				    i_758_ += i_773_;
				    i += f;
				}
				while (--i_753_ >= 0) {
				    a(e, m, i, i_761_, 0, i_757_ >> 16,
				      i_755_ >> 16, i_758_, i_772_);
				    i_757_ += i_769_;
				    i_755_ += i_768_;
				    i_758_ += i_773_;
				    i += f;
				}
			    } else {
				i_753_ -= i_754_;
				i_754_ -= i;
				i = ((jea) this).h[i];
				while (--i_754_ >= 0) {
				    a(e, m, i, i_761_, 0, i_755_ >> 16,
				      i_756_ >> 16, i_758_, i_772_);
				    i_756_ += i_770_;
				    i_755_ += i_768_;
				    i_758_ += i_773_;
				    i += f;
				}
				while (--i_753_ >= 0) {
				    a(e, m, i, i_761_, 0, i_755_ >> 16,
				      i_757_ >> 16, i_758_, i_772_);
				    i_757_ += i_769_;
				    i_755_ += i_768_;
				    i_758_ += i_773_;
				    i += f;
				}
			    }
			}
		    }
		} else if (i_753_ <= i_754_) {
		    if (i_753_ < ((jea) this).r) {
			if (i_754_ > ((jea) this).r)
			    i_754_ = ((jea) this).r;
			if (i > ((jea) this).r)
			    i = ((jea) this).r;
			i_759_ = (i_759_ << 8) - i_772_ * i_756_ + i_772_;
			if (i_754_ < i) {
			    i_755_ = i_756_ <<= 16;
			    if (i_753_ < 0) {
				i_755_ -= i_768_ * i_753_;
				i_756_ -= i_769_ * i_753_;
				i_759_ -= i_773_ * i_753_;
				i_753_ = 0;
			    }
			    i_757_ <<= 16;
			    if (i_754_ < 0) {
				i_757_ -= i_770_ * i_754_;
				i_754_ = 0;
			    }
			    if (i_753_ != i_754_ && i_768_ < i_769_
				|| i_753_ == i_754_ && i_768_ > i_770_) {
				i -= i_754_;
				i_754_ -= i_753_;
				i_753_ = ((jea) this).h[i_753_];
				while (--i_754_ >= 0) {
				    a(e, m, i_753_, i_761_, 0, i_755_ >> 16,
				      i_756_ >> 16, i_759_, i_772_);
				    i_755_ += i_768_;
				    i_756_ += i_769_;
				    i_759_ += i_773_;
				    i_753_ += f;
				}
				while (--i >= 0) {
				    a(e, m, i_753_, i_761_, 0, i_755_ >> 16,
				      i_757_ >> 16, i_759_, i_772_);
				    i_755_ += i_768_;
				    i_757_ += i_770_;
				    i_759_ += i_773_;
				    i_753_ += f;
				}
			    } else {
				i -= i_754_;
				i_754_ -= i_753_;
				i_753_ = ((jea) this).h[i_753_];
				while (--i_754_ >= 0) {
				    a(e, m, i_753_, i_761_, 0, i_756_ >> 16,
				      i_755_ >> 16, i_759_, i_772_);
				    i_755_ += i_768_;
				    i_756_ += i_769_;
				    i_759_ += i_773_;
				    i_753_ += f;
				}
				while (--i >= 0) {
				    a(e, m, i_753_, i_761_, 0, i_757_ >> 16,
				      i_755_ >> 16, i_759_, i_772_);
				    i_755_ += i_768_;
				    i_757_ += i_770_;
				    i_759_ += i_773_;
				    i_753_ += f;
				}
			    }
			} else {
			    i_757_ = i_756_ <<= 16;
			    if (i_753_ < 0) {
				i_757_ -= i_768_ * i_753_;
				i_756_ -= i_769_ * i_753_;
				i_759_ -= i_773_ * i_753_;
				i_753_ = 0;
			    }
			    i_755_ <<= 16;
			    if (i < 0) {
				i_755_ -= i_770_ * i;
				i = 0;
			    }
			    if (i_768_ < i_769_) {
				i_754_ -= i;
				i -= i_753_;
				i_753_ = ((jea) this).h[i_753_];
				while (--i >= 0) {
				    a(e, m, i_753_, i_761_, 0, i_757_ >> 16,
				      i_756_ >> 16, i_759_, i_772_);
				    i_757_ += i_768_;
				    i_756_ += i_769_;
				    i_759_ += i_773_;
				    i_753_ += f;
				}
				while (--i_754_ >= 0) {
				    a(e, m, i_753_, i_761_, 0, i_755_ >> 16,
				      i_756_ >> 16, i_759_, i_772_);
				    i_755_ += i_770_;
				    i_756_ += i_769_;
				    i_759_ += i_773_;
				    i_753_ += f;
				}
			    } else {
				i_754_ -= i;
				i -= i_753_;
				i_753_ = ((jea) this).h[i_753_];
				while (--i >= 0) {
				    a(e, m, i_753_, i_761_, 0, i_756_ >> 16,
				      i_757_ >> 16, i_759_, i_772_);
				    i_757_ += i_768_;
				    i_756_ += i_769_;
				    i_759_ += i_773_;
				    i_753_ += f;
				}
				while (--i_754_ >= 0) {
				    a(e, m, i_753_, i_761_, 0, i_756_ >> 16,
				      i_755_ >> 16, i_759_, i_772_);
				    i_755_ += i_770_;
				    i_756_ += i_769_;
				    i_759_ += i_773_;
				    i_753_ += f;
				}
			    }
			}
		    }
		} else if (i_754_ < ((jea) this).r) {
		    if (i > ((jea) this).r)
			i = ((jea) this).r;
		    if (i_753_ > ((jea) this).r)
			i_753_ = ((jea) this).r;
		    i_760_ = (i_760_ << 8) - i_772_ * i_757_ + i_772_;
		    if (i < i_753_) {
			i_756_ = i_757_ <<= 16;
			if (i_754_ < 0) {
			    i_756_ -= i_769_ * i_754_;
			    i_757_ -= i_770_ * i_754_;
			    i_760_ -= i_773_ * i_754_;
			    i_754_ = 0;
			}
			i_755_ <<= 16;
			if (i < 0) {
			    i_755_ -= i_768_ * i;
			    i = 0;
			}
			if (i_769_ < i_770_) {
			    i_753_ -= i;
			    i -= i_754_;
			    i_754_ = ((jea) this).h[i_754_];
			    while (--i >= 0) {
				a(e, m, i_754_, i_761_, 0, i_756_ >> 16,
				  i_757_ >> 16, i_760_, i_772_);
				i_756_ += i_769_;
				i_757_ += i_770_;
				i_760_ += i_773_;
				i_754_ += f;
			    }
			    while (--i_753_ >= 0) {
				a(e, m, i_754_, i_761_, 0, i_756_ >> 16,
				  i_755_ >> 16, i_760_, i_772_);
				i_756_ += i_769_;
				i_755_ += i_768_;
				i_760_ += i_773_;
				i_754_ += f;
			    }
			} else {
			    i_753_ -= i;
			    i -= i_754_;
			    i_754_ = ((jea) this).h[i_754_];
			    while (--i >= 0) {
				a(e, m, i_754_, i_761_, 0, i_757_ >> 16,
				  i_756_ >> 16, i_760_, i_772_);
				i_756_ += i_769_;
				i_757_ += i_770_;
				i_760_ += i_773_;
				i_754_ += f;
			    }
			    while (--i_753_ >= 0) {
				a(e, m, i_754_, i_761_, 0, i_755_ >> 16,
				  i_756_ >> 16, i_760_, i_772_);
				i_756_ += i_769_;
				i_755_ += i_768_;
				i_760_ += i_773_;
				i_754_ += f;
			    }
			}
		    } else {
			i_755_ = i_757_ <<= 16;
			if (i_754_ < 0) {
			    i_755_ -= i_769_ * i_754_;
			    i_757_ -= i_770_ * i_754_;
			    i_760_ -= i_773_ * i_754_;
			    i_754_ = 0;
			}
			i_756_ <<= 16;
			if (i_753_ < 0) {
			    i_756_ -= i_768_ * i_753_;
			    i_753_ = 0;
			}
			if (i_769_ < i_770_) {
			    i -= i_753_;
			    i_753_ -= i_754_;
			    i_754_ = ((jea) this).h[i_754_];
			    while (--i_753_ >= 0) {
				a(e, m, i_754_, i_761_, 0, i_755_ >> 16,
				  i_757_ >> 16, i_760_, i_772_);
				i_755_ += i_769_;
				i_757_ += i_770_;
				i_760_ += i_773_;
				i_754_ += f;
			    }
			    while (--i >= 0) {
				a(e, m, i_754_, i_761_, 0, i_756_ >> 16,
				  i_757_ >> 16, i_760_, i_772_);
				i_756_ += i_768_;
				i_757_ += i_770_;
				i_760_ += i_773_;
				i_754_ += f;
			    }
			} else {
			    i -= i_753_;
			    i_753_ -= i_754_;
			    i_754_ = ((jea) this).h[i_754_];
			    while (--i_753_ >= 0) {
				a(e, m, i_754_, i_761_, 0, i_757_ >> 16,
				  i_755_ >> 16, i_760_, i_772_);
				i_755_ += i_769_;
				i_757_ += i_770_;
				i_760_ += i_773_;
				i_754_ += f;
			    }
			    while (--i >= 0) {
				a(e, m, i_754_, i_761_, 0, i_757_ >> 16,
				  i_756_ >> 16, i_760_, i_772_);
				i_756_ += i_768_;
				i_757_ += i_770_;
				i_760_ += i_773_;
				i_754_ += f;
			    }
			}
		    }
		}
	    }
	}
    }
    
    private final void c(int[] is, int[] is_774_, int[] is_775_, int i,
			 int i_776_, int i_777_, int i_778_, int i_779_,
			 int i_780_, int i_781_, int i_782_, int i_783_,
			 float f, float f_784_, float f_785_, float f_786_,
			 float f_787_, float f_788_) {
	int i_789_ = i_779_ - i_778_;
	do {
	    if (a) {
		int i_790_ = i_778_ - ((jea) this).i;
		f += f_786_ / 8.0F * (float) i_790_;
		f_784_ += f_787_ / 8.0F * (float) i_790_;
		f_785_ += f_788_ / 8.0F * (float) i_790_;
		int i_791_;
		int i_792_;
		if (f_785_ != 0.0F) {
		    i_791_ = (int) (f * 4096.0F / f_785_);
		    i_792_ = (int) (f_784_ * 4096.0F / f_785_);
		} else {
		    i_791_ = 0;
		    i_792_ = 0;
		}
		f += f_786_;
		f_784_ += f_787_;
		f_785_ += f_788_;
		int i_793_;
		int i_794_;
		if (f_785_ != 0.0F) {
		    i_793_ = (int) (f * 4096.0F / f_785_);
		    i_794_ = (int) (f_784_ * 4096.0F / f_785_);
		} else {
		    i_793_ = 0;
		    i_794_ = 0;
		}
		i = (i_791_ << 20) + i_792_;
		int i_795_
		    = (i_793_ - i_791_ >> 3 << 20) + (i_794_ - i_792_ >> 3);
		i_789_ >>= 3;
		i_783_ <<= 3;
		int i_796_ = i_782_ >> 8;
		if (n) {
		    if (i_789_ > 0) {
			do {
			    if (i_780_ < is_774_[i_777_]) {
				i_776_ = is_775_[(i & 0xfc0) + (i >>> 26)];
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    if (i_780_ < is_774_[i_777_]) {
				i_776_ = is_775_[(i & 0xfc0) + (i >>> 26)];
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    if (i_780_ < is_774_[i_777_]) {
				i_776_ = is_775_[(i & 0xfc0) + (i >>> 26)];
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    if (i_780_ < is_774_[i_777_]) {
				i_776_ = is_775_[(i & 0xfc0) + (i >>> 26)];
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    if (i_780_ < is_774_[i_777_]) {
				i_776_ = is_775_[(i & 0xfc0) + (i >>> 26)];
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    if (i_780_ < is_774_[i_777_]) {
				i_776_ = is_775_[(i & 0xfc0) + (i >>> 26)];
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    if (i_780_ < is_774_[i_777_]) {
				i_776_ = is_775_[(i & 0xfc0) + (i >>> 26)];
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    if (i_780_ < is_774_[i_777_]) {
				i_776_ = is_775_[(i & 0xfc0) + (i >>> 26)];
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    i_791_ = i_793_;
			    i_792_ = i_794_;
			    f += f_786_;
			    f_784_ += f_787_;
			    f_785_ += f_788_;
			    if (f_785_ != 0.0F) {
				i_793_ = (int) (f * 4096.0F / f_785_);
				i_794_ = (int) (f_784_ * 4096.0F / f_785_);
			    } else {
				i_793_ = 0;
				i_794_ = 0;
			    }
			    i = (i_791_ << 20) + i_792_;
			    i_795_ = ((i_793_ - i_791_ >> 3 << 20)
				      + (i_794_ - i_792_ >> 3));
			    i_782_ += i_783_;
			    i_796_ = i_782_ >> 8;
			} while (--i_789_ > 0);
		    }
		    i_789_ = i_779_ - i_778_ & 0x7;
		    if (i_789_ > 0) {
			do {
			    if (i_780_ < is_774_[i_777_]) {
				i_776_ = is_775_[(i & 0xfc0) + (i >>> 26)];
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			} while (--i_789_ > 0);
		    }
		} else {
		    if (i_789_ > 0) {
			do {
			    if (i_780_ < is_774_[i_777_]
				&& ((i_776_
				     = is_775_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    if (i_780_ < is_774_[i_777_]
				&& ((i_776_
				     = is_775_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    if (i_780_ < is_774_[i_777_]
				&& ((i_776_
				     = is_775_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    if (i_780_ < is_774_[i_777_]
				&& ((i_776_
				     = is_775_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    if (i_780_ < is_774_[i_777_]
				&& ((i_776_
				     = is_775_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    if (i_780_ < is_774_[i_777_]
				&& ((i_776_
				     = is_775_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    if (i_780_ < is_774_[i_777_]
				&& ((i_776_
				     = is_775_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    if (i_780_ < is_774_[i_777_]
				&& ((i_776_
				     = is_775_[(i & 0xfc0) + (i >>> 26)])
				    != 0)) {
				is[i_777_] = (((i_776_ & 0xff00ff) * i_796_
					       & ~0xff00ff)
					      + ((i_776_ & 0xff00) * i_796_
						 & 0xff0000)) >> 8;
				is_774_[i_777_] = i_780_;
			    }
			    i_780_ += i_781_;
			    i += i_795_;
			    i_777_++;
			    i_791_ = i_793_;
			    i_792_ = i_794_;
			    f += f_786_;
			    f_784_ += f_787_;
			    f_785_ += f_788_;
			    if (f_785_ != 0.0F) {
				i_793_ = (int) (f * 4096.0F / f_785_);
				i_794_ = (int) (f_784_ * 4096.0F / f_785_);
			    } else {
				i_793_ = 0;
				i_794_ = 0;
			    }
			    i = (i_791_ << 20) + i_792_;
			    i_795_ = ((i_793_ - i_791_ >> 3 << 20)
				      + (i_794_ - i_792_ >> 3));
			    i_782_ += i_783_;
			    i_796_ = i_782_ >> 8;
			} while (--i_789_ > 0);
		    }
		    i_789_ = i_779_ - i_778_ & 0x7;
		    if (i_789_ <= 0)
			break;
		    do {
			if (i_780_ < is_774_[i_777_]
			    && ((i_776_ = is_775_[(i & 0xfc0) + (i >>> 26)])
				!= 0)) {
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_796_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_796_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_795_;
			i_777_++;
		    } while (--i_789_ > 0);
		}
		break;
	    }
	    int i_797_ = i_778_ - ((jea) this).i;
	    f += f_786_ / 8.0F * (float) i_797_;
	    f_784_ += f_787_ / 8.0F * (float) i_797_;
	    f_785_ += f_788_ / 8.0F * (float) i_797_;
	    int i_798_;
	    int i_799_;
	    if (f_785_ != 0.0F) {
		i_798_ = (int) (f * 16384.0F / f_785_);
		i_799_ = (int) (f_784_ * 16384.0F / f_785_);
	    } else {
		i_798_ = 0;
		i_799_ = 0;
	    }
	    f += f_786_;
	    f_784_ += f_787_;
	    f_785_ += f_788_;
	    int i_800_;
	    int i_801_;
	    if (f_785_ != 0.0F) {
		i_800_ = (int) (f * 16384.0F / f_785_);
		i_801_ = (int) (f_784_ * 16384.0F / f_785_);
	    } else {
		i_800_ = 0;
		i_801_ = 0;
	    }
	    i = (i_798_ << 18) + i_799_;
	    int i_802_ = (i_800_ - i_798_ >> 3 << 18) + (i_801_ - i_799_ >> 3);
	    i_789_ >>= 3;
	    i_783_ <<= 3;
	    int i_803_ = i_782_ >> 8;
	    if (n) {
		if (i_789_ > 0) {
		    do {
			if (i_780_ < is_774_[i_777_]) {
			    i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)];
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			if (i_780_ < is_774_[i_777_]) {
			    i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)];
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			if (i_780_ < is_774_[i_777_]) {
			    i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)];
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			if (i_780_ < is_774_[i_777_]) {
			    i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)];
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			if (i_780_ < is_774_[i_777_]) {
			    i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)];
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			if (i_780_ < is_774_[i_777_]) {
			    i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)];
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			if (i_780_ < is_774_[i_777_]) {
			    i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)];
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			if (i_780_ < is_774_[i_777_]) {
			    i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)];
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			i_798_ = i_800_;
			i_799_ = i_801_;
			f += f_786_;
			f_784_ += f_787_;
			f_785_ += f_788_;
			if (f_785_ != 0.0F) {
			    i_800_ = (int) (f * 16384.0F / f_785_);
			    i_801_ = (int) (f_784_ * 16384.0F / f_785_);
			} else {
			    i_800_ = 0;
			    i_801_ = 0;
			}
			i = (i_798_ << 18) + i_799_;
			i_802_
			    = (i_800_ - i_798_ >> 3 << 18) + (i_801_ - i_799_
							      >> 3);
			i_782_ += i_783_;
			i_803_ = i_782_ >> 8;
		    } while (--i_789_ > 0);
		}
		i_789_ = i_779_ - i_778_ & 0x7;
		if (i_789_ > 0) {
		    do {
			if (i_780_ < is_774_[i_777_]) {
			    i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)];
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
		    } while (--i_789_ > 0);
		    break;
		}
	    } else {
		if (i_789_ > 0) {
		    do {
			if (i_780_ < is_774_[i_777_]
			    && ((i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			if (i_780_ < is_774_[i_777_]
			    && ((i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			if (i_780_ < is_774_[i_777_]
			    && ((i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			if (i_780_ < is_774_[i_777_]
			    && ((i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			if (i_780_ < is_774_[i_777_]
			    && ((i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			if (i_780_ < is_774_[i_777_]
			    && ((i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			if (i_780_ < is_774_[i_777_]
			    && ((i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			if (i_780_ < is_774_[i_777_]
			    && ((i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
			i_798_ = i_800_;
			i_799_ = i_801_;
			f += f_786_;
			f_784_ += f_787_;
			f_785_ += f_788_;
			if (f_785_ != 0.0F) {
			    i_800_ = (int) (f / f_785_ * 16384.0F);
			    i_801_ = (int) (f_784_ / f_785_ * 16384.0F);
			} else {
			    i_800_ = 0;
			    i_801_ = 0;
			}
			i = (i_798_ << 18) + i_799_;
			i_802_
			    = (i_800_ - i_798_ >> 3 << 18) + (i_801_ - i_799_
							      >> 3);
			i_782_ += i_783_;
			i_803_ = i_782_ >> 8;
		    } while (--i_789_ > 0);
		}
		i_789_ = i_779_ - i_778_ & 0x7;
		if (i_789_ > 0) {
		    do {
			if (i_780_ < is_774_[i_777_]
			    && ((i_776_ = is_775_[(i & 0x3f80) + (i >>> 25)])
				!= 0)) {
			    is[i_777_]
				= ((((i_776_ & 0xff00ff) * i_803_ & ~0xff00ff)
				    + ((i_776_ & 0xff00) * i_803_ & 0xff0000))
				   >> 8);
			    is_774_[i_777_] = i_780_;
			}
			i_780_ += i_781_;
			i += i_802_;
			i_777_++;
		    } while (--i_789_ > 0);
		}
	    }
	} while (false);
    }
    
    final int b() {
	return ((jea) this).h[0] / f;
    }
    
    private final void d(int[] is, int[] is_804_, int[] is_805_, int i,
			 int i_806_, int i_807_, int i_808_, int i_809_,
			 int i_810_, int i_811_, int i_812_, int i_813_,
			 float f, float f_814_, float f_815_, float f_816_,
			 float f_817_, float f_818_) {
	int i_819_ = i_809_ - i_808_;
	do {
	    if (a) {
		int i_820_ = i_808_ - ((jea) this).i;
		f += f_816_ / 8.0F * (float) i_820_;
		f_814_ += f_817_ / 8.0F * (float) i_820_;
		f_815_ += f_818_ / 8.0F * (float) i_820_;
		int i_821_;
		int i_822_;
		if (f_815_ != 0.0F) {
		    i_821_ = (int) (f * 4096.0F / f_815_);
		    i_822_ = (int) (f_814_ * 4096.0F / f_815_);
		} else {
		    i_821_ = 0;
		    i_822_ = 0;
		}
		f += f_816_;
		f_814_ += f_817_;
		f_815_ += f_818_;
		int i_823_;
		int i_824_;
		if (f_815_ != 0.0F) {
		    i_823_ = (int) (f * 4096.0F / f_815_);
		    i_824_ = (int) (f_814_ * 4096.0F / f_815_);
		} else {
		    i_823_ = 0;
		    i_824_ = 0;
		}
		i = (i_821_ << 20) + i_822_;
		int i_825_
		    = (i_823_ - i_821_ >> 3 << 20) + (i_824_ - i_822_ >> 3);
		i_819_ >>= 3;
		i_813_ <<= 3;
		int i_826_ = i_812_ >> 8;
		if (n) {
		    if (i_819_ > 0) {
			do {
			    if (i_810_ < is_804_[i_807_]) {
				i_806_ = is_805_[(i & 0xfc0) + (i >>> 26)];
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    }
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    if (i_810_ < is_804_[i_807_]) {
				i_806_ = is_805_[(i & 0xfc0) + (i >>> 26)];
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    }
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    if (i_810_ < is_804_[i_807_]) {
				i_806_ = is_805_[(i & 0xfc0) + (i >>> 26)];
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    }
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    if (i_810_ < is_804_[i_807_]) {
				i_806_ = is_805_[(i & 0xfc0) + (i >>> 26)];
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    }
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    if (i_810_ < is_804_[i_807_]) {
				i_806_ = is_805_[(i & 0xfc0) + (i >>> 26)];
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    }
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    if (i_810_ < is_804_[i_807_]) {
				i_806_ = is_805_[(i & 0xfc0) + (i >>> 26)];
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    }
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    if (i_810_ < is_804_[i_807_]) {
				i_806_ = is_805_[(i & 0xfc0) + (i >>> 26)];
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    }
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    if (i_810_ < is_804_[i_807_]) {
				i_806_ = is_805_[(i & 0xfc0) + (i >>> 26)];
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    }
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    i_821_ = i_823_;
			    i_822_ = i_824_;
			    f += f_816_;
			    f_814_ += f_817_;
			    f_815_ += f_818_;
			    if (f_815_ != 0.0F) {
				i_823_ = (int) (f * 4096.0F / f_815_);
				i_824_ = (int) (f_814_ * 4096.0F / f_815_);
			    } else {
				i_823_ = 0;
				i_824_ = 0;
			    }
			    i = (i_821_ << 20) + i_822_;
			    i_825_ = ((i_823_ - i_821_ >> 3 << 20)
				      + (i_824_ - i_822_ >> 3));
			    i_812_ += i_813_;
			    i_826_ = i_812_ >> 8;
			} while (--i_819_ > 0);
		    }
		    i_819_ = i_809_ - i_808_ & 0x7;
		    if (i_819_ > 0) {
			do {
			    if (i_810_ < is_804_[i_807_]) {
				i_806_ = is_805_[(i & 0xfc0) + (i >>> 26)];
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    }
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			} while (--i_819_ > 0);
		    }
		} else {
		    if (i_819_ > 0) {
			do {
			    if (i_810_ < is_804_[i_807_]
				&& (i_806_
				    = is_805_[(i & 0xfc0) + (i >>> 26)]) != 0)
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    if (i_810_ < is_804_[i_807_]
				&& (i_806_
				    = is_805_[(i & 0xfc0) + (i >>> 26)]) != 0)
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    if (i_810_ < is_804_[i_807_]
				&& (i_806_
				    = is_805_[(i & 0xfc0) + (i >>> 26)]) != 0)
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    if (i_810_ < is_804_[i_807_]
				&& (i_806_
				    = is_805_[(i & 0xfc0) + (i >>> 26)]) != 0)
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    if (i_810_ < is_804_[i_807_]
				&& (i_806_
				    = is_805_[(i & 0xfc0) + (i >>> 26)]) != 0)
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    if (i_810_ < is_804_[i_807_]
				&& (i_806_
				    = is_805_[(i & 0xfc0) + (i >>> 26)]) != 0)
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    if (i_810_ < is_804_[i_807_]
				&& (i_806_
				    = is_805_[(i & 0xfc0) + (i >>> 26)]) != 0)
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    if (i_810_ < is_804_[i_807_]
				&& (i_806_
				    = is_805_[(i & 0xfc0) + (i >>> 26)]) != 0)
				is[i_807_] = (((i_806_ & 0xff00ff) * i_826_
					       & ~0xff00ff)
					      + ((i_806_ & 0xff00) * i_826_
						 & 0xff0000)) >> 8;
			    i_810_ += i_811_;
			    i += i_825_;
			    i_807_++;
			    i_821_ = i_823_;
			    i_822_ = i_824_;
			    f += f_816_;
			    f_814_ += f_817_;
			    f_815_ += f_818_;
			    if (f_815_ != 0.0F) {
				i_823_ = (int) (f * 4096.0F / f_815_);
				i_824_ = (int) (f_814_ * 4096.0F / f_815_);
			    } else {
				i_823_ = 0;
				i_824_ = 0;
			    }
			    i = (i_821_ << 20) + i_822_;
			    i_825_ = ((i_823_ - i_821_ >> 3 << 20)
				      + (i_824_ - i_822_ >> 3));
			    i_812_ += i_813_;
			    i_826_ = i_812_ >> 8;
			} while (--i_819_ > 0);
		    }
		    i_819_ = i_809_ - i_808_ & 0x7;
		    if (i_819_ <= 0)
			break;
		    do {
			if (i_810_ < is_804_[i_807_]
			    && ((i_806_ = is_805_[(i & 0xfc0) + (i >>> 26)])
				!= 0))
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_826_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_826_ & 0xff0000))
				   >> 8);
			i_810_ += i_811_;
			i += i_825_;
			i_807_++;
		    } while (--i_819_ > 0);
		}
		break;
	    }
	    int i_827_ = i_808_ - ((jea) this).i;
	    f += f_816_ / 8.0F * (float) i_827_;
	    f_814_ += f_817_ / 8.0F * (float) i_827_;
	    f_815_ += f_818_ / 8.0F * (float) i_827_;
	    int i_828_;
	    int i_829_;
	    if (f_815_ != 0.0F) {
		i_828_ = (int) (f * 16384.0F / f_815_);
		i_829_ = (int) (f_814_ * 16384.0F / f_815_);
	    } else {
		i_828_ = 0;
		i_829_ = 0;
	    }
	    f += f_816_;
	    f_814_ += f_817_;
	    f_815_ += f_818_;
	    int i_830_;
	    int i_831_;
	    if (f_815_ != 0.0F) {
		i_830_ = (int) (f * 16384.0F / f_815_);
		i_831_ = (int) (f_814_ * 16384.0F / f_815_);
	    } else {
		i_830_ = 0;
		i_831_ = 0;
	    }
	    i = (i_828_ << 18) + i_829_;
	    int i_832_ = (i_830_ - i_828_ >> 3 << 18) + (i_831_ - i_829_ >> 3);
	    i_819_ >>= 3;
	    i_813_ <<= 3;
	    int i_833_ = i_812_ >> 8;
	    if (n) {
		if (i_819_ > 0) {
		    do {
			if (i_810_ < is_804_[i_807_]) {
			    i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)];
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			}
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			if (i_810_ < is_804_[i_807_]) {
			    i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)];
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			}
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			if (i_810_ < is_804_[i_807_]) {
			    i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)];
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			}
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			if (i_810_ < is_804_[i_807_]) {
			    i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)];
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			}
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			if (i_810_ < is_804_[i_807_]) {
			    i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)];
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			}
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			if (i_810_ < is_804_[i_807_]) {
			    i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)];
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			}
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			if (i_810_ < is_804_[i_807_]) {
			    i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)];
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			}
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			if (i_810_ < is_804_[i_807_]) {
			    i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)];
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			}
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			i_828_ = i_830_;
			i_829_ = i_831_;
			f += f_816_;
			f_814_ += f_817_;
			f_815_ += f_818_;
			if (f_815_ != 0.0F) {
			    i_830_ = (int) (f * 16384.0F / f_815_);
			    i_831_ = (int) (f_814_ * 16384.0F / f_815_);
			} else {
			    i_830_ = 0;
			    i_831_ = 0;
			}
			i = (i_828_ << 18) + i_829_;
			i_832_
			    = (i_830_ - i_828_ >> 3 << 18) + (i_831_ - i_829_
							      >> 3);
			i_812_ += i_813_;
			i_833_ = i_812_ >> 8;
		    } while (--i_819_ > 0);
		}
		i_819_ = i_809_ - i_808_ & 0x7;
		if (i_819_ > 0) {
		    do {
			if (i_810_ < is_804_[i_807_]) {
			    i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)];
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			}
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
		    } while (--i_819_ > 0);
		    break;
		}
	    } else {
		if (i_819_ > 0) {
		    do {
			if (i_810_ < is_804_[i_807_]
			    && ((i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)])
				!= 0))
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			if (i_810_ < is_804_[i_807_]
			    && ((i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)])
				!= 0))
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			if (i_810_ < is_804_[i_807_]
			    && ((i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)])
				!= 0))
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			if (i_810_ < is_804_[i_807_]
			    && ((i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)])
				!= 0))
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			if (i_810_ < is_804_[i_807_]
			    && ((i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)])
				!= 0))
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			if (i_810_ < is_804_[i_807_]
			    && ((i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)])
				!= 0))
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			if (i_810_ < is_804_[i_807_]
			    && ((i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)])
				!= 0))
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			if (i_810_ < is_804_[i_807_]
			    && ((i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)])
				!= 0))
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
			i_828_ = i_830_;
			i_829_ = i_831_;
			f += f_816_;
			f_814_ += f_817_;
			f_815_ += f_818_;
			if (f_815_ != 0.0F) {
			    i_830_ = (int) (f / f_815_ * 16384.0F);
			    i_831_ = (int) (f_814_ / f_815_ * 16384.0F);
			} else {
			    i_830_ = 0;
			    i_831_ = 0;
			}
			i = (i_828_ << 18) + i_829_;
			i_832_
			    = (i_830_ - i_828_ >> 3 << 18) + (i_831_ - i_829_
							      >> 3);
			i_812_ += i_813_;
			i_833_ = i_812_ >> 8;
		    } while (--i_819_ > 0);
		}
		i_819_ = i_809_ - i_808_ & 0x7;
		if (i_819_ > 0) {
		    do {
			if (i_810_ < is_804_[i_807_]
			    && ((i_806_ = is_805_[(i & 0x3f80) + (i >>> 25)])
				!= 0))
			    is[i_807_]
				= ((((i_806_ & 0xff00ff) * i_833_ & ~0xff00ff)
				    + ((i_806_ & 0xff00) * i_833_ & 0xff0000))
				   >> 8);
			i_810_ += i_811_;
			i += i_832_;
			i_807_++;
		    } while (--i_819_ > 0);
		}
	    }
	} while (false);
    }
    
    private final void e(int[] is, int[] is_834_, int[] is_835_, int i,
			 int i_836_, int i_837_, int i_838_, int i_839_,
			 int i_840_, int i_841_, int i_842_, int i_843_,
			 float f, float f_844_, float f_845_, float f_846_,
			 float f_847_, float f_848_) {
	if (((jea) this).o) {
	    if (i_839_ > ((jea) this).b)
		i_839_ = ((jea) this).b;
	    if (i_838_ < 0)
		i_838_ = 0;
	}
	if (i_838_ < i_839_) {
	    i_837_ += i_838_;
	    i_842_ += i_843_ * i_838_;
	    i_840_ += i_841_ * i_838_;
	    if (((jea) this).q == 0) {
		if (((lfa) d).i)
		    c(is, is_834_, is_835_, i, i_836_, i_837_, i_838_, i_839_,
		      i_840_, i_841_, i_842_, i_843_, f, f_844_, f_845_,
		      f_846_, f_847_, f_848_);
		else
		    d(is, is_834_, is_835_, i, i_836_, i_837_, i_838_, i_839_,
		      i_840_, i_841_, i_842_, i_843_, f, f_844_, f_845_,
		      f_846_, f_847_, f_848_);
	    } else if (((lfa) d).i)
		b(is, is_834_, is_835_, i, i_836_, i_837_, i_838_, i_839_,
		  i_840_, i_841_, i_842_, i_843_, f, f_844_, f_845_, f_846_,
		  f_847_, f_848_);
	    else
		a(is, is_834_, is_835_, i, i_836_, i_837_, i_838_, i_839_,
		  i_840_, i_841_, i_842_, i_843_, f, f_844_, f_845_, f_846_,
		  f_847_, f_848_);
	}
    }
    
    jea(nga var_nga, lfa var_lfa) {
	((jea) this).h = new int[4096];
	((jea) this).k = false;
	((jea) this).c = true;
	((jea) this).q = 0;
	((jea) this).j = false;
	((jea) this).o = false;
	p = false;
	g = var_nga;
	d = var_lfa;
	f = ((nga) g).C;
	e = ((nga) g).H;
	m = ((nga) g).U;
    }
}
