/* iaa - Decompiled by JODE
 * Visit http://jode.sourceforge.net/
 */

final class iaa
{
    String a;
    String b;
    private static short[][] c
	= { { 6798, 107, 10283, 16, 4797, 7744, 5799, 4634, -31839, 22433,
	      2983, -11343, 8, 5281, 10438, 3650, -27322, -21845, 200, 571,
	      908, 21830, 28946, -15701, -14010 },
	    { 8741, 12, -1506, -22374, 7735, 8404, 1701, -27106, 24094, 10153,
	      -8915, 4783, 1341, 16578, -30533, 25239, 8, 5281, 10438, 3650,
	      -27322, -21845, 200, 571, 908, 21830, 28946, -15701, -14010,
	      7085, 4001, 317, 918, 9517, 9125, 3608, 16450, -32593, 22026,
	      2700, -22256, 10289, 3877, -27999, 10770, 8982, 3753, 10275, 924,
	      8637, -26428, 26785, -15202, 8736, 2994, -25710, 928, 6859,
	      -25016, -5449, -14823, -23401, 12, -22456, -27471, -11229, 21673,
	      57, -24046, -27190, -22877, -30041, 20013, 21596, -31414, 29000,
	      -11209, 6361, -25552, -25450, -14174, -10998, -27357, 3249, 7465,
	      8913, 13774, 4584, 11728, 10454, 8123, 2619, 13756, -28220,
	      -26323, -23901, -31385, -32342, -29806, -29902, -24128, 933,
	      1189, 3873, 6057, 8590, 1812, 4895, -5366, 15019, 20793, 7599,
	      9536, 21778, 14102, 6938, 14648, 5919, 6472, 10128, 17940, 3226,
	      267, 5421, -27570, -25177, -26319, -28217, -28132, -23792,
	      -23249, -23001, -19033, 5427, 6340, 5673, 2458, 3625, 8646, 5186,
	      10382, 6826, 7442, 158, 2454, 9655, -27496, -27578, -31687,
	      11146, 18712, 10785, 21902, 10566, 9500, 11819, 11144, -15965,
	      -24170, -32488, -29277, 29097, -9567, -18794, -27116, 921, 6028,
	      2974, -5230, 6550, 15244, 14, 49, 3994, 2332, 6038, -31701, 520,
	      41, 9402, -4825, 28978, -25278, 30876, 13475, -28395, -24010,
	      -14027, -22454, -18158, 20503, -27618, -22258, -1776, -31468,
	      9616, 7333, 650, 784, 796, 813, -616, -3194, -8152, 1686, 29074,
	      22422, -32245, 29084, 22411, -22000, 3982, 7062, 10382, 3230,
	      8076, 20, 1936, 10, -22473, 4892, 5805, 5904, 10, 48, 1936, 5640,
	      8472, -25529 },
	    { 25238, 8742, 12, -1506, -22374, 7735, 8404, 1701, -27106, 24094,
	      10153, -8915, 4783, 1341, 16578, -30533, 8, 5281, 10438, 3650,
	      -27322, -21845, 200, 571, 908, 21830, 28946, -15701, -14010,
	      7085, 4001, 317, 918, 9517, 9125, 3608, 16450, -32593, 22026,
	      2700, -22256, 10289, 3877, -27999, 10770, 8982, 3753, 10275, 924,
	      8637, -26428, 26785, -15202, 8736, 2994, -25710, 928, 6859,
	      -25016, -5449, -14823, -23401, 12, -22456, -27471, -11229, 21673,
	      57, -24046, -27190, -22877, -30041, 20013, 21596, -31414, 29000,
	      -11209, 6361, -25552, -25450, -14174, -10998, -27357, 3249, 7465,
	      8913, 13774, 4584, 11728, 10454, 8123, 2619, 13756, -28220,
	      -26323, -23901, -31385, -32342, -29806, -29902, -24128, 933,
	      1189, 3873, 6057, 8590, 1812, 4895, -5366, 15019, 20793, 7599,
	      9536, 21778, 14102, 6938, 14648, 5919, 6472, 10128, 17940, 3226,
	      267, 5421, -27570, -25177, -26319, -28217, -28132, -23792,
	      -23249, -23001, -19033, 5427, 6340, 5673, 2458, 3625, 8646, 5186,
	      10382, 6826, 7442, 158, 2454, 9655, -27496, -27578, -31687,
	      11146, 18712, 10785, 21902, 10566, 9500, 11819, 11144, -15965,
	      -24170, -32488, -29277, 29097, -9567, -18794, -27116, 921, 6028,
	      2974, -5230, 6550, 15244, 14, 49, 3994, 2332, 6038, -31701, 520,
	      41, 9402, -4825, 28978, -25278, 30876, 13475, -28395, -24010,
	      -14027, -22454, -18158, 20503, -27618, -22258, -1776, -31468,
	      9616, 7333, 650, 784, 796, 813, -616, -3194, -8152, 1686, 29074,
	      22422, -32245, 29084, 22411, -22000, 3982, 7062, 10382, 3230,
	      8076, 20, 1936, 10, -22473, 4892, 5805, 5904, 10, 48, 1936, 5640,
	      8472, -25529 },
	    { 4626, 11146, 6439, 12, 4758, 10270, 7085, 4001, 317, 918, 9517,
	      9125, 3608, 16450, -32593, 22026, 2700, -22256, 10289, 3877,
	      -27999, 10770, 8982, 3753, 10275, 924, 8637, -26428, 26785,
	      -15202, 8736, 2994, -25710, 928, 6859, -25016, -5449, -14823,
	      -23401, 12, -22456, -27471, -11229, 21673, 57, -24046, -27190,
	      -22877, -30041, 20013, 21596, -31414, 29000, -11209, 6361,
	      -25552, -25450, -14174, -10998, -27357, 3249, 7465, 8913, 13774,
	      4584, 11728, 10454, 8123, 2619, 13756, -28220, -26323, -23901,
	      -31385, -32342, -29806, -29902, -24128, 933, 1189, 3873, 6057,
	      8590, 1812, 4895, -5366, 15019, 20793, 7599, 9536, 21778, 14102,
	      6938, 14648, 5919, 6472, 10128, 17940, 3226, 267, 5421, -27570,
	      -25177, -26319, -28217, -28132, -23792, -23249, -23001, -19033,
	      5427, 6340, 5673, 2458, 3625, 8646, 5186, 10382, 6826, 7442, 158,
	      2454, 9655, -27496, -27578, -31687, 11146, 18712, 10785, 21902,
	      10566, 9500, 11819, 11144, -15965, -24170, -32488, -29277, 29097,
	      -9567, -18794, -27116, 921, 6028, 2974, -5230, 6550, 15244, 14,
	      49, 3994, 2332, 6038, -31701, 520, 41, 9402, -4825, 28978,
	      -25278, 30876, 13475, -28395, -24010, -14027, -22454, -18158,
	      20503, -27618, -22258, -1776, -31468, 9616, 7333, 650, 784, 796,
	      813, -616, -3194, -8152, 1686, 29074, 22422, -32245, 29084,
	      22411, -22000, 3982, 7062, 10382, 3230, 8076, 20, 1936, 10,
	      -22473, 4892, 5805, 5904, 10, 48, 1936, 5640, 8472, -25529 },
	    { 4550, 4537, 5681, 5673, 5790, 6806, 8076, 4574, 4444, 4328, 7052,
	      4490 } };
    String d;
    static int e;
    static short[][][] f;
    byte g;
    String h;
    private static short[][] i
	= { { 6554, 115, 10304, 28, 5702, 7756, 5681, 4510, -31835, 22437,
	      2859, -11339, 16, 5157, 10446, 3658, -27314, -21965, 472, 580,
	      784, 21966, 28950, -15697, -14002 },
	    { 9104, 10275, 7595, 3610, 7975, 8526, 918, -26734, 24466, 10145,
	      -6882, 5027, 1457, 16565, -30545, 25486, 24, 5392, 10429, 3673,
	      -27335, -21957, 192, 687, 412, 21821, 28835, -15460, -14019,
	      7072, 3990, 309, 910, 9509, 9117, 3600, 16442, -32601, 22020,
	      2694, -22264, 10281, 3869, -28007, 10764, 8974, 3745, 10269, 914,
	      8629, -26438, 26779, -15208, 8728, 2982, -25718, 918, 6842,
	      -25030, -5462, -14833, -22386, 8, -22468, -27479, -11237, 21664,
	      45, -24054, -27207, -22887, -30051, 20003, 21584, -31426, 28990,
	      -11219, 6353, -25560, -25458, -14182, -11006, -27365, 3241, 7457,
	      8899, 13760, 4565, 11711, 10436, 8103, 2604, 13740, -28232,
	      -26333, -23910, -31403, -32352, -29812, -29909, -24137, 925,
	      1181, 3865, 6049, 8582, 1804, 4887, -5372, 15011, 20785, 7591,
	      9528, 21770, 14094, 6930, 14635, 5911, 6463, 10124, 17935, 3218,
	      262, 5413, -27579, -25189, -26331, -28236, -28144, -23804,
	      -23261, -23013, -19045, 5419, 6332, 5665, 2450, 3617, 8638, 5178,
	      10374, 6819, 7434, 150, 2446, 9647, -27504, -27586, -31695,
	      11142, 18704, 10775, 21898, 10554, 9492, 11811, 11140, -15978,
	      -24180, -32498, -29288, 29084, -9579, -18799, -27122, 913, 6024,
	      2966, -5238, 6542, 15240, 10, 39, 3986, 2324, 6030, -31709, 512,
	      33, 9394, -4833, 28967, -25290, 30866, 13466, -28403, -24022,
	      -14042, -22472, -18166, 20493, -27626, -22266, -1784, -31473,
	      9612, 7324, 646, 778, 786, 800, -624, -3198, -8164, 1678, 29068,
	      22412, -32253, 29075, 22404, -22006, 3974, 7054, 10376, 3222,
	      8070, 12, 1930, 2, -22481, 4884, 5797, 5900, 6, 40, 1932, 5638,
	      8466, -25537 },
	    { 25485, 9105, 10275, 7595, 3610, 7975, 8526, 918, -26734, 24466,
	      10145, -6882, 5027, 1457, 16565, -30545, 24, 5392, 10429, 3673,
	      -27335, -21957, 192, 687, 412, 21821, 28835, -15460, -14019,
	      7072, 3990, 309, 910, 9509, 9117, 3600, 16442, -32601, 22020,
	      2694, -22264, 10281, 3869, -28007, 10764, 8974, 3745, 10269, 914,
	      8629, -26438, 26779, -15208, 8728, 2982, -25718, 918, 6842,
	      -25030, -5462, -14833, -22386, 8, -22468, -27479, -11237, 21664,
	      45, -24054, -27207, -22887, -30051, 20003, 21584, -31426, 28990,
	      -11219, 6353, -25560, -25458, -14182, -11006, -27365, 3241, 7457,
	      8899, 13760, 4565, 11711, 10436, 8103, 2604, 13740, -28232,
	      -26333, -23910, -31403, -32352, -29812, -29909, -24137, 925,
	      1181, 3865, 6049, 8582, 1804, 4887, -5372, 15011, 20785, 7591,
	      9528, 21770, 14094, 6930, 14635, 5911, 6463, 10124, 17935, 3218,
	      262, 5413, -27579, -25189, -26331, -28236, -28144, -23804,
	      -23261, -23013, -19045, 5419, 6332, 5665, 2450, 3617, 8638, 5178,
	      10374, 6819, 7434, 150, 2446, 9647, -27504, -27586, -31695,
	      11142, 18704, 10775, 21898, 10554, 9492, 11811, 11140, -15978,
	      -24180, -32498, -29288, 29084, -9579, -18799, -27122, 913, 6024,
	      2966, -5238, 6542, 15240, 10, 39, 3986, 2324, 6030, -31709, 512,
	      33, 9394, -4833, 28967, -25290, 30866, 13466, -28403, -24022,
	      -14042, -22472, -18166, 20493, -27626, -22266, -1784, -31473,
	      9612, 7324, 646, 778, 786, 800, -624, -3198, -8164, 1678, 29068,
	      22412, -32253, 29075, 22404, -22006, 3974, 7054, 10376, 3222,
	      8070, 12, 1930, 2, -22481, 4884, 5797, 5900, 6, 40, 1932, 5638,
	      8466, -25537 },
	    { 4620, 11140, 6433, 6, 4752, 10264, 7072, 3990, 309, 910, 9509,
	      9117, 3600, 16442, -32601, 22020, 2694, -22264, 10281, 3869,
	      -28007, 10764, 8974, 3745, 10269, 914, 8629, -26438, 26779,
	      -15208, 8728, 2982, -25718, 918, 6842, -25030, -5462, -14833,
	      -22386, 8, -22468, -27479, -11237, 21664, 45, -24054, -27207,
	      -22887, -30051, 20003, 21584, -31426, 28990, -11219, 6353,
	      -25560, -25458, -14182, -11006, -27365, 3241, 7457, 8899, 13760,
	      4565, 11711, 10436, 8103, 2604, 13740, -28232, -26333, -23910,
	      -31403, -32352, -29812, -29909, -24137, 925, 1181, 3865, 6049,
	      8582, 1804, 4887, -5372, 15011, 20785, 7591, 9528, 21770, 14094,
	      6930, 14635, 5911, 6463, 10124, 17935, 3218, 262, 5413, -27579,
	      -25189, -26331, -28236, -28144, -23804, -23261, -23013, -19045,
	      5419, 6332, 5665, 2450, 3617, 8638, 5178, 10374, 6819, 7434, 150,
	      2446, 9647, -27504, -27586, -31695, 11142, 18704, 10775, 21898,
	      10554, 9492, 11811, 11140, -15978, -24180, -32498, -29288, 29084,
	      -9579, -18799, -27122, 913, 6024, 2966, -5238, 6542, 15240, 10,
	      39, 3986, 2324, 6030, -31709, 512, 33, 9394, -4833, 28967,
	      -25290, 30866, 13466, -28403, -24022, -14042, -22472, -18166,
	      20493, -27626, -22266, -1784, -31473, 9612, 7324, 646, 778, 786,
	      800, -624, -3198, -8164, 1678, 29068, 22412, -32253, 29075,
	      22404, -22006, 3974, 7054, 10376, 3222, 8070, 12, 1930, 2,
	      -22481, 4884, 5797, 5900, 6, 40, 1932, 5638, 8466, -25537 },
	    { 4540, 4529, 5674, 5667, 5785, 6802, 8072, 4562, 4437, 4317, 5896,
	      4488 } };
    static int j;
    private static short[][] k = { new short[0], new short[0], new short[0],
				   new short[0], new short[0] };
    static int l;
    static int m;
    int n;
    static int o;
    
    static final void a(String string, byte i) {
	o++;
	if (!string.equals("")) {
	    up.B++;
	    if (i < -28) {
		tba var_tba = jga.sendGameOutPacket(qga.a, pca.isaac, (byte) 96);
		((tba) var_tba).loginStream.writeByte(cq.a(string, (byte) 2), (byte) -120);
		((tba) var_tba).loginStream.writeString(string, -119);
		ud.a(var_tba, (byte) -36);
	    }
	}
    }
    
    static final void a(int i, int i_0_, int i_1_, int i_2_, int i_3_,
			byte i_4_, int i_5_, int i_6_, int i_7_) {
	if (i_4_ != 46)
	    c = null;
	pfa.a(i_6_, i_2_, 0, -112, i_1_, i_5_, i_7_, i_3_, i_0_, i);
	l++;
    }
    
    static final int a(int i, int i_8_) {
	j++;
	int i_9_ = 0x3f & i;
	if (i_8_ != -27579)
	    k = null;
	int i_10_ = i >> 6 & 0x3;
	if (i_9_ != 18) {
	    if (i_9_ == 19 || i_9_ == 21) {
		if (i_10_ == 0)
		    return 16;
		if (i_10_ == 1)
		    return 32;
		if (i_10_ == 2)
		    return 64;
		if (i_10_ == 3)
		    return 128;
	    }
	} else {
	    if (i_10_ == 0)
		return 1;
	    if (i_10_ == 1)
		return 2;
	    if (i_10_ == 2)
		return 4;
	    if (i_10_ == 3)
		return 8;
	}
	return 0;
    }
    
    static final void a(byte i, int i_11_, String[] strings, int i_12_,
			short[] is) {
	if (i_12_ > i_11_) {
	    int i_13_ = (i_11_ + i_12_) / 2;
	    int i_14_ = i_11_;
	    String string = strings[i_13_];
	    strings[i_13_] = strings[i_12_];
	    strings[i_12_] = string;
	    short i_15_ = is[i_13_];
	    is[i_13_] = is[i_12_];
	    is[i_12_] = i_15_;
	    for (int i_16_ = i_11_; i_12_ > i_16_; i_16_++) {
		if (string == null
		    || (strings[i_16_] != null
			&& (0x1 & i_16_) > strings[i_16_].compareTo(string))) {
		    String string_17_ = strings[i_16_];
		    strings[i_16_] = strings[i_14_];
		    strings[i_14_] = string_17_;
		    short i_18_ = is[i_16_];
		    is[i_16_] = is[i_14_];
		    is[i_14_++] = i_18_;
		}
	    }
	    strings[i_12_] = strings[i_14_];
	    strings[i_14_] = string;
	    is[i_12_] = is[i_14_];
	    is[i_14_] = i_15_;
	    a((byte) 54, i_11_, strings, i_14_ - 1, is);
	    a((byte) 54, i_14_ + 1, strings, i_12_, is);
	}
	if (i != 54)
	    f = null;
	m++;
    }
    
    public static void a(int i) {
	c = null;
	if (i != -26323)
	    a(69, 64, 121, -24, -95, (byte) 70, 28, 71, 104);
	k = null;
	f = null;
	iaa.i = null;
    }
    
    static final void a(int i, int i_19_, int i_20_, int i_21_, int i_22_,
			byte i_23_) {
	e++;
	kg.a(i_19_, wh.O[i++], i_20_, i_22_, i_23_ - 54);
	kg.a(i_19_, wh.O[i_21_--], i_20_, i_22_, i_23_ + 178);
	for (int i_24_ = i; i_21_ >= i_24_; i_24_++) {
	    int[] is = wh.O[i_24_];
	    is[i_19_] = is[i_22_] = i_20_;
	}
	if (i_23_ != -63)
	    a(106);
    }
    
    public iaa() {
	/* empty */
    }
    
    static {
	f = new short[][][] { c, i, k };
    }
}
